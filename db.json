{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/uploads/avator.jpg","path":"uploads/avator.jpg","modified":1,"renderable":0},{"_id":"source/uploads/alipay_reward.png","path":"uploads/alipay_reward.png","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"source/uploads/wechat_reward.png","path":"uploads/wechat_reward.png","modified":1,"renderable":0},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1490079164000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1490079164000},{"_id":"themes/next/.gitignore","hash":"5f09fca02e030b7676c1d312cd88ce8fbccf381c","modified":1490079164000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1490079164000},{"_id":"themes/next/.javascript_ignore","hash":"f9ea3c5395f8feb225a24e2c32baa79afda30c16","modified":1490079164000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1490079164000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1490079164000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1490079164000},{"_id":"themes/next/README.en.md","hash":"4ece25ee5f64447cd522e54cb0fffd9a375f0bd4","modified":1490079164000},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1490079164000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1490079164000},{"_id":"themes/next/.travis.yml","hash":"c42d9608c8c7fe90de7b1581a8dc3886e90c179e","modified":1490079164000},{"_id":"themes/next/bower.json","hash":"5abc236d9cc2512f5457ed57c1fba76669eb7399","modified":1490079164000},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1490079164000},{"_id":"themes/next/_config.yml","hash":"1b703e636000f8771f16f2ca22fcfd15d3e3f58c","modified":1490079912000},{"_id":"themes/next/package.json","hash":"7e87b2621104b39a30488654c2a8a0c6a563574b","modified":1490079164000},{"_id":"source/_posts/tmux使用.md","hash":"8d5c1042da84fcae3e8170a1f8c3bd48bcff12da","modified":1492452038000},{"_id":"source/_posts/linux进程资源信息.md","hash":"2caa77a19a17917c9f988dfd95fd1b548d1deb70","modified":1492449127000},{"_id":"source/_posts/javascript对象.md","hash":"d16c3660945286610fb4462073dff6b5559f9587","modified":1492451714000},{"_id":"source/tags/index.md","hash":"4d86dcedd5d85895a5320a1b3f9f473c003f7dbe","modified":1490077599000},{"_id":"source/categories/index.md","hash":"2e1eb26658c2028ba6b540e4cbd433829345b492","modified":1490077599000},{"_id":"source/uploads/avator.jpg","hash":"0ef99616eccda15af268f6e96cba95369122b1e9","modified":1490077599000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ab257af816986cd0e53f9527a92d5934ac70ae9","modified":1490079164000},{"_id":"source/uploads/alipay_reward.png","hash":"35d92ffe91e7c47200654b3e2cd018504a10608a","modified":1490077599000},{"_id":"source/_posts/fabric快速入门.md","hash":"40d92bb2b77150883cf01e6ce5fec6466c786ddd","modified":1492451882000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"c2024ded82143807c28a299c5fe6b927ef3525ff","modified":1490079164000},{"_id":"themes/next/languages/default.yml","hash":"4cc6aeb1ac09a58330e494c8771773758ab354af","modified":1490079164000},{"_id":"themes/next/languages/en.yml","hash":"e7def07a709ef55684490b700a06998c67f35f39","modified":1490079164000},{"_id":"themes/next/languages/ko.yml","hash":"be150543379150f78329815af427bf152c0e9431","modified":1490079164000},{"_id":"themes/next/languages/pt-BR.yml","hash":"958e49571818a34fdf4af3232a07a024050f8f4e","modified":1490079164000},{"_id":"themes/next/languages/de.yml","hash":"306db8c865630f32c6b6260ade9d3209fbec8011","modified":1490079164000},{"_id":"themes/next/languages/ja.yml","hash":"1c3a05ab80a6f8be63268b66da6f19da7aa2c638","modified":1490079164000},{"_id":"themes/next/languages/id.yml","hash":"2835ea80dadf093fcf47edd957680973f1fb6b85","modified":1490079164000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"3c0c7dfd0256457ee24df9e9879226c58cb084b5","modified":1490079164000},{"_id":"themes/next/languages/pt.yml","hash":"36c8f60dacbe5d27d84d0e0d6974d7679f928da0","modified":1490079164000},{"_id":"themes/next/layout/_layout.swig","hash":"909d68b164227fe7601d82e2303bf574eb754172","modified":1490079164000},{"_id":"themes/next/languages/zh-tw.yml","hash":"0b2c18aa76570364003c8d1cd429fa158ae89022","modified":1490079164000},{"_id":"themes/next/languages/ru.yml","hash":"7462c3017dae88e5f80ff308db0b95baf960c83f","modified":1490079164000},{"_id":"themes/next/languages/zh-hk.yml","hash":"1c917997413bf566cb79e0975789f3c9c9128ccd","modified":1490079164000},{"_id":"themes/next/layout/page.swig","hash":"3727fab9dadb967e9c2204edca787dc72264674a","modified":1490079164000},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1490079164000},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1490079164000},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1490079164000},{"_id":"themes/next/languages/fr-FR.yml","hash":"24180322c83587a153cea110e74e96eacc3355ad","modified":1490079164000},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1490079164000},{"_id":"themes/next/layout/schedule.swig","hash":"234dc8c3b9e276e7811c69011efd5d560519ef19","modified":1490079164000},{"_id":"themes/next/scripts/merge-configs.js","hash":"13c8b3a2d9fce06c2488820d9248d190c8100e0a","modified":1490079164000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1490079164000},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1490079164000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1490079164000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1490079164000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1490079164000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1490079164000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1490079164000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"5864f5567ba5efeabcf6ea355013c0b603ee07f2","modified":1490079164000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"b16fcbf0efd20c018d7545257a8533c497ea7647","modified":1490079164000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1490079164000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1490079164000},{"_id":"themes/next/layout/_macro/post.swig","hash":"b888932e2123d4ece70c376cb8f3f1b04a9d4f45","modified":1490079164000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"911b99ba0445b2c07373128d87a4ef2eb7de341a","modified":1490079164000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"7172c6053118b7c291a56a7860128a652ae66b83","modified":1490079164000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1490079164000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"3543660367ff829abb3c56e0a9c04c209bcfbf8d","modified":1490079164000},{"_id":"themes/next/layout/_partials/head.swig","hash":"a0eafe24d1dae30c790ae35612154b3ffbbd5cce","modified":1490079164000},{"_id":"themes/next/layout/_partials/header.swig","hash":"a1ffbb691dfad3eaf2832a11766e58a179003b8b","modified":1490079164000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1490079164000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1490079164000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1490079164000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1490079164000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"4512867d80d9eddfc3a0f5fea3c456f33aa9d522","modified":1490079164000},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1490079164000},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1490079164000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1490079164000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1490079164000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1490079164000},{"_id":"themes/next/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1490079164000},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1490079164000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1490079164000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1490079164000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1490079164000},{"_id":"themes/next/scripts/tags/note.js","hash":"6752925eedbdb939d8ec4d11bdfb75199f18dd70","modified":1490079164000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1490079164000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1490079164000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1490079164000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1490079164000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1490079164000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1490079164000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1490079164000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1490079164000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1490079164000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1490079164000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1490079164000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1490079164000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1490079164000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1490079164000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1490079164000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1490079164000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1490079164000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1490079164000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1490079164000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1490079164000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1490079164000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1490079164000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"2d1075f4cabcb3956b7b84a8e210f5a66f0a5562","modified":1490079164000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1490079164000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1490079164000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1490079164000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1490079164000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1490079164000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1490079164000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1490079164000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1490079164000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1490079164000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1490079164000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1490079164000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1490079164000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1490079164000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1490079164000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1490079164000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1490079164000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1490079164000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"3358d11b9a26185a2d36c96049e4340e701646e4","modified":1490079164000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1490079164000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"a652f202bd5b30c648c228ab8f0e997eb4928e44","modified":1490079164000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"fb1d04ede838b52ca7541973f86c3810f1ad396e","modified":1490079164000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1490079164000},{"_id":"themes/next/layout/_third-party/comments/gentie.swig","hash":"03592d1d731592103a41ebb87437fe4b0a4c78ca","modified":1490079164000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1490079164000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1490079164000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"abb92620197a16ed2c0775edf18a0f044a82256e","modified":1490079164000},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1490079164000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"7240f2e5ec7115f8abbbc4c9ef73d4bed180fdc7","modified":1490079164000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"af9dd8a4aed7d06cf47b363eebff48850888566c","modified":1490079164000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1490079164000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"f4dbd4c896e6510ded8ebe05394c28f8a86e71bf","modified":1490079164000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1490079164000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1490079164000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1490079164000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1490079164000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1490079164000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"06f432f328a5b8a9ef0dbd5301b002aba600b4ce","modified":1490079164000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1490079164000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"28a7f84242ca816a6452a0a79669ca963d824607","modified":1490079164000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1490079164000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"aab7be0a6e2724b3faa9338db93c19556c559625","modified":1490079164000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1490079164000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1490079164000},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1490079164000},{"_id":"themes/next/source/js/src/post-details.js","hash":"af7a417dd1cb02465a7b98211653e7c6192e6d55","modified":1490079164000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1490079164000},{"_id":"themes/next/source/js/src/utils.js","hash":"e13c9ccf70d593bdf3b8cc1d768f595abd610e6e","modified":1490079164000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1490079164000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1490079164000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1490079164000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1490079164000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1490079164000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1490079164000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1490079164000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1490079164000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1490079164000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1490079164000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1490079164000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1490079164000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1490079164000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1490079164000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1490079164000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1490079164000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1490079164000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1490079164000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1490079164000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1490079164000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1490079164000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1490079164000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1490079164000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1490079164000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1490079164000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1490079164000},{"_id":"source/uploads/wechat_reward.png","hash":"72350b4a24cfcfab6ec80794e954e31a1dc29bcc","modified":1490077599000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1490079164000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1490079164000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"ef089a407c90e58eca10c49bc47ec978f96e03ba","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"59ad08bcc6fe9793594869ac2b4c525021453e78","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1490079164000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1490079164000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1490079164000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"7804e31c44717c9a9ddf0f8482b9b9c1a0f74538","modified":1490079164000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1490079164000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1490079164000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1490079164000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1490079164000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1490079164000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fda14bc35be2e1b332809b55b3d07155a833dbf4","modified":1490079164000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1490079164000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1490079164000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1490079164000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1490079164000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1490079164000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1490079164000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1490079164000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1490079164000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1490079164000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"1eb34b9c1f6d541605ff23333eeb133e1c4daf17","modified":1490079164000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1490079164000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1490079164000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1490079164000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"e3e23751d4ad24e8714b425d768cf68e37de7ded","modified":1490079164000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1490079164000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1490079164000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1490079164000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1490079164000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1490079164000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1490079164000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1490079164000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1490079164000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1490079164000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1490079164000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1490079164000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1490079164000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1490079164000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1490079164000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1490079164000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1490079164000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1490079164000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1490079164000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1490079164000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1490079164000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"755b04edbbfbdd981a783edb09c9cc34cb79cea7","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"5f6ea57aabfa30a437059bf8352f1ad829dbd4ff","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a2ec22ef4a6817bbb2abe8660fcd99fe4ca0cc5e","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"beccb53dcd658136fb91a0c5678dea8f37d6e0b6","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"b9a2e76f019a5941191f1263b54aef7b69c48789","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"8c0276883398651336853d5ec0e9da267a00dd86","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"dd310c2d999185e881db007360176ee2f811df10","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"74d0ba86f698165d13402670382a822c8736a556","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/third-party/gentie.styl","hash":"586a3ec0f1015e7207cd6a2474362e068c341744","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"173490e21bece35a34858e8e534cf86e34561350","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1490079164000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"42348219db93a85d2ee23cb06cebd4d8ab121726","modified":1490079164000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1490079164000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1490079164000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1490079164000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1490079164000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1490079164000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1490079164000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1490079164000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1490079164000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1490079164000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1490079164000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1490079164000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1490079164000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1490079164000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1490079164000},{"_id":"public/atom.xml","hash":"7fe14a76f0bafd0da918a81a7c2a7404a3de4332","modified":1492452066674},{"_id":"public/tags/index.html","hash":"d6768e0ae7cee8fe247cdb429c0e52dd153db5c2","modified":1492452066701},{"_id":"public/categories/index.html","hash":"fe203bd526636a54109884a6a846d1d17940e8e6","modified":1492452066701},{"_id":"public/archives/index.html","hash":"2286dc945e6e4b0b8f8055dbc6f4393d8a958fbf","modified":1492452066701},{"_id":"public/archives/2016/index.html","hash":"c089aac1be2a815bfed834abfedea4f9aba34c3e","modified":1492452066701},{"_id":"public/archives/2016/02/index.html","hash":"026e351cf0ffcb8bef8b5e4951438c58a3483e37","modified":1492452066701},{"_id":"public/archives/2017/index.html","hash":"a97c9409b8c6c42a9c496b1f8c70c74ace813263","modified":1492452066701},{"_id":"public/archives/2017/03/index.html","hash":"06c58f09c50dbaf9585f3026f93c57d6a5faf913","modified":1492452066702},{"_id":"public/archives/2017/04/index.html","hash":"251ed7f2d74b008d79a3d8404044437bc73a47a8","modified":1492452066702},{"_id":"public/categories/linux/index.html","hash":"dbd88d0063b0e6593aaadc8a2f7a6bb29d07ded5","modified":1492452066702},{"_id":"public/categories/js/index.html","hash":"7531007bf685ffc4df5df1d293662d6fdba7052f","modified":1492452066702},{"_id":"public/categories/python/index.html","hash":"a3fa7bb784442e25ea9fa31fe7ff7ecf9cb91587","modified":1492452066702},{"_id":"public/tags/工具/index.html","hash":"1bde3cb2482d9aa3d6682cb38b5f2a986c3be9e3","modified":1492452066702},{"_id":"public/tags/linux/index.html","hash":"652d83370d9049d4ea12e00164d84f0984e038b6","modified":1492452066702},{"_id":"public/tags/js/index.html","hash":"420018868a62ef687c47b2f56883682cc75f0767","modified":1492452066702},{"_id":"public/tags/python/index.html","hash":"0ecd6dda8175678292cced96d6cea860909b65fa","modified":1492452066702},{"_id":"public/tags/运维/index.html","hash":"94909aba700f9cec3d65733f4fd21f8096428d09","modified":1492452066702},{"_id":"public/2017/04/17/linux进程资源信息/index.html","hash":"47d90363dba5d58a847fb28242788c702842a438","modified":1492452066702},{"_id":"public/2017/03/21/tmux使用/index.html","hash":"471260a6e8870ec627b9c226462ab5374a5787b3","modified":1492452066702},{"_id":"public/2016/02/14/fabric快速入门/index.html","hash":"1084a35d41792470fa1db295c2fbeb1f7d8fa26b","modified":1492452066702},{"_id":"public/2016/02/11/javascript对象/index.html","hash":"67a1dda9e6b1e69afbd20e403bfd87d1418c7a9d","modified":1492452066702},{"_id":"public/index.html","hash":"97aec768760b3ea54ffe6e36c374fba95c32aa40","modified":1492452066702},{"_id":"public/uploads/avator.jpg","hash":"0ef99616eccda15af268f6e96cba95369122b1e9","modified":1492452066716},{"_id":"public/uploads/alipay_reward.png","hash":"35d92ffe91e7c47200654b3e2cd018504a10608a","modified":1492452066716},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1492452066717},{"_id":"public/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1492452066717},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1492452066717},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1492452066717},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1492452066717},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1492452066717},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1492452066718},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1492452066718},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1492452066718},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1492452066718},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1492452066718},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1492452066718},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1492452066718},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1492452066718},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1492452066718},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1492452066718},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1492452066718},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1492452066718},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1492452066718},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1492452066718},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1492452066718},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1492452066718},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1492452066718},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1492452066718},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1492452068509},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1492452068527},{"_id":"public/js/src/bootstrap.js","hash":"aab7be0a6e2724b3faa9338db93c19556c559625","modified":1492452068539},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1492452068539},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1492452068539},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1492452068539},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1492452068539},{"_id":"public/js/src/post-details.js","hash":"af7a417dd1cb02465a7b98211653e7c6192e6d55","modified":1492452068539},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1492452068539},{"_id":"public/js/src/utils.js","hash":"e13c9ccf70d593bdf3b8cc1d768f595abd610e6e","modified":1492452068540},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1492452068540},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1492452068540},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1492452068540},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1492452068540},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1492452068540},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1492452068540},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1492452068540},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1492452068540},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1492452068540},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1492452068540},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1492452068540},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1492452068540},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1492452068540},{"_id":"public/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1492452068540},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1492452068540},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1492452068540},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1492452068540},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1492452068540},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1492452068540},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1492452068540},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1492452068540},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1492452068540},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1492452068540},{"_id":"public/css/main.css","hash":"46e8815d3e69c0a22de176e74380851f948b32fc","modified":1492452068540},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1492452068540},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1492452068540},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1492452068541},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1492452068541},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1492452068541},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1492452068541},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1492452068541},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1492452068541},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1492452068541},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1492452068541},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1492452068541},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1492452068541},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1492452068541},{"_id":"public/uploads/wechat_reward.png","hash":"72350b4a24cfcfab6ec80794e954e31a1dc29bcc","modified":1492452068551},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1492452068560}],"Category":[{"name":"linux","_id":"cj1mffb1b0004u86ko5z3km6n"},{"name":"js","_id":"cj1mffb2e000cu86kkhkziztx"},{"name":"python","_id":"cj1mffb2i000gu86kkz5hll32"}],"Data":[],"Page":[{"title":"tags","date":"2017-03-21T05:09:34.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-03-21 13:09:34\ntype: \"tags\"\ncomments: false\n---\n","updated":"2017-03-21T06:26:39.000Z","path":"tags/index.html","layout":"page","_id":"cj1mffb110001u86kq7is66tn","content":"","excerpt":"","more":""},{"title":"categories","date":"2017-03-21T05:10:52.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-03-21 13:10:52\ntype: \"categories\"\ncomments: false\n---\n","updated":"2017-03-21T06:26:39.000Z","path":"categories/index.html","layout":"page","_id":"cj1mffb180003u86ksoc5qgvp","content":"","excerpt":"","more":""}],"Post":[{"title":"tmux使用","date":"2017-03-21T04:34:33.000Z","_content":"\n上篇讲到了 [iTerm2的基本使用](http://www.jianshu.com/p/3436bcb17a03) ，iTerm2能够让我们迅速从不同的窗口中切换。通过 iTerm2 ，我们可以在不同窗口中愉快用 ssh 登录到远处服务器去操作，但由于临时断网或其他原因，远程连接就会中断，如想继续之前的工作，又得重头来过T_T ,但是iTerm2有个 tmux 的配合，再也不用担心异常中断了，它可以让我们迅速恢复到之前的现场环境。\n\n![tmux 窗格](http://upload-images.jianshu.io/upload_images/3778142-7340859f88245de4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n[tmux](http://tmux.github.io/) 是一个终端复用软件，它也有类似iTerm2的分屏功能。不仅如此，我们还可以通过tmux随时断开会话或者接入会话，接下一起来看下tmux 一些基本使用方法。\n\n### 入门须知\n- server服务器：输入tmux命令时就开启了一个服务器，可以开启多个会话。\n- session: 管理多个window的会话\n- window: 一个window就是整个屏幕\n- pane: 一个window可以被横向或纵向分割为多个窗格\n\n即一个session可包含多个窗口，一个窗口中可包含多个窗格。\n一般情况下 tmux 中所有的快捷键都需要和前缀快捷键 ```ctrl + b``` 来组合使用。\n\n\n### 安装tmux\n``` shell\nbrew install tmux\n```\n\n ### 运行 tmux\n开启了一个 tmux 的会话，默认会新建一个窗口和一个窗格，窗口左下角会有一些标识信息。\n``` shell\ntmux\n```\n\n![tmux默认窗口](http://upload-images.jianshu.io/upload_images/3778142-64ef52c19d9ef73e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### 会话常用命令\n``` shell\n#在正常终端模式下使用 tmux 建立会话并命名\ntmux new -s abc\n\n#休眠会话 返回主shell- 在正常终端模式下，使某个编号的会话强制休眠，编号用的是 tmux ls 命令时所列出的每一行的最前面的那个编号\ntmux detach -t 编号\ntmux detach -s 名称\n\n#恢复会话\ntmux attach -t 编号\n## 也可简写成\ntmux a -t 编号\ntmux attach -s test\n\n#重命名会话名称\ntmux rename -t test dev\n\n#关闭会话\ntmux kill-session -t abc\n\n# 完全退出，关闭所有的会话\ntmux kill-server\n```\n\n\n### 窗口常用命令\n假设当前默认前缀为 : Ctrl+b\n ``` shell\n{前缀} c 创建新窗口\n\n{前缀} n 选择下一个窗口\n\n{前缀} p 选择前一个窗口\n\n{前缀} l 最近一次活跃窗口之间进行切换\n\n{前缀} 0~9 选择几号窗口\n\n{前缀} , 重命名窗口\n\n{前缀} . 更改窗口的编号，但只能更改成未使用的编号，所以要交换窗口的话，得更改多次进行交换\n\n{前缀} & 关闭窗口\n\n{前缀} w 以菜单方式显示及选择窗口\n\n{前缀} f 在所有窗口中查找内容\n```\n\n\n### 窗格常用命令\n``` shell\n{前缀} \" 模向分隔面板\n\n{前缀} % 纵向分隔面板\n\n{前缀} o 跳到下一个分隔面板\n\n{前缀} x 关闭面板\n\n{前缀} ; 切换到最后一个使用的面板\n\n{前缀} 上下键 上一个及下一个分隔面板\n\n{前缀} 空格键 切换面板布局\n\n```\n\n### 其他\n``` shell\n{前缀} t 显示时钟\n\n{前缀} m 鼠标切换窗格\n```\n看到这里，尝试后是不是觉得很奇怪，自己打开的窗口，怎么和本页面第一张图不一样！不一样！ 首先恭喜你已经掌握了tmux基本操作，接下来咱们看下tmux高级用法。\n\n\n\n###高级配置\ntmux 自定义配置[参见 .tmux](https://github.com/gpakosz/.tmux)\n\n---\ntmux窗口左下角状态显示用到了Powerline及Powerline字体，接着咱们来美化下tmux窗口。\n\n1.安装 Python\n```shell\nbrew install python\n```\n2.下载 [powerline](https://github.com/powerline/powerline)\n```shell\nsudo pip install powerline-status\n```\n\n3.配置 Powerline 到终端\n```shell\n#查看安装路径\npip show powerline-status\n\n#配置 .bash_profile 文件,添加以下行\n. /Powerline安装路径/powerline/bindings/bash/powerline.sh\nsource .bash_profile\n```\n\n4.安装专用于 [Powerline](https://github.com/powerline/fonts) 的字体\n然后在 iTerm 2的偏好设置里的Profile选项卡里把字体设置为以 Powerline 结尾的字体就大功告成了。\n\n\nPS：如果满足不了你的操作体验，你还可以：\n安装配色方案 [solarized](https://github.com/altercation/solarized)\n安装zsh主题 [agnoster-fcamblor](https://github.com/fcamblor/oh-my-zsh-agnoster-fcamblor)","source":"_posts/tmux使用.md","raw":"---\ntitle: tmux使用\ndate: 2017-03-21 12:34:33\ntags:\n - 工具\n \ncategory: \n    - linux\n---\n\n上篇讲到了 [iTerm2的基本使用](http://www.jianshu.com/p/3436bcb17a03) ，iTerm2能够让我们迅速从不同的窗口中切换。通过 iTerm2 ，我们可以在不同窗口中愉快用 ssh 登录到远处服务器去操作，但由于临时断网或其他原因，远程连接就会中断，如想继续之前的工作，又得重头来过T_T ,但是iTerm2有个 tmux 的配合，再也不用担心异常中断了，它可以让我们迅速恢复到之前的现场环境。\n\n![tmux 窗格](http://upload-images.jianshu.io/upload_images/3778142-7340859f88245de4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n[tmux](http://tmux.github.io/) 是一个终端复用软件，它也有类似iTerm2的分屏功能。不仅如此，我们还可以通过tmux随时断开会话或者接入会话，接下一起来看下tmux 一些基本使用方法。\n\n### 入门须知\n- server服务器：输入tmux命令时就开启了一个服务器，可以开启多个会话。\n- session: 管理多个window的会话\n- window: 一个window就是整个屏幕\n- pane: 一个window可以被横向或纵向分割为多个窗格\n\n即一个session可包含多个窗口，一个窗口中可包含多个窗格。\n一般情况下 tmux 中所有的快捷键都需要和前缀快捷键 ```ctrl + b``` 来组合使用。\n\n\n### 安装tmux\n``` shell\nbrew install tmux\n```\n\n ### 运行 tmux\n开启了一个 tmux 的会话，默认会新建一个窗口和一个窗格，窗口左下角会有一些标识信息。\n``` shell\ntmux\n```\n\n![tmux默认窗口](http://upload-images.jianshu.io/upload_images/3778142-64ef52c19d9ef73e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### 会话常用命令\n``` shell\n#在正常终端模式下使用 tmux 建立会话并命名\ntmux new -s abc\n\n#休眠会话 返回主shell- 在正常终端模式下，使某个编号的会话强制休眠，编号用的是 tmux ls 命令时所列出的每一行的最前面的那个编号\ntmux detach -t 编号\ntmux detach -s 名称\n\n#恢复会话\ntmux attach -t 编号\n## 也可简写成\ntmux a -t 编号\ntmux attach -s test\n\n#重命名会话名称\ntmux rename -t test dev\n\n#关闭会话\ntmux kill-session -t abc\n\n# 完全退出，关闭所有的会话\ntmux kill-server\n```\n\n\n### 窗口常用命令\n假设当前默认前缀为 : Ctrl+b\n ``` shell\n{前缀} c 创建新窗口\n\n{前缀} n 选择下一个窗口\n\n{前缀} p 选择前一个窗口\n\n{前缀} l 最近一次活跃窗口之间进行切换\n\n{前缀} 0~9 选择几号窗口\n\n{前缀} , 重命名窗口\n\n{前缀} . 更改窗口的编号，但只能更改成未使用的编号，所以要交换窗口的话，得更改多次进行交换\n\n{前缀} & 关闭窗口\n\n{前缀} w 以菜单方式显示及选择窗口\n\n{前缀} f 在所有窗口中查找内容\n```\n\n\n### 窗格常用命令\n``` shell\n{前缀} \" 模向分隔面板\n\n{前缀} % 纵向分隔面板\n\n{前缀} o 跳到下一个分隔面板\n\n{前缀} x 关闭面板\n\n{前缀} ; 切换到最后一个使用的面板\n\n{前缀} 上下键 上一个及下一个分隔面板\n\n{前缀} 空格键 切换面板布局\n\n```\n\n### 其他\n``` shell\n{前缀} t 显示时钟\n\n{前缀} m 鼠标切换窗格\n```\n看到这里，尝试后是不是觉得很奇怪，自己打开的窗口，怎么和本页面第一张图不一样！不一样！ 首先恭喜你已经掌握了tmux基本操作，接下来咱们看下tmux高级用法。\n\n\n\n###高级配置\ntmux 自定义配置[参见 .tmux](https://github.com/gpakosz/.tmux)\n\n---\ntmux窗口左下角状态显示用到了Powerline及Powerline字体，接着咱们来美化下tmux窗口。\n\n1.安装 Python\n```shell\nbrew install python\n```\n2.下载 [powerline](https://github.com/powerline/powerline)\n```shell\nsudo pip install powerline-status\n```\n\n3.配置 Powerline 到终端\n```shell\n#查看安装路径\npip show powerline-status\n\n#配置 .bash_profile 文件,添加以下行\n. /Powerline安装路径/powerline/bindings/bash/powerline.sh\nsource .bash_profile\n```\n\n4.安装专用于 [Powerline](https://github.com/powerline/fonts) 的字体\n然后在 iTerm 2的偏好设置里的Profile选项卡里把字体设置为以 Powerline 结尾的字体就大功告成了。\n\n\nPS：如果满足不了你的操作体验，你还可以：\n安装配色方案 [solarized](https://github.com/altercation/solarized)\n安装zsh主题 [agnoster-fcamblor](https://github.com/fcamblor/oh-my-zsh-agnoster-fcamblor)","slug":"tmux使用","published":1,"updated":"2017-04-17T18:00:38.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1mffb0p0000u86k42ywrvgt","content":"<p>上篇讲到了 <a href=\"http://www.jianshu.com/p/3436bcb17a03\" target=\"_blank\" rel=\"external\">iTerm2的基本使用</a> ，iTerm2能够让我们迅速从不同的窗口中切换。通过 iTerm2 ，我们可以在不同窗口中愉快用 ssh 登录到远处服务器去操作，但由于临时断网或其他原因，远程连接就会中断，如想继续之前的工作，又得重头来过T_T ,但是iTerm2有个 tmux 的配合，再也不用担心异常中断了，它可以让我们迅速恢复到之前的现场环境。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/3778142-7340859f88245de4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"tmux 窗格\"></p>\n<p><a href=\"http://tmux.github.io/\" target=\"_blank\" rel=\"external\">tmux</a> 是一个终端复用软件，它也有类似iTerm2的分屏功能。不仅如此，我们还可以通过tmux随时断开会话或者接入会话，接下一起来看下tmux 一些基本使用方法。</p>\n<h3 id=\"入门须知\"><a href=\"#入门须知\" class=\"headerlink\" title=\"入门须知\"></a>入门须知</h3><ul>\n<li>server服务器：输入tmux命令时就开启了一个服务器，可以开启多个会话。</li>\n<li>session: 管理多个window的会话</li>\n<li>window: 一个window就是整个屏幕</li>\n<li>pane: 一个window可以被横向或纵向分割为多个窗格</li>\n</ul>\n<p>即一个session可包含多个窗口，一个窗口中可包含多个窗格。<br>一般情况下 tmux 中所有的快捷键都需要和前缀快捷键 <figure class=\"highlight plain\"><figcaption><span>+ b``` 来组合使用。</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">### 安装tmux</div><div class=\"line\">``` shell</div><div class=\"line\">brew install tmux</div></pre></td></tr></table></figure></p>\n<h3 id=\"运行-tmux\"><a href=\"#运行-tmux\" class=\"headerlink\" title=\"运行 tmux\"></a>运行 tmux</h3><p>开启了一个 tmux 的会话，默认会新建一个窗口和一个窗格，窗口左下角会有一些标识信息。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">tmux</div></pre></td></tr></table></figure></p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/3778142-64ef52c19d9ef73e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"tmux默认窗口\"></p>\n<h3 id=\"会话常用命令\"><a href=\"#会话常用命令\" class=\"headerlink\" title=\"会话常用命令\"></a>会话常用命令</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">#在正常终端模式下使用 tmux 建立会话并命名</div><div class=\"line\">tmux new -s abc</div><div class=\"line\"></div><div class=\"line\">#休眠会话 返回主shell- 在正常终端模式下，使某个编号的会话强制休眠，编号用的是 tmux ls 命令时所列出的每一行的最前面的那个编号</div><div class=\"line\">tmux detach -t 编号</div><div class=\"line\">tmux detach -s 名称</div><div class=\"line\"></div><div class=\"line\">#恢复会话</div><div class=\"line\">tmux attach -t 编号</div><div class=\"line\">## 也可简写成</div><div class=\"line\">tmux a -t 编号</div><div class=\"line\">tmux attach -s test</div><div class=\"line\"></div><div class=\"line\">#重命名会话名称</div><div class=\"line\">tmux rename -t test dev</div><div class=\"line\"></div><div class=\"line\">#关闭会话</div><div class=\"line\">tmux kill-session -t abc</div><div class=\"line\"></div><div class=\"line\"># 完全退出，关闭所有的会话</div><div class=\"line\">tmux kill-server</div></pre></td></tr></table></figure>\n<h3 id=\"窗口常用命令\"><a href=\"#窗口常用命令\" class=\"headerlink\" title=\"窗口常用命令\"></a>窗口常用命令</h3><p>假设当前默认前缀为 : Ctrl+b<br> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;前缀&#125; c 创建新窗口</div><div class=\"line\"></div><div class=\"line\">&#123;前缀&#125; n 选择下一个窗口</div><div class=\"line\"></div><div class=\"line\">&#123;前缀&#125; p 选择前一个窗口</div><div class=\"line\"></div><div class=\"line\">&#123;前缀&#125; l 最近一次活跃窗口之间进行切换</div><div class=\"line\"></div><div class=\"line\">&#123;前缀&#125; 0~9 选择几号窗口</div><div class=\"line\"></div><div class=\"line\">&#123;前缀&#125; , 重命名窗口</div><div class=\"line\"></div><div class=\"line\">&#123;前缀&#125; . 更改窗口的编号，但只能更改成未使用的编号，所以要交换窗口的话，得更改多次进行交换</div><div class=\"line\"></div><div class=\"line\">&#123;前缀&#125; &amp; 关闭窗口</div><div class=\"line\"></div><div class=\"line\">&#123;前缀&#125; w 以菜单方式显示及选择窗口</div><div class=\"line\"></div><div class=\"line\">&#123;前缀&#125; f 在所有窗口中查找内容</div></pre></td></tr></table></figure></p>\n<h3 id=\"窗格常用命令\"><a href=\"#窗格常用命令\" class=\"headerlink\" title=\"窗格常用命令\"></a>窗格常用命令</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;前缀&#125; &quot; 模向分隔面板</div><div class=\"line\"></div><div class=\"line\">&#123;前缀&#125; % 纵向分隔面板</div><div class=\"line\"></div><div class=\"line\">&#123;前缀&#125; o 跳到下一个分隔面板</div><div class=\"line\"></div><div class=\"line\">&#123;前缀&#125; x 关闭面板</div><div class=\"line\"></div><div class=\"line\">&#123;前缀&#125; ; 切换到最后一个使用的面板</div><div class=\"line\"></div><div class=\"line\">&#123;前缀&#125; 上下键 上一个及下一个分隔面板</div><div class=\"line\"></div><div class=\"line\">&#123;前缀&#125; 空格键 切换面板布局</div></pre></td></tr></table></figure>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;前缀&#125; t 显示时钟</div><div class=\"line\"></div><div class=\"line\">&#123;前缀&#125; m 鼠标切换窗格</div></pre></td></tr></table></figure>\n<p>看到这里，尝试后是不是觉得很奇怪，自己打开的窗口，怎么和本页面第一张图不一样！不一样！ 首先恭喜你已经掌握了tmux基本操作，接下来咱们看下tmux高级用法。</p>\n<p>###高级配置<br>tmux 自定义配置<a href=\"https://github.com/gpakosz/.tmux\" target=\"_blank\" rel=\"external\">参见 .tmux</a></p>\n<hr>\n<p>tmux窗口左下角状态显示用到了Powerline及Powerline字体，接着咱们来美化下tmux窗口。</p>\n<p>1.安装 Python<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew install python</div></pre></td></tr></table></figure></p>\n<p>2.下载 <a href=\"https://github.com/powerline/powerline\" target=\"_blank\" rel=\"external\">powerline</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo pip install powerline-status</div></pre></td></tr></table></figure></p>\n<p>3.配置 Powerline 到终端<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">#查看安装路径</div><div class=\"line\">pip show powerline-status</div><div class=\"line\"></div><div class=\"line\">#配置 .bash_profile 文件,添加以下行</div><div class=\"line\">. /Powerline安装路径/powerline/bindings/bash/powerline.sh</div><div class=\"line\">source .bash_profile</div></pre></td></tr></table></figure></p>\n<p>4.安装专用于 <a href=\"https://github.com/powerline/fonts\" target=\"_blank\" rel=\"external\">Powerline</a> 的字体<br>然后在 iTerm 2的偏好设置里的Profile选项卡里把字体设置为以 Powerline 结尾的字体就大功告成了。</p>\n<p>PS：如果满足不了你的操作体验，你还可以：<br>安装配色方案 <a href=\"https://github.com/altercation/solarized\" target=\"_blank\" rel=\"external\">solarized</a><br>安装zsh主题 <a href=\"https://github.com/fcamblor/oh-my-zsh-agnoster-fcamblor\" target=\"_blank\" rel=\"external\">agnoster-fcamblor</a></p>\n","excerpt":"","more":"<p>上篇讲到了 <a href=\"http://www.jianshu.com/p/3436bcb17a03\">iTerm2的基本使用</a> ，iTerm2能够让我们迅速从不同的窗口中切换。通过 iTerm2 ，我们可以在不同窗口中愉快用 ssh 登录到远处服务器去操作，但由于临时断网或其他原因，远程连接就会中断，如想继续之前的工作，又得重头来过T_T ,但是iTerm2有个 tmux 的配合，再也不用担心异常中断了，它可以让我们迅速恢复到之前的现场环境。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/3778142-7340859f88245de4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"tmux 窗格\"></p>\n<p><a href=\"http://tmux.github.io/\">tmux</a> 是一个终端复用软件，它也有类似iTerm2的分屏功能。不仅如此，我们还可以通过tmux随时断开会话或者接入会话，接下一起来看下tmux 一些基本使用方法。</p>\n<h3 id=\"入门须知\"><a href=\"#入门须知\" class=\"headerlink\" title=\"入门须知\"></a>入门须知</h3><ul>\n<li>server服务器：输入tmux命令时就开启了一个服务器，可以开启多个会话。</li>\n<li>session: 管理多个window的会话</li>\n<li>window: 一个window就是整个屏幕</li>\n<li>pane: 一个window可以被横向或纵向分割为多个窗格</li>\n</ul>\n<p>即一个session可包含多个窗口，一个窗口中可包含多个窗格。<br>一般情况下 tmux 中所有的快捷键都需要和前缀快捷键 <figure class=\"highlight plain\"><figcaption><span>+ b``` 来组合使用。</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">### 安装tmux</div><div class=\"line\">``` shell</div><div class=\"line\">brew install tmux</div></pre></td></tr></table></figure></p>\n<h3 id=\"运行-tmux\"><a href=\"#运行-tmux\" class=\"headerlink\" title=\"运行 tmux\"></a>运行 tmux</h3><p>开启了一个 tmux 的会话，默认会新建一个窗口和一个窗格，窗口左下角会有一些标识信息。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">tmux</div></pre></td></tr></table></figure></p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/3778142-64ef52c19d9ef73e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"tmux默认窗口\"></p>\n<h3 id=\"会话常用命令\"><a href=\"#会话常用命令\" class=\"headerlink\" title=\"会话常用命令\"></a>会话常用命令</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">#在正常终端模式下使用 tmux 建立会话并命名</div><div class=\"line\">tmux new -s abc</div><div class=\"line\"></div><div class=\"line\">#休眠会话 返回主shell- 在正常终端模式下，使某个编号的会话强制休眠，编号用的是 tmux ls 命令时所列出的每一行的最前面的那个编号</div><div class=\"line\">tmux detach -t 编号</div><div class=\"line\">tmux detach -s 名称</div><div class=\"line\"></div><div class=\"line\">#恢复会话</div><div class=\"line\">tmux attach -t 编号</div><div class=\"line\">## 也可简写成</div><div class=\"line\">tmux a -t 编号</div><div class=\"line\">tmux attach -s test</div><div class=\"line\"></div><div class=\"line\">#重命名会话名称</div><div class=\"line\">tmux rename -t test dev</div><div class=\"line\"></div><div class=\"line\">#关闭会话</div><div class=\"line\">tmux kill-session -t abc</div><div class=\"line\"></div><div class=\"line\"># 完全退出，关闭所有的会话</div><div class=\"line\">tmux kill-server</div></pre></td></tr></table></figure>\n<h3 id=\"窗口常用命令\"><a href=\"#窗口常用命令\" class=\"headerlink\" title=\"窗口常用命令\"></a>窗口常用命令</h3><p>假设当前默认前缀为 : Ctrl+b<br> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;前缀&#125; c 创建新窗口</div><div class=\"line\"></div><div class=\"line\">&#123;前缀&#125; n 选择下一个窗口</div><div class=\"line\"></div><div class=\"line\">&#123;前缀&#125; p 选择前一个窗口</div><div class=\"line\"></div><div class=\"line\">&#123;前缀&#125; l 最近一次活跃窗口之间进行切换</div><div class=\"line\"></div><div class=\"line\">&#123;前缀&#125; 0~9 选择几号窗口</div><div class=\"line\"></div><div class=\"line\">&#123;前缀&#125; , 重命名窗口</div><div class=\"line\"></div><div class=\"line\">&#123;前缀&#125; . 更改窗口的编号，但只能更改成未使用的编号，所以要交换窗口的话，得更改多次进行交换</div><div class=\"line\"></div><div class=\"line\">&#123;前缀&#125; &amp; 关闭窗口</div><div class=\"line\"></div><div class=\"line\">&#123;前缀&#125; w 以菜单方式显示及选择窗口</div><div class=\"line\"></div><div class=\"line\">&#123;前缀&#125; f 在所有窗口中查找内容</div></pre></td></tr></table></figure></p>\n<h3 id=\"窗格常用命令\"><a href=\"#窗格常用命令\" class=\"headerlink\" title=\"窗格常用命令\"></a>窗格常用命令</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;前缀&#125; &quot; 模向分隔面板</div><div class=\"line\"></div><div class=\"line\">&#123;前缀&#125; % 纵向分隔面板</div><div class=\"line\"></div><div class=\"line\">&#123;前缀&#125; o 跳到下一个分隔面板</div><div class=\"line\"></div><div class=\"line\">&#123;前缀&#125; x 关闭面板</div><div class=\"line\"></div><div class=\"line\">&#123;前缀&#125; ; 切换到最后一个使用的面板</div><div class=\"line\"></div><div class=\"line\">&#123;前缀&#125; 上下键 上一个及下一个分隔面板</div><div class=\"line\"></div><div class=\"line\">&#123;前缀&#125; 空格键 切换面板布局</div></pre></td></tr></table></figure>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;前缀&#125; t 显示时钟</div><div class=\"line\"></div><div class=\"line\">&#123;前缀&#125; m 鼠标切换窗格</div></pre></td></tr></table></figure>\n<p>看到这里，尝试后是不是觉得很奇怪，自己打开的窗口，怎么和本页面第一张图不一样！不一样！ 首先恭喜你已经掌握了tmux基本操作，接下来咱们看下tmux高级用法。</p>\n<p>###高级配置<br>tmux 自定义配置<a href=\"https://github.com/gpakosz/.tmux\">参见 .tmux</a></p>\n<hr>\n<p>tmux窗口左下角状态显示用到了Powerline及Powerline字体，接着咱们来美化下tmux窗口。</p>\n<p>1.安装 Python<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew install python</div></pre></td></tr></table></figure></p>\n<p>2.下载 <a href=\"https://github.com/powerline/powerline\">powerline</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo pip install powerline-status</div></pre></td></tr></table></figure></p>\n<p>3.配置 Powerline 到终端<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">#查看安装路径</div><div class=\"line\">pip show powerline-status</div><div class=\"line\"></div><div class=\"line\">#配置 .bash_profile 文件,添加以下行</div><div class=\"line\">. /Powerline安装路径/powerline/bindings/bash/powerline.sh</div><div class=\"line\">source .bash_profile</div></pre></td></tr></table></figure></p>\n<p>4.安装专用于 <a href=\"https://github.com/powerline/fonts\">Powerline</a> 的字体<br>然后在 iTerm 2的偏好设置里的Profile选项卡里把字体设置为以 Powerline 结尾的字体就大功告成了。</p>\n<p>PS：如果满足不了你的操作体验，你还可以：<br>安装配色方案 <a href=\"https://github.com/altercation/solarized\">solarized</a><br>安装zsh主题 <a href=\"https://github.com/fcamblor/oh-my-zsh-agnoster-fcamblor\">agnoster-fcamblor</a></p>\n"},{"title":"linux进程资源信息","date":"2017-04-16T17:24:36.000Z","_content":"## Linux进程与资源管理\nLinux最棒的地方在于它的多用户多任务环境，记录下多用户多任务相关的几个常用命令。\n\n### 前后台进程及切换\n有时候我们并不一定要在屏幕前工作，这时就需要使用到背景工作管理的一些指令，如 `&`，`ctrl+z`。\n\n如果想让程序在背景下执行，可以使用 `&`,由于是背景，该程序的输入并不会显示在屏幕上。\n\n语法格式: `command &`\n\n``` shell\n# 程序进入背景执行\nfind / -name test &\n\n# fg 将程序拉回屏幕前执行\nfg\n```\n\n也可以通过 `ctrl+z` 将正在运行的工作丢到背景下，放在背景下的最大好处就是不会被 `ctrl+c` 指令中断。\n\n如果出现某个时候需要暂时退出vim，但又不想保存退出，可 `ctrl+z` 暂时退出\n\n``` shell\n# 程序进入背景执行\nvim a.js\n\n# 将vim放到背景中，并没有退出\nctrl+z \n```\n\n可使用 `jobs` 可以查看任务列表，配合 `bg` ，`fg`将程序拉回屏幕。\n\n查看背景程序：`jobs`\n\n``` shell\n# 查看背景程序\njobs\n[1]  + suspended  vim a.js\n\n# 恢复vim编辑\nfg %1\n```\n\n`fg & bg `恢复背景进程\n\n``` shell\n#number 为jobs中方括号中的编号\nfg  %number\n\n#将背景程序中的程序由stopped变成running\nbg %number\n```\n\n`kill` 杀掉背景程序中的程序\n\n```shell\nkill -signal %number\nsignal\n    -1 :重新读取参数配置（类似reload）\n    -2 :类似Ctrl+c中断工作\n    -9 :强制杀掉进程\n    -15 :停止一个工作（默认值）\n    \n#杀掉vim 进程    \nkill -9 %1    \n```\n\n### 查看进程\n`ps` 查看进程信息\n\n```shell\nps -aux\n参数说明\n    a :显示所有程序\n    u :列出所有用户程序\n    x :列出所有tty程序\n    \n# 显示进程信息    \nps -aux\n\nUSER               PID  %CPU %MEM      VSZ    RSS   TT  STAT STARTED      TIME COMMAND\nnali              2557   3.0  1.2  2832304  49180   ??  S    五04下午   4:54.94 /Applications/iTerm 2.app/Contents/MacOS/iTerm2\nnali               920   1.6  0.8  2939412  34404   ??  S    四07下午   5:26.69 /Applications/QQ.app/Contents/MacOS/QQ   \n\n#干掉进程 \nkill -9 pid\n\n```\n另外一个显示进程的命令是 `top` 可动态显示。\n查看内存使用：`free`\n查看系统资源：`sar`\n\n\n\n\n### 程序优先级\n由于CPU资源有限，优先级高的程序会先获取CPU资源。\n\n```shell\nps -l\n\nUID   PID  PPID        F CPU PRI NI       SZ    RSS WCHAN     S             ADDR TTY           TIME CMD\n501  9005  2557     4006   0  31  0  2507116   9148 -      Ss                  0 ttys001    0:00.07 /Applications/iTerm 2.app/Contents/MacOS/iTerm2 --server login \n\n#PRI 代表程序优先级，越小越先被执行\nNI 代表nice的值\n```\n*PRI越小越优先被执行*\n\n`PRI(new) = PRI(old) + nice`\n\n>一般用户可用的nice值 0~19\nroot可用的nice值-20~19\n\n调整程序的的优先级\n`nice [-n number] command`\n\n调整运行中程序的优先级\n`renice number PID`\n\n### 查看系统相关信息\n`uname` 查看系统信息\n\n```shell \nuname \n参数信息：\n    -a :列出所有信息\n    -p :列出CPU信息\n    -r :列出核心版本信息\n    -n :列出版本信息 \n```\n\n`dmesg` 查看启动一闪而过的信息\n\n`uptime` 显示开机时间及负载相关信息\n\n`last` 显示登录信息\n\n`hostname` 显示主机名\n\n\n`who` 查看当前系统上的用户(只列出用户名及登录时间)\n\n`w` 查看当前系统上的用户(列出用户名及登录时间 + 源地址IP + 工作项 + ..)\n\n`whoami` 显示当前登录用户名\n\n\n`ntpdate` 网络校时\n\n```shell\n# 校时服务器 time.stdtime.gov.tw\n\n# 执行校时命令\nntpdate time.stdtime.gov.tw\n\n# 可配合crontab定时校时\n```\n\n\n\n\n\n\n\n","source":"_posts/linux进程资源信息.md","raw":"---\ntitle: linux进程资源信息\ndate: 2017-04-17 01:24:36\ntags:\n    - linux\n\ncategory: \n    - linux\n    \n---\n## Linux进程与资源管理\nLinux最棒的地方在于它的多用户多任务环境，记录下多用户多任务相关的几个常用命令。\n\n### 前后台进程及切换\n有时候我们并不一定要在屏幕前工作，这时就需要使用到背景工作管理的一些指令，如 `&`，`ctrl+z`。\n\n如果想让程序在背景下执行，可以使用 `&`,由于是背景，该程序的输入并不会显示在屏幕上。\n\n语法格式: `command &`\n\n``` shell\n# 程序进入背景执行\nfind / -name test &\n\n# fg 将程序拉回屏幕前执行\nfg\n```\n\n也可以通过 `ctrl+z` 将正在运行的工作丢到背景下，放在背景下的最大好处就是不会被 `ctrl+c` 指令中断。\n\n如果出现某个时候需要暂时退出vim，但又不想保存退出，可 `ctrl+z` 暂时退出\n\n``` shell\n# 程序进入背景执行\nvim a.js\n\n# 将vim放到背景中，并没有退出\nctrl+z \n```\n\n可使用 `jobs` 可以查看任务列表，配合 `bg` ，`fg`将程序拉回屏幕。\n\n查看背景程序：`jobs`\n\n``` shell\n# 查看背景程序\njobs\n[1]  + suspended  vim a.js\n\n# 恢复vim编辑\nfg %1\n```\n\n`fg & bg `恢复背景进程\n\n``` shell\n#number 为jobs中方括号中的编号\nfg  %number\n\n#将背景程序中的程序由stopped变成running\nbg %number\n```\n\n`kill` 杀掉背景程序中的程序\n\n```shell\nkill -signal %number\nsignal\n    -1 :重新读取参数配置（类似reload）\n    -2 :类似Ctrl+c中断工作\n    -9 :强制杀掉进程\n    -15 :停止一个工作（默认值）\n    \n#杀掉vim 进程    \nkill -9 %1    \n```\n\n### 查看进程\n`ps` 查看进程信息\n\n```shell\nps -aux\n参数说明\n    a :显示所有程序\n    u :列出所有用户程序\n    x :列出所有tty程序\n    \n# 显示进程信息    \nps -aux\n\nUSER               PID  %CPU %MEM      VSZ    RSS   TT  STAT STARTED      TIME COMMAND\nnali              2557   3.0  1.2  2832304  49180   ??  S    五04下午   4:54.94 /Applications/iTerm 2.app/Contents/MacOS/iTerm2\nnali               920   1.6  0.8  2939412  34404   ??  S    四07下午   5:26.69 /Applications/QQ.app/Contents/MacOS/QQ   \n\n#干掉进程 \nkill -9 pid\n\n```\n另外一个显示进程的命令是 `top` 可动态显示。\n查看内存使用：`free`\n查看系统资源：`sar`\n\n\n\n\n### 程序优先级\n由于CPU资源有限，优先级高的程序会先获取CPU资源。\n\n```shell\nps -l\n\nUID   PID  PPID        F CPU PRI NI       SZ    RSS WCHAN     S             ADDR TTY           TIME CMD\n501  9005  2557     4006   0  31  0  2507116   9148 -      Ss                  0 ttys001    0:00.07 /Applications/iTerm 2.app/Contents/MacOS/iTerm2 --server login \n\n#PRI 代表程序优先级，越小越先被执行\nNI 代表nice的值\n```\n*PRI越小越优先被执行*\n\n`PRI(new) = PRI(old) + nice`\n\n>一般用户可用的nice值 0~19\nroot可用的nice值-20~19\n\n调整程序的的优先级\n`nice [-n number] command`\n\n调整运行中程序的优先级\n`renice number PID`\n\n### 查看系统相关信息\n`uname` 查看系统信息\n\n```shell \nuname \n参数信息：\n    -a :列出所有信息\n    -p :列出CPU信息\n    -r :列出核心版本信息\n    -n :列出版本信息 \n```\n\n`dmesg` 查看启动一闪而过的信息\n\n`uptime` 显示开机时间及负载相关信息\n\n`last` 显示登录信息\n\n`hostname` 显示主机名\n\n\n`who` 查看当前系统上的用户(只列出用户名及登录时间)\n\n`w` 查看当前系统上的用户(列出用户名及登录时间 + 源地址IP + 工作项 + ..)\n\n`whoami` 显示当前登录用户名\n\n\n`ntpdate` 网络校时\n\n```shell\n# 校时服务器 time.stdtime.gov.tw\n\n# 执行校时命令\nntpdate time.stdtime.gov.tw\n\n# 可配合crontab定时校时\n```\n\n\n\n\n\n\n\n","slug":"linux进程资源信息","published":1,"updated":"2017-04-17T17:12:07.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1mffb140002u86k2woxp9qp","content":"<h2 id=\"Linux进程与资源管理\"><a href=\"#Linux进程与资源管理\" class=\"headerlink\" title=\"Linux进程与资源管理\"></a>Linux进程与资源管理</h2><p>Linux最棒的地方在于它的多用户多任务环境，记录下多用户多任务相关的几个常用命令。</p>\n<h3 id=\"前后台进程及切换\"><a href=\"#前后台进程及切换\" class=\"headerlink\" title=\"前后台进程及切换\"></a>前后台进程及切换</h3><p>有时候我们并不一定要在屏幕前工作，这时就需要使用到背景工作管理的一些指令，如 <code>&amp;</code>，<code>ctrl+z</code>。</p>\n<p>如果想让程序在背景下执行，可以使用 <code>&amp;</code>,由于是背景，该程序的输入并不会显示在屏幕上。</p>\n<p>语法格式: <code>command &amp;</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 程序进入背景执行</div><div class=\"line\">find / -name test &amp;</div><div class=\"line\"></div><div class=\"line\"># fg 将程序拉回屏幕前执行</div><div class=\"line\">fg</div></pre></td></tr></table></figure>\n<p>也可以通过 <code>ctrl+z</code> 将正在运行的工作丢到背景下，放在背景下的最大好处就是不会被 <code>ctrl+c</code> 指令中断。</p>\n<p>如果出现某个时候需要暂时退出vim，但又不想保存退出，可 <code>ctrl+z</code> 暂时退出</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 程序进入背景执行</div><div class=\"line\">vim a.js</div><div class=\"line\"></div><div class=\"line\"># 将vim放到背景中，并没有退出</div><div class=\"line\">ctrl+z</div></pre></td></tr></table></figure>\n<p>可使用 <code>jobs</code> 可以查看任务列表，配合 <code>bg</code> ，<code>fg</code>将程序拉回屏幕。</p>\n<p>查看背景程序：<code>jobs</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 查看背景程序</div><div class=\"line\">jobs</div><div class=\"line\">[1]  + suspended  vim a.js</div><div class=\"line\"></div><div class=\"line\"># 恢复vim编辑</div><div class=\"line\">fg %1</div></pre></td></tr></table></figure>\n<p><code>fg &amp; bg</code>恢复背景进程</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">#number 为jobs中方括号中的编号</div><div class=\"line\">fg  %number</div><div class=\"line\"></div><div class=\"line\">#将背景程序中的程序由stopped变成running</div><div class=\"line\">bg %number</div></pre></td></tr></table></figure>\n<p><code>kill</code> 杀掉背景程序中的程序</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">kill -signal %number</div><div class=\"line\">signal</div><div class=\"line\">    -1 :重新读取参数配置（类似reload）</div><div class=\"line\">    -2 :类似Ctrl+c中断工作</div><div class=\"line\">    -9 :强制杀掉进程</div><div class=\"line\">    -15 :停止一个工作（默认值）</div><div class=\"line\">    </div><div class=\"line\">#杀掉vim 进程    </div><div class=\"line\">kill -9 %1</div></pre></td></tr></table></figure>\n<h3 id=\"查看进程\"><a href=\"#查看进程\" class=\"headerlink\" title=\"查看进程\"></a>查看进程</h3><p><code>ps</code> 查看进程信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">ps -aux</div><div class=\"line\">参数说明</div><div class=\"line\">    a :显示所有程序</div><div class=\"line\">    u :列出所有用户程序</div><div class=\"line\">    x :列出所有tty程序</div><div class=\"line\">    </div><div class=\"line\"># 显示进程信息    </div><div class=\"line\">ps -aux</div><div class=\"line\"></div><div class=\"line\">USER               PID  %CPU %MEM      VSZ    RSS   TT  STAT STARTED      TIME COMMAND</div><div class=\"line\">nali              2557   3.0  1.2  2832304  49180   ??  S    五04下午   4:54.94 /Applications/iTerm 2.app/Contents/MacOS/iTerm2</div><div class=\"line\">nali               920   1.6  0.8  2939412  34404   ??  S    四07下午   5:26.69 /Applications/QQ.app/Contents/MacOS/QQ   </div><div class=\"line\"></div><div class=\"line\">#干掉进程 </div><div class=\"line\">kill -9 pid</div></pre></td></tr></table></figure>\n<p>另外一个显示进程的命令是 <code>top</code> 可动态显示。<br>查看内存使用：<code>free</code><br>查看系统资源：<code>sar</code></p>\n<h3 id=\"程序优先级\"><a href=\"#程序优先级\" class=\"headerlink\" title=\"程序优先级\"></a>程序优先级</h3><p>由于CPU资源有限，优先级高的程序会先获取CPU资源。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">ps -l</div><div class=\"line\"></div><div class=\"line\">UID   PID  PPID        F CPU PRI NI       SZ    RSS WCHAN     S             ADDR TTY           TIME CMD</div><div class=\"line\">501  9005  2557     4006   0  31  0  2507116   9148 -      Ss                  0 ttys001    0:00.07 /Applications/iTerm 2.app/Contents/MacOS/iTerm2 --server login </div><div class=\"line\"></div><div class=\"line\">#PRI 代表程序优先级，越小越先被执行</div><div class=\"line\">NI 代表nice的值</div></pre></td></tr></table></figure>\n<p><em>PRI越小越优先被执行</em></p>\n<p><code>PRI(new) = PRI(old) + nice</code></p>\n<blockquote>\n<p>一般用户可用的nice值 0~19<br>root可用的nice值-20~19</p>\n</blockquote>\n<p>调整程序的的优先级<br><code>nice [-n number] command</code></p>\n<p>调整运行中程序的优先级<br><code>renice number PID</code></p>\n<h3 id=\"查看系统相关信息\"><a href=\"#查看系统相关信息\" class=\"headerlink\" title=\"查看系统相关信息\"></a>查看系统相关信息</h3><p><code>uname</code> 查看系统信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">uname </div><div class=\"line\">参数信息：</div><div class=\"line\">    -a :列出所有信息</div><div class=\"line\">    -p :列出CPU信息</div><div class=\"line\">    -r :列出核心版本信息</div><div class=\"line\">    -n :列出版本信息</div></pre></td></tr></table></figure>\n<p><code>dmesg</code> 查看启动一闪而过的信息</p>\n<p><code>uptime</code> 显示开机时间及负载相关信息</p>\n<p><code>last</code> 显示登录信息</p>\n<p><code>hostname</code> 显示主机名</p>\n<p><code>who</code> 查看当前系统上的用户(只列出用户名及登录时间)</p>\n<p><code>w</code> 查看当前系统上的用户(列出用户名及登录时间 + 源地址IP + 工作项 + ..)</p>\n<p><code>whoami</code> 显示当前登录用户名</p>\n<p><code>ntpdate</code> 网络校时</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 校时服务器 time.stdtime.gov.tw</div><div class=\"line\"></div><div class=\"line\"># 执行校时命令</div><div class=\"line\">ntpdate time.stdtime.gov.tw</div><div class=\"line\"></div><div class=\"line\"># 可配合crontab定时校时</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"Linux进程与资源管理\"><a href=\"#Linux进程与资源管理\" class=\"headerlink\" title=\"Linux进程与资源管理\"></a>Linux进程与资源管理</h2><p>Linux最棒的地方在于它的多用户多任务环境，记录下多用户多任务相关的几个常用命令。</p>\n<h3 id=\"前后台进程及切换\"><a href=\"#前后台进程及切换\" class=\"headerlink\" title=\"前后台进程及切换\"></a>前后台进程及切换</h3><p>有时候我们并不一定要在屏幕前工作，这时就需要使用到背景工作管理的一些指令，如 <code>&amp;</code>，<code>ctrl+z</code>。</p>\n<p>如果想让程序在背景下执行，可以使用 <code>&amp;</code>,由于是背景，该程序的输入并不会显示在屏幕上。</p>\n<p>语法格式: <code>command &amp;</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 程序进入背景执行</div><div class=\"line\">find / -name test &amp;</div><div class=\"line\"></div><div class=\"line\"># fg 将程序拉回屏幕前执行</div><div class=\"line\">fg</div></pre></td></tr></table></figure>\n<p>也可以通过 <code>ctrl+z</code> 将正在运行的工作丢到背景下，放在背景下的最大好处就是不会被 <code>ctrl+c</code> 指令中断。</p>\n<p>如果出现某个时候需要暂时退出vim，但又不想保存退出，可 <code>ctrl+z</code> 暂时退出</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 程序进入背景执行</div><div class=\"line\">vim a.js</div><div class=\"line\"></div><div class=\"line\"># 将vim放到背景中，并没有退出</div><div class=\"line\">ctrl+z</div></pre></td></tr></table></figure>\n<p>可使用 <code>jobs</code> 可以查看任务列表，配合 <code>bg</code> ，<code>fg</code>将程序拉回屏幕。</p>\n<p>查看背景程序：<code>jobs</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 查看背景程序</div><div class=\"line\">jobs</div><div class=\"line\">[1]  + suspended  vim a.js</div><div class=\"line\"></div><div class=\"line\"># 恢复vim编辑</div><div class=\"line\">fg %1</div></pre></td></tr></table></figure>\n<p><code>fg &amp; bg</code>恢复背景进程</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">#number 为jobs中方括号中的编号</div><div class=\"line\">fg  %number</div><div class=\"line\"></div><div class=\"line\">#将背景程序中的程序由stopped变成running</div><div class=\"line\">bg %number</div></pre></td></tr></table></figure>\n<p><code>kill</code> 杀掉背景程序中的程序</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">kill -signal %number</div><div class=\"line\">signal</div><div class=\"line\">    -1 :重新读取参数配置（类似reload）</div><div class=\"line\">    -2 :类似Ctrl+c中断工作</div><div class=\"line\">    -9 :强制杀掉进程</div><div class=\"line\">    -15 :停止一个工作（默认值）</div><div class=\"line\">    </div><div class=\"line\">#杀掉vim 进程    </div><div class=\"line\">kill -9 %1</div></pre></td></tr></table></figure>\n<h3 id=\"查看进程\"><a href=\"#查看进程\" class=\"headerlink\" title=\"查看进程\"></a>查看进程</h3><p><code>ps</code> 查看进程信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">ps -aux</div><div class=\"line\">参数说明</div><div class=\"line\">    a :显示所有程序</div><div class=\"line\">    u :列出所有用户程序</div><div class=\"line\">    x :列出所有tty程序</div><div class=\"line\">    </div><div class=\"line\"># 显示进程信息    </div><div class=\"line\">ps -aux</div><div class=\"line\"></div><div class=\"line\">USER               PID  %CPU %MEM      VSZ    RSS   TT  STAT STARTED      TIME COMMAND</div><div class=\"line\">nali              2557   3.0  1.2  2832304  49180   ??  S    五04下午   4:54.94 /Applications/iTerm 2.app/Contents/MacOS/iTerm2</div><div class=\"line\">nali               920   1.6  0.8  2939412  34404   ??  S    四07下午   5:26.69 /Applications/QQ.app/Contents/MacOS/QQ   </div><div class=\"line\"></div><div class=\"line\">#干掉进程 </div><div class=\"line\">kill -9 pid</div></pre></td></tr></table></figure>\n<p>另外一个显示进程的命令是 <code>top</code> 可动态显示。<br>查看内存使用：<code>free</code><br>查看系统资源：<code>sar</code></p>\n<h3 id=\"程序优先级\"><a href=\"#程序优先级\" class=\"headerlink\" title=\"程序优先级\"></a>程序优先级</h3><p>由于CPU资源有限，优先级高的程序会先获取CPU资源。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">ps -l</div><div class=\"line\"></div><div class=\"line\">UID   PID  PPID        F CPU PRI NI       SZ    RSS WCHAN     S             ADDR TTY           TIME CMD</div><div class=\"line\">501  9005  2557     4006   0  31  0  2507116   9148 -      Ss                  0 ttys001    0:00.07 /Applications/iTerm 2.app/Contents/MacOS/iTerm2 --server login </div><div class=\"line\"></div><div class=\"line\">#PRI 代表程序优先级，越小越先被执行</div><div class=\"line\">NI 代表nice的值</div></pre></td></tr></table></figure>\n<p><em>PRI越小越优先被执行</em></p>\n<p><code>PRI(new) = PRI(old) + nice</code></p>\n<blockquote>\n<p>一般用户可用的nice值 0~19<br>root可用的nice值-20~19</p>\n</blockquote>\n<p>调整程序的的优先级<br><code>nice [-n number] command</code></p>\n<p>调整运行中程序的优先级<br><code>renice number PID</code></p>\n<h3 id=\"查看系统相关信息\"><a href=\"#查看系统相关信息\" class=\"headerlink\" title=\"查看系统相关信息\"></a>查看系统相关信息</h3><p><code>uname</code> 查看系统信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">uname </div><div class=\"line\">参数信息：</div><div class=\"line\">    -a :列出所有信息</div><div class=\"line\">    -p :列出CPU信息</div><div class=\"line\">    -r :列出核心版本信息</div><div class=\"line\">    -n :列出版本信息</div></pre></td></tr></table></figure>\n<p><code>dmesg</code> 查看启动一闪而过的信息</p>\n<p><code>uptime</code> 显示开机时间及负载相关信息</p>\n<p><code>last</code> 显示登录信息</p>\n<p><code>hostname</code> 显示主机名</p>\n<p><code>who</code> 查看当前系统上的用户(只列出用户名及登录时间)</p>\n<p><code>w</code> 查看当前系统上的用户(列出用户名及登录时间 + 源地址IP + 工作项 + ..)</p>\n<p><code>whoami</code> 显示当前登录用户名</p>\n<p><code>ntpdate</code> 网络校时</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 校时服务器 time.stdtime.gov.tw</div><div class=\"line\"></div><div class=\"line\"># 执行校时命令</div><div class=\"line\">ntpdate time.stdtime.gov.tw</div><div class=\"line\"></div><div class=\"line\"># 可配合crontab定时校时</div></pre></td></tr></table></figure>\n"},{"title":"javascript对象","date":"2016-02-11T10:44:09.000Z","_content":"\n#### 创建对象\n\n```js\n// 使用Object创建对象\nvar p = new Object();\n\np.name = 'jason';\np.sayName = function(){\n    alert(this.name);\n}\n\n//使用字面量的方式创建对象\nvar p = {\n    name:'jason',\n    sayName：function(){\n        alert(this.name);\n    }\n}\n```\n\n#### 属性类型\n\nECMAScript中有两种属性：数据属性，访问属性。\n\n数据属性：是一个包含数据值的位置，有4个描述其行为的特性:\n\n| 名称 |  值  |\n| --- | ---  |\n|configurable | 表示能否通过delete删除属性而重新定义，默认true | \n|enumerable | 表示能否通过for-in循环返回属性，默认true |\n|writable | 表示能否修改属性的值，默认true |\n|value | 包含这个属性的属性值，默认undefined |\n\n\n```js\n/*修改属性的默认特性，使用Object.defineProperty(obj,propertyName,descriptor)方法\n四个属性值：configurable、enumerable、writable、value\n*/\nvar p = {};\nObject.defineProperty(p,'name',{\n    writable:false,\n    enumerable:false,\n    configurable:false,\n    value:'chen'\n});\n\np.name = 'jason';  // 非严格模式下，赋值会被忽略，严格模式，赋值会报错\n\n/*定义多个属性使用Object.definePropertys()方法 */\nObject.definePropertys(p, {\n  'name', {\n      writable: false,\n      enumerable: false,\n      configurable: false,\n      value: 'chen'\n  }, {\n      'age', {\n          writable: false,\n          enumerable: false,\n          configurable: false,\n          value: '18'\n      }\n  });\n```\n\n访问器属性：访问器属性不包含属性值，它们包含getter,setter函数（非必须）\n该访问属性也有4个特性:\n\n| 名称 |  值  |\n| --- | ---  |\n|configurable | 表示能否通过delete删除属性而重新定义，默认true|\n|enumerable | 表示能否通过for-in循环返回属性，默认true |\n|get|读取属性调用的函数，默认undefined|\n|set|设置属性调用的函数，默认undefined|\n\n```js\nvar book = {\n    _year:2016,  // 私有属性常以 '_' 开头\n    edition:1\n};\n\n\nObject.defineProperty(book,'year',{\n    get:function(){\n        return this._year;\n    },\n    set:function(newValue){\n        this._year = newValue;\n        this.edition +=1;\n    }\n});\n\n使用访问器属性的常见方式即设置一个属性值会导致其他属性发生变化\n\n另一种设置方式(遗弃的方法)\nbook.__defineGetter('year',function(){\n    return this._year;\n});\nbook.__defineSetter('year',function(newValue){\n    this._year = newValue;\n});\n\n/* 读取属性的特性 Object.getOwePropertyDescriptor() 方法会返回描述对象 */\nvar descriptor = Object.getOwePropertyDescriptor(book,'year');\n\n/* 返回 descriptor : {\n   value:'jason',\n   configurable:false\n} */\n```\n\n#### 创建对象的几种方式\n\n##### 工厂模式\n\n```js\nfunction createGirlFried(name,job){\n    var o = new Object();\n    o.name = name;\n    o.job = job;\n    return o;\n}\n\nvar girl1 = createGirlFried('shany','Dotor');\nvar girl1 = createGirlFried('kaer','Softwarn Engineer');\n\n//没有解决对象识别的问题（对象的类型）\n```\n\n#####构造函数\n```js\nfunction Person(name,job){\n    this.name = name;\n    this.job = job;\n    this.sayName = function(){\n        alert(this.name);\n    }\n}\n\nvar p1 = new Person('zs','doctor');\nvar p2 = new Person('zs','doctor');\n\nalert(p1.construtor == p2.construtor)  // true\np1 instanceof Person  // true\np1 instanceof Object  // true\n```\n\n使用 new 操作符，调用构造函数创建对象，会经历以下4步\n1. 创建一个新对象\n2. 将构造函数的作用域赋给新对象（this 指向这个新对象）\n3. 执行构造函数中的代码（为这个对象添加新属性）\n4. 返回新对象\n\n```js\n//构造函数 当函数用\nvar p = Person('sy','你猜');\nalert(window.name) // sy\n\n// 构造函数的问题：不同示例上的同名函数是不相等的\nfunction sayName (){\n    alert(this.name);\n}\n\nfunction Person(name,job){\n    this.name = name;\n    this.job = job;\n    this.sayName = sayName;\n}\n// 虽然函数一样，但污染了全局变量\n```\n\n##### 原型模式\n每个函数都有一个prototype属性，这是属性是一个指针，指向一个对象（即原型对象，包含共享的属性和方法）\n\n```js\nfunction Person(name,job){\n    this.name = name;\n    this.job = job;\n}\n\nPerson.prototype.sayName = function(){\n    alert(this.name);\n}\n\nPerson.prototype.name = 'susan';\n\nvar p1 = new Person('san','programmer');\np1._proto_ == Person.prototype // true\n\np1.name == san // true\n```\n虽然可以通过对象访问保存在原型中的值，却不能通过对象实例重写原型中的值，如果添加同名属性将屏蔽原型中的同名属性\n    如果依旧要访问原型的的同名属性，只能`delete obj.propertyName`  (设置null  undefined 无效)\n    \n    \n```js\nPerson.prototype.construtor == Person // true\nPerson.prototype.isPrototypeOf(Person) // true\n\n检查一个属性是否是原型属性还是实例属性\nhasOwnProperty('propName');\np1.hasOwnProperty('name') // true\n\n\n// 遍历对象-两种方式使用in操作符( in / for in )\n'name' in p1\n\nfor (var prop in p1) {\n    console.log(prop)\n}\n\n/* 使用for - in返回所有能通过对象访问的、 可枚举属性（ 包含实例属 获取对象上所有可枚举的实例属性， 可使用ECMAScript5 的 Object.keys() 方法 Object.keys(p) 返回一个数组（ 顺序和for - i 获取对象上所有可枚举的实例属性， 无论是否可枚举 Object.getOwePropertyNames() ps： construtor 是不可枚举的。*/\n\n// 重写原型对象\nPerson.prototype = {\n        construtor: Person, // 虽说修正了 construtor 但此时的 construtor变成可枚举的，原生的construtor是不可枚举的\n        sayName: function() {\n            return this.name;\n        }\n    }\n\n// 修复可枚举特性\nObject.defineProperty(Person.prototype, 'construtor', {\n    enumerable: false\n})\n\n/* 原型的问题： 原型的最大问题是由其共享属性的本性导致的， 原型中的所有属性都是被实例共享， 这种共享对函数非常合适， 对包含基本数据类型的属性也说的过去， 然而对于引用问题就比较突出了 */\n\nPerson.prototype.friends = ['sam', 'shany'];\n// friends 被所有实例共享， 修改某个实例会影响其他实例\n\n```\n##### 组合使用构造函数和原型模式\n```js\nfunction person(name) {\n    this.name = name;\n    this.friends = ['san'];\n}\nPerson.prototype.sayName = function() {\n    alert(this.name);\n}\n```\n\n##### 动态原型模式\n```js\nfunction person(name) {\n    this.name = name;\n    this.friends = ['san'];\n    if (typeof this.sayName != 'function') {\n        Person.prototype.sayName = function() {\n            alert(this.name);\n        }\n    }\n}\n```\n##### 寄生构造函数\n```js\nfunction Person(name, age) {\n    var o = Object();\n    o.name = name;\n    o.age = age;\n    return o;\n}\n\nvar p = new Person('sam', 20);\n// return 语句重写了构造函数的值\n\n// 这个方式可在特殊情况下为对象创建构造函数\n\nfunction MyArray() {\n    var arr = new Array();\n    arr.push.apply(arr, arguments);\n    arr.print = function() {\n        return this.join('-');\n    }\n    return arr;\n}\n\nvar c = new MyArray('a1', 'a2');\nalert(c.print());\n```\n\n##### 稳妥构造函数\n```js\n// 适合在一些安全的环境中， 没有公共属性， 其方法也不应用this\n\nfunction Person(name, age) {\n    var o = new Object();\n    o.sayName = function() {\n        alert(name);\n    }\n}\n```\n\n##### 原型继承\n```js\nfunction SuperType(name) {\n    this.name = name;\n}\n\nfunction SubType(name, age) {\n    SuperType.call(this, name)\n    this.age = age;\n}\n```\n\n##### 组合继承\n```js\n// 常用的继承模式（ 原型继承 父类方法无法继承过来）\n\nfunction SubType(name, age) {\n    SuperType.call(this, name)\n    this.age = age;\n}\n\nSubType.prototype = new SuperType();\n```\n\n##### 原型继承\n```js\n// ECMAScript实现\nfunction object(o) {\n    function F() {}\n    F.prototype = o;\n    return new F();\n}\n\n// ECMAScript中 Object.create(p,{\n    skill: 'js'\n});\n```\n\n\n","source":"_posts/javascript对象.md","raw":"---\ntitle: javascript对象\ndate: 2016-02-11 18:44:09\ntags:\n    - js\n\ncategory: \n    - js\n---\n\n#### 创建对象\n\n```js\n// 使用Object创建对象\nvar p = new Object();\n\np.name = 'jason';\np.sayName = function(){\n    alert(this.name);\n}\n\n//使用字面量的方式创建对象\nvar p = {\n    name:'jason',\n    sayName：function(){\n        alert(this.name);\n    }\n}\n```\n\n#### 属性类型\n\nECMAScript中有两种属性：数据属性，访问属性。\n\n数据属性：是一个包含数据值的位置，有4个描述其行为的特性:\n\n| 名称 |  值  |\n| --- | ---  |\n|configurable | 表示能否通过delete删除属性而重新定义，默认true | \n|enumerable | 表示能否通过for-in循环返回属性，默认true |\n|writable | 表示能否修改属性的值，默认true |\n|value | 包含这个属性的属性值，默认undefined |\n\n\n```js\n/*修改属性的默认特性，使用Object.defineProperty(obj,propertyName,descriptor)方法\n四个属性值：configurable、enumerable、writable、value\n*/\nvar p = {};\nObject.defineProperty(p,'name',{\n    writable:false,\n    enumerable:false,\n    configurable:false,\n    value:'chen'\n});\n\np.name = 'jason';  // 非严格模式下，赋值会被忽略，严格模式，赋值会报错\n\n/*定义多个属性使用Object.definePropertys()方法 */\nObject.definePropertys(p, {\n  'name', {\n      writable: false,\n      enumerable: false,\n      configurable: false,\n      value: 'chen'\n  }, {\n      'age', {\n          writable: false,\n          enumerable: false,\n          configurable: false,\n          value: '18'\n      }\n  });\n```\n\n访问器属性：访问器属性不包含属性值，它们包含getter,setter函数（非必须）\n该访问属性也有4个特性:\n\n| 名称 |  值  |\n| --- | ---  |\n|configurable | 表示能否通过delete删除属性而重新定义，默认true|\n|enumerable | 表示能否通过for-in循环返回属性，默认true |\n|get|读取属性调用的函数，默认undefined|\n|set|设置属性调用的函数，默认undefined|\n\n```js\nvar book = {\n    _year:2016,  // 私有属性常以 '_' 开头\n    edition:1\n};\n\n\nObject.defineProperty(book,'year',{\n    get:function(){\n        return this._year;\n    },\n    set:function(newValue){\n        this._year = newValue;\n        this.edition +=1;\n    }\n});\n\n使用访问器属性的常见方式即设置一个属性值会导致其他属性发生变化\n\n另一种设置方式(遗弃的方法)\nbook.__defineGetter('year',function(){\n    return this._year;\n});\nbook.__defineSetter('year',function(newValue){\n    this._year = newValue;\n});\n\n/* 读取属性的特性 Object.getOwePropertyDescriptor() 方法会返回描述对象 */\nvar descriptor = Object.getOwePropertyDescriptor(book,'year');\n\n/* 返回 descriptor : {\n   value:'jason',\n   configurable:false\n} */\n```\n\n#### 创建对象的几种方式\n\n##### 工厂模式\n\n```js\nfunction createGirlFried(name,job){\n    var o = new Object();\n    o.name = name;\n    o.job = job;\n    return o;\n}\n\nvar girl1 = createGirlFried('shany','Dotor');\nvar girl1 = createGirlFried('kaer','Softwarn Engineer');\n\n//没有解决对象识别的问题（对象的类型）\n```\n\n#####构造函数\n```js\nfunction Person(name,job){\n    this.name = name;\n    this.job = job;\n    this.sayName = function(){\n        alert(this.name);\n    }\n}\n\nvar p1 = new Person('zs','doctor');\nvar p2 = new Person('zs','doctor');\n\nalert(p1.construtor == p2.construtor)  // true\np1 instanceof Person  // true\np1 instanceof Object  // true\n```\n\n使用 new 操作符，调用构造函数创建对象，会经历以下4步\n1. 创建一个新对象\n2. 将构造函数的作用域赋给新对象（this 指向这个新对象）\n3. 执行构造函数中的代码（为这个对象添加新属性）\n4. 返回新对象\n\n```js\n//构造函数 当函数用\nvar p = Person('sy','你猜');\nalert(window.name) // sy\n\n// 构造函数的问题：不同示例上的同名函数是不相等的\nfunction sayName (){\n    alert(this.name);\n}\n\nfunction Person(name,job){\n    this.name = name;\n    this.job = job;\n    this.sayName = sayName;\n}\n// 虽然函数一样，但污染了全局变量\n```\n\n##### 原型模式\n每个函数都有一个prototype属性，这是属性是一个指针，指向一个对象（即原型对象，包含共享的属性和方法）\n\n```js\nfunction Person(name,job){\n    this.name = name;\n    this.job = job;\n}\n\nPerson.prototype.sayName = function(){\n    alert(this.name);\n}\n\nPerson.prototype.name = 'susan';\n\nvar p1 = new Person('san','programmer');\np1._proto_ == Person.prototype // true\n\np1.name == san // true\n```\n虽然可以通过对象访问保存在原型中的值，却不能通过对象实例重写原型中的值，如果添加同名属性将屏蔽原型中的同名属性\n    如果依旧要访问原型的的同名属性，只能`delete obj.propertyName`  (设置null  undefined 无效)\n    \n    \n```js\nPerson.prototype.construtor == Person // true\nPerson.prototype.isPrototypeOf(Person) // true\n\n检查一个属性是否是原型属性还是实例属性\nhasOwnProperty('propName');\np1.hasOwnProperty('name') // true\n\n\n// 遍历对象-两种方式使用in操作符( in / for in )\n'name' in p1\n\nfor (var prop in p1) {\n    console.log(prop)\n}\n\n/* 使用for - in返回所有能通过对象访问的、 可枚举属性（ 包含实例属 获取对象上所有可枚举的实例属性， 可使用ECMAScript5 的 Object.keys() 方法 Object.keys(p) 返回一个数组（ 顺序和for - i 获取对象上所有可枚举的实例属性， 无论是否可枚举 Object.getOwePropertyNames() ps： construtor 是不可枚举的。*/\n\n// 重写原型对象\nPerson.prototype = {\n        construtor: Person, // 虽说修正了 construtor 但此时的 construtor变成可枚举的，原生的construtor是不可枚举的\n        sayName: function() {\n            return this.name;\n        }\n    }\n\n// 修复可枚举特性\nObject.defineProperty(Person.prototype, 'construtor', {\n    enumerable: false\n})\n\n/* 原型的问题： 原型的最大问题是由其共享属性的本性导致的， 原型中的所有属性都是被实例共享， 这种共享对函数非常合适， 对包含基本数据类型的属性也说的过去， 然而对于引用问题就比较突出了 */\n\nPerson.prototype.friends = ['sam', 'shany'];\n// friends 被所有实例共享， 修改某个实例会影响其他实例\n\n```\n##### 组合使用构造函数和原型模式\n```js\nfunction person(name) {\n    this.name = name;\n    this.friends = ['san'];\n}\nPerson.prototype.sayName = function() {\n    alert(this.name);\n}\n```\n\n##### 动态原型模式\n```js\nfunction person(name) {\n    this.name = name;\n    this.friends = ['san'];\n    if (typeof this.sayName != 'function') {\n        Person.prototype.sayName = function() {\n            alert(this.name);\n        }\n    }\n}\n```\n##### 寄生构造函数\n```js\nfunction Person(name, age) {\n    var o = Object();\n    o.name = name;\n    o.age = age;\n    return o;\n}\n\nvar p = new Person('sam', 20);\n// return 语句重写了构造函数的值\n\n// 这个方式可在特殊情况下为对象创建构造函数\n\nfunction MyArray() {\n    var arr = new Array();\n    arr.push.apply(arr, arguments);\n    arr.print = function() {\n        return this.join('-');\n    }\n    return arr;\n}\n\nvar c = new MyArray('a1', 'a2');\nalert(c.print());\n```\n\n##### 稳妥构造函数\n```js\n// 适合在一些安全的环境中， 没有公共属性， 其方法也不应用this\n\nfunction Person(name, age) {\n    var o = new Object();\n    o.sayName = function() {\n        alert(name);\n    }\n}\n```\n\n##### 原型继承\n```js\nfunction SuperType(name) {\n    this.name = name;\n}\n\nfunction SubType(name, age) {\n    SuperType.call(this, name)\n    this.age = age;\n}\n```\n\n##### 组合继承\n```js\n// 常用的继承模式（ 原型继承 父类方法无法继承过来）\n\nfunction SubType(name, age) {\n    SuperType.call(this, name)\n    this.age = age;\n}\n\nSubType.prototype = new SuperType();\n```\n\n##### 原型继承\n```js\n// ECMAScript实现\nfunction object(o) {\n    function F() {}\n    F.prototype = o;\n    return new F();\n}\n\n// ECMAScript中 Object.create(p,{\n    skill: 'js'\n});\n```\n\n\n","slug":"javascript对象","published":1,"updated":"2017-04-17T17:55:14.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1mffb1k0006u86kabx5qwel","content":"<h4 id=\"创建对象\"><a href=\"#创建对象\" class=\"headerlink\" title=\"创建对象\"></a>创建对象</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 使用Object创建对象</span></div><div class=\"line\"><span class=\"keyword\">var</span> p = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</div><div class=\"line\"></div><div class=\"line\">p.name = <span class=\"string\">'jason'</span>;</div><div class=\"line\">p.sayName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    alert(<span class=\"keyword\">this</span>.name);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//使用字面量的方式创建对象</span></div><div class=\"line\"><span class=\"keyword\">var</span> p = &#123;</div><div class=\"line\">    <span class=\"attr\">name</span>:<span class=\"string\">'jason'</span>,</div><div class=\"line\">    sayName：<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        alert(<span class=\"keyword\">this</span>.name);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"属性类型\"><a href=\"#属性类型\" class=\"headerlink\" title=\"属性类型\"></a>属性类型</h4><p>ECMAScript中有两种属性：数据属性，访问属性。</p>\n<p>数据属性：是一个包含数据值的位置，有4个描述其行为的特性:</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>configurable</td>\n<td>表示能否通过delete删除属性而重新定义，默认true</td>\n</tr>\n<tr>\n<td>enumerable</td>\n<td>表示能否通过for-in循环返回属性，默认true</td>\n</tr>\n<tr>\n<td>writable</td>\n<td>表示能否修改属性的值，默认true</td>\n</tr>\n<tr>\n<td>value</td>\n<td>包含这个属性的属性值，默认undefined</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/*修改属性的默认特性，使用Object.defineProperty(obj,propertyName,descriptor)方法</span></div><div class=\"line\">四个属性值：configurable、enumerable、writable、value</div><div class=\"line\">*/</div><div class=\"line\"><span class=\"keyword\">var</span> p = &#123;&#125;;</div><div class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(p,<span class=\"string\">'name'</span>,&#123;</div><div class=\"line\">    <span class=\"attr\">writable</span>:<span class=\"literal\">false</span>,</div><div class=\"line\">    <span class=\"attr\">enumerable</span>:<span class=\"literal\">false</span>,</div><div class=\"line\">    <span class=\"attr\">configurable</span>:<span class=\"literal\">false</span>,</div><div class=\"line\">    <span class=\"attr\">value</span>:<span class=\"string\">'chen'</span></div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">p.name = <span class=\"string\">'jason'</span>;  <span class=\"comment\">// 非严格模式下，赋值会被忽略，严格模式，赋值会报错</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/*定义多个属性使用Object.definePropertys()方法 */</span></div><div class=\"line\"><span class=\"built_in\">Object</span>.definePropertys(p, &#123;</div><div class=\"line\">  <span class=\"string\">'name'</span>, &#123;</div><div class=\"line\">      <span class=\"attr\">writable</span>: <span class=\"literal\">false</span>,</div><div class=\"line\">      <span class=\"attr\">enumerable</span>: <span class=\"literal\">false</span>,</div><div class=\"line\">      <span class=\"attr\">configurable</span>: <span class=\"literal\">false</span>,</div><div class=\"line\">      <span class=\"attr\">value</span>: <span class=\"string\">'chen'</span></div><div class=\"line\">  &#125;, &#123;</div><div class=\"line\">      <span class=\"string\">'age'</span>, &#123;</div><div class=\"line\">          <span class=\"attr\">writable</span>: <span class=\"literal\">false</span>,</div><div class=\"line\">          <span class=\"attr\">enumerable</span>: <span class=\"literal\">false</span>,</div><div class=\"line\">          <span class=\"attr\">configurable</span>: <span class=\"literal\">false</span>,</div><div class=\"line\">          <span class=\"attr\">value</span>: <span class=\"string\">'18'</span></div><div class=\"line\">      &#125;</div><div class=\"line\">  &#125;);</div></pre></td></tr></table></figure>\n<p>访问器属性：访问器属性不包含属性值，它们包含getter,setter函数（非必须）<br>该访问属性也有4个特性:</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>configurable</td>\n<td>表示能否通过delete删除属性而重新定义，默认true</td>\n</tr>\n<tr>\n<td>enumerable</td>\n<td>表示能否通过for-in循环返回属性，默认true</td>\n</tr>\n<tr>\n<td>get</td>\n<td>读取属性调用的函数，默认undefined</td>\n</tr>\n<tr>\n<td>set</td>\n<td>设置属性调用的函数，默认undefined</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> book = &#123;</div><div class=\"line\">    <span class=\"attr\">_year</span>:<span class=\"number\">2016</span>,  <span class=\"comment\">// 私有属性常以 '_' 开头</span></div><div class=\"line\">    edition:<span class=\"number\">1</span></div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(book,<span class=\"string\">'year'</span>,&#123;</div><div class=\"line\">    <span class=\"attr\">get</span>:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>._year;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"attr\">set</span>:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">newValue</span>)</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>._year = newValue;</div><div class=\"line\">        <span class=\"keyword\">this</span>.edition +=<span class=\"number\">1</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">使用访问器属性的常见方式即设置一个属性值会导致其他属性发生变化</div><div class=\"line\"></div><div class=\"line\">另一种设置方式(遗弃的方法)</div><div class=\"line\">book.__defineGetter(<span class=\"string\">'year'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>._year;</div><div class=\"line\">&#125;);</div><div class=\"line\">book.__defineSetter(<span class=\"string\">'year'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">newValue</span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>._year = newValue;</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/* 读取属性的特性 Object.getOwePropertyDescriptor() 方法会返回描述对象 */</span></div><div class=\"line\"><span class=\"keyword\">var</span> descriptor = <span class=\"built_in\">Object</span>.getOwePropertyDescriptor(book,<span class=\"string\">'year'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/* 返回 descriptor : &#123;</span></div><div class=\"line\">   value:'jason',</div><div class=\"line\">   configurable:false</div><div class=\"line\">&#125; */</div></pre></td></tr></table></figure>\n<h4 id=\"创建对象的几种方式\"><a href=\"#创建对象的几种方式\" class=\"headerlink\" title=\"创建对象的几种方式\"></a>创建对象的几种方式</h4><h5 id=\"工厂模式\"><a href=\"#工厂模式\" class=\"headerlink\" title=\"工厂模式\"></a>工厂模式</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createGirlFried</span>(<span class=\"params\">name,job</span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> o = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</div><div class=\"line\">    o.name = name;</div><div class=\"line\">    o.job = job;</div><div class=\"line\">    <span class=\"keyword\">return</span> o;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> girl1 = createGirlFried(<span class=\"string\">'shany'</span>,<span class=\"string\">'Dotor'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> girl1 = createGirlFried(<span class=\"string\">'kaer'</span>,<span class=\"string\">'Softwarn Engineer'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//没有解决对象识别的问题（对象的类型）</span></div></pre></td></tr></table></figure>\n<p>#####构造函数<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name,job</span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.name = name;</div><div class=\"line\">    <span class=\"keyword\">this</span>.job = job;</div><div class=\"line\">    <span class=\"keyword\">this</span>.sayName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        alert(<span class=\"keyword\">this</span>.name);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> p1 = <span class=\"keyword\">new</span> Person(<span class=\"string\">'zs'</span>,<span class=\"string\">'doctor'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> p2 = <span class=\"keyword\">new</span> Person(<span class=\"string\">'zs'</span>,<span class=\"string\">'doctor'</span>);</div><div class=\"line\"></div><div class=\"line\">alert(p1.construtor == p2.construtor)  <span class=\"comment\">// true</span></div><div class=\"line\">p1 <span class=\"keyword\">instanceof</span> Person  <span class=\"comment\">// true</span></div><div class=\"line\">p1 <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Object</span>  <span class=\"comment\">// true</span></div></pre></td></tr></table></figure></p>\n<p>使用 new 操作符，调用构造函数创建对象，会经历以下4步</p>\n<ol>\n<li>创建一个新对象</li>\n<li>将构造函数的作用域赋给新对象（this 指向这个新对象）</li>\n<li>执行构造函数中的代码（为这个对象添加新属性）</li>\n<li>返回新对象</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//构造函数 当函数用</span></div><div class=\"line\"><span class=\"keyword\">var</span> p = Person(<span class=\"string\">'sy'</span>,<span class=\"string\">'你猜'</span>);</div><div class=\"line\">alert(<span class=\"built_in\">window</span>.name) <span class=\"comment\">// sy</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 构造函数的问题：不同示例上的同名函数是不相等的</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sayName</span> (<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    alert(<span class=\"keyword\">this</span>.name);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name,job</span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.name = name;</div><div class=\"line\">    <span class=\"keyword\">this</span>.job = job;</div><div class=\"line\">    <span class=\"keyword\">this</span>.sayName = sayName;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">// 虽然函数一样，但污染了全局变量</span></div></pre></td></tr></table></figure>\n<h5 id=\"原型模式\"><a href=\"#原型模式\" class=\"headerlink\" title=\"原型模式\"></a>原型模式</h5><p>每个函数都有一个prototype属性，这是属性是一个指针，指向一个对象（即原型对象，包含共享的属性和方法）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name,job</span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.name = name;</div><div class=\"line\">    <span class=\"keyword\">this</span>.job = job;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">Person.prototype.sayName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    alert(<span class=\"keyword\">this</span>.name);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">Person.prototype.name = <span class=\"string\">'susan'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> p1 = <span class=\"keyword\">new</span> Person(<span class=\"string\">'san'</span>,<span class=\"string\">'programmer'</span>);</div><div class=\"line\">p1._proto_ == Person.prototype <span class=\"comment\">// true</span></div><div class=\"line\"></div><div class=\"line\">p1.name == san <span class=\"comment\">// true</span></div></pre></td></tr></table></figure>\n<p>虽然可以通过对象访问保存在原型中的值，却不能通过对象实例重写原型中的值，如果添加同名属性将屏蔽原型中的同名属性<br>    如果依旧要访问原型的的同名属性，只能<code>delete obj.propertyName</code>  (设置null  undefined 无效)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\">Person.prototype.construtor == Person <span class=\"comment\">// true</span></div><div class=\"line\">Person.prototype.isPrototypeOf(Person) <span class=\"comment\">// true</span></div><div class=\"line\"></div><div class=\"line\">检查一个属性是否是原型属性还是实例属性</div><div class=\"line\">hasOwnProperty(<span class=\"string\">'propName'</span>);</div><div class=\"line\">p1.hasOwnProperty(<span class=\"string\">'name'</span>) <span class=\"comment\">// true</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 遍历对象-两种方式使用in操作符( in / for in )</span></div><div class=\"line\"><span class=\"string\">'name'</span> <span class=\"keyword\">in</span> p1</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> prop <span class=\"keyword\">in</span> p1) &#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(prop)</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/* 使用for - in返回所有能通过对象访问的、 可枚举属性（ 包含实例属 获取对象上所有可枚举的实例属性， 可使用ECMAScript5 的 Object.keys() 方法 Object.keys(p) 返回一个数组（ 顺序和for - i 获取对象上所有可枚举的实例属性， 无论是否可枚举 Object.getOwePropertyNames() ps： construtor 是不可枚举的。*/</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 重写原型对象</span></div><div class=\"line\">Person.prototype = &#123;</div><div class=\"line\">        <span class=\"attr\">construtor</span>: Person, <span class=\"comment\">// 虽说修正了 construtor 但此时的 construtor变成可枚举的，原生的construtor是不可枚举的</span></div><div class=\"line\">        sayName: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.name;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 修复可枚举特性</span></div><div class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(Person.prototype, <span class=\"string\">'construtor'</span>, &#123;</div><div class=\"line\">    <span class=\"attr\">enumerable</span>: <span class=\"literal\">false</span></div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/* 原型的问题： 原型的最大问题是由其共享属性的本性导致的， 原型中的所有属性都是被实例共享， 这种共享对函数非常合适， 对包含基本数据类型的属性也说的过去， 然而对于引用问题就比较突出了 */</span></div><div class=\"line\"></div><div class=\"line\">Person.prototype.friends = [<span class=\"string\">'sam'</span>, <span class=\"string\">'shany'</span>];</div><div class=\"line\"><span class=\"comment\">// friends 被所有实例共享， 修改某个实例会影响其他实例</span></div></pre></td></tr></table></figure>\n<h5 id=\"组合使用构造函数和原型模式\"><a href=\"#组合使用构造函数和原型模式\" class=\"headerlink\" title=\"组合使用构造函数和原型模式\"></a>组合使用构造函数和原型模式</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">person</span>(<span class=\"params\">name</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.name = name;</div><div class=\"line\">    <span class=\"keyword\">this</span>.friends = [<span class=\"string\">'san'</span>];</div><div class=\"line\">&#125;</div><div class=\"line\">Person.prototype.sayName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    alert(<span class=\"keyword\">this</span>.name);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"动态原型模式\"><a href=\"#动态原型模式\" class=\"headerlink\" title=\"动态原型模式\"></a>动态原型模式</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">person</span>(<span class=\"params\">name</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.name = name;</div><div class=\"line\">    <span class=\"keyword\">this</span>.friends = [<span class=\"string\">'san'</span>];</div><div class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"keyword\">this</span>.sayName != <span class=\"string\">'function'</span>) &#123;</div><div class=\"line\">        Person.prototype.sayName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            alert(<span class=\"keyword\">this</span>.name);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"寄生构造函数\"><a href=\"#寄生构造函数\" class=\"headerlink\" title=\"寄生构造函数\"></a>寄生构造函数</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name, age</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> o = <span class=\"built_in\">Object</span>();</div><div class=\"line\">    o.name = name;</div><div class=\"line\">    o.age = age;</div><div class=\"line\">    <span class=\"keyword\">return</span> o;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> p = <span class=\"keyword\">new</span> Person(<span class=\"string\">'sam'</span>, <span class=\"number\">20</span>);</div><div class=\"line\"><span class=\"comment\">// return 语句重写了构造函数的值</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 这个方式可在特殊情况下为对象创建构造函数</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">MyArray</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> arr = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</div><div class=\"line\">    arr.push.apply(arr, <span class=\"built_in\">arguments</span>);</div><div class=\"line\">    arr.print = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.join(<span class=\"string\">'-'</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> arr;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"keyword\">new</span> MyArray(<span class=\"string\">'a1'</span>, <span class=\"string\">'a2'</span>);</div><div class=\"line\">alert(c.print());</div></pre></td></tr></table></figure>\n<h5 id=\"稳妥构造函数\"><a href=\"#稳妥构造函数\" class=\"headerlink\" title=\"稳妥构造函数\"></a>稳妥构造函数</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 适合在一些安全的环境中， 没有公共属性， 其方法也不应用this</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name, age</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> o = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</div><div class=\"line\">    o.sayName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        alert(name);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"原型继承\"><a href=\"#原型继承\" class=\"headerlink\" title=\"原型继承\"></a>原型继承</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SuperType</span>(<span class=\"params\">name</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.name = name;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SubType</span>(<span class=\"params\">name, age</span>) </span>&#123;</div><div class=\"line\">    SuperType.call(<span class=\"keyword\">this</span>, name)</div><div class=\"line\">    <span class=\"keyword\">this</span>.age = age;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"组合继承\"><a href=\"#组合继承\" class=\"headerlink\" title=\"组合继承\"></a>组合继承</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 常用的继承模式（ 原型继承 父类方法无法继承过来）</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SubType</span>(<span class=\"params\">name, age</span>) </span>&#123;</div><div class=\"line\">    SuperType.call(<span class=\"keyword\">this</span>, name)</div><div class=\"line\">    <span class=\"keyword\">this</span>.age = age;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">SubType.prototype = <span class=\"keyword\">new</span> SuperType();</div></pre></td></tr></table></figure>\n<h5 id=\"原型继承-1\"><a href=\"#原型继承-1\" class=\"headerlink\" title=\"原型继承\"></a>原型继承</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// ECMAScript实现</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">object</span>(<span class=\"params\">o</span>) </span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">F</span>(<span class=\"params\"></span>) </span>&#123;&#125;</div><div class=\"line\">    F.prototype = o;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> F();</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// ECMAScript中 Object.create(p,&#123;</span></div><div class=\"line\">    skill: <span class=\"string\">'js'</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h4 id=\"创建对象\"><a href=\"#创建对象\" class=\"headerlink\" title=\"创建对象\"></a>创建对象</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 使用Object创建对象</span></div><div class=\"line\"><span class=\"keyword\">var</span> p = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</div><div class=\"line\"></div><div class=\"line\">p.name = <span class=\"string\">'jason'</span>;</div><div class=\"line\">p.sayName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    alert(<span class=\"keyword\">this</span>.name);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//使用字面量的方式创建对象</span></div><div class=\"line\"><span class=\"keyword\">var</span> p = &#123;</div><div class=\"line\">    <span class=\"attr\">name</span>:<span class=\"string\">'jason'</span>,</div><div class=\"line\">    sayName：<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        alert(<span class=\"keyword\">this</span>.name);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"属性类型\"><a href=\"#属性类型\" class=\"headerlink\" title=\"属性类型\"></a>属性类型</h4><p>ECMAScript中有两种属性：数据属性，访问属性。</p>\n<p>数据属性：是一个包含数据值的位置，有4个描述其行为的特性:</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>configurable</td>\n<td>表示能否通过delete删除属性而重新定义，默认true</td>\n</tr>\n<tr>\n<td>enumerable</td>\n<td>表示能否通过for-in循环返回属性，默认true</td>\n</tr>\n<tr>\n<td>writable</td>\n<td>表示能否修改属性的值，默认true</td>\n</tr>\n<tr>\n<td>value</td>\n<td>包含这个属性的属性值，默认undefined</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/*修改属性的默认特性，使用Object.defineProperty(obj,propertyName,descriptor)方法</div><div class=\"line\">四个属性值：configurable、enumerable、writable、value</div><div class=\"line\">*/</span></div><div class=\"line\"><span class=\"keyword\">var</span> p = &#123;&#125;;</div><div class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(p,<span class=\"string\">'name'</span>,&#123;</div><div class=\"line\">    <span class=\"attr\">writable</span>:<span class=\"literal\">false</span>,</div><div class=\"line\">    <span class=\"attr\">enumerable</span>:<span class=\"literal\">false</span>,</div><div class=\"line\">    <span class=\"attr\">configurable</span>:<span class=\"literal\">false</span>,</div><div class=\"line\">    <span class=\"attr\">value</span>:<span class=\"string\">'chen'</span></div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">p.name = <span class=\"string\">'jason'</span>;  <span class=\"comment\">// 非严格模式下，赋值会被忽略，严格模式，赋值会报错</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/*定义多个属性使用Object.definePropertys()方法 */</span></div><div class=\"line\"><span class=\"built_in\">Object</span>.definePropertys(p, &#123;</div><div class=\"line\">  <span class=\"string\">'name'</span>, &#123;</div><div class=\"line\">      <span class=\"attr\">writable</span>: <span class=\"literal\">false</span>,</div><div class=\"line\">      <span class=\"attr\">enumerable</span>: <span class=\"literal\">false</span>,</div><div class=\"line\">      <span class=\"attr\">configurable</span>: <span class=\"literal\">false</span>,</div><div class=\"line\">      <span class=\"attr\">value</span>: <span class=\"string\">'chen'</span></div><div class=\"line\">  &#125;, &#123;</div><div class=\"line\">      <span class=\"string\">'age'</span>, &#123;</div><div class=\"line\">          <span class=\"attr\">writable</span>: <span class=\"literal\">false</span>,</div><div class=\"line\">          <span class=\"attr\">enumerable</span>: <span class=\"literal\">false</span>,</div><div class=\"line\">          <span class=\"attr\">configurable</span>: <span class=\"literal\">false</span>,</div><div class=\"line\">          <span class=\"attr\">value</span>: <span class=\"string\">'18'</span></div><div class=\"line\">      &#125;</div><div class=\"line\">  &#125;);</div></pre></td></tr></table></figure>\n<p>访问器属性：访问器属性不包含属性值，它们包含getter,setter函数（非必须）<br>该访问属性也有4个特性:</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>configurable</td>\n<td>表示能否通过delete删除属性而重新定义，默认true</td>\n</tr>\n<tr>\n<td>enumerable</td>\n<td>表示能否通过for-in循环返回属性，默认true</td>\n</tr>\n<tr>\n<td>get</td>\n<td>读取属性调用的函数，默认undefined</td>\n</tr>\n<tr>\n<td>set</td>\n<td>设置属性调用的函数，默认undefined</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> book = &#123;</div><div class=\"line\">    <span class=\"attr\">_year</span>:<span class=\"number\">2016</span>,  <span class=\"comment\">// 私有属性常以 '_' 开头</span></div><div class=\"line\">    edition:<span class=\"number\">1</span></div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(book,<span class=\"string\">'year'</span>,&#123;</div><div class=\"line\">    <span class=\"attr\">get</span>:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>._year;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"attr\">set</span>:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">newValue</span>)</span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>._year = newValue;</div><div class=\"line\">        <span class=\"keyword\">this</span>.edition +=<span class=\"number\">1</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">使用访问器属性的常见方式即设置一个属性值会导致其他属性发生变化</div><div class=\"line\"></div><div class=\"line\">另一种设置方式(遗弃的方法)</div><div class=\"line\">book.__defineGetter(<span class=\"string\">'year'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>._year;</div><div class=\"line\">&#125;);</div><div class=\"line\">book.__defineSetter(<span class=\"string\">'year'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">newValue</span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>._year = newValue;</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/* 读取属性的特性 Object.getOwePropertyDescriptor() 方法会返回描述对象 */</span></div><div class=\"line\"><span class=\"keyword\">var</span> descriptor = <span class=\"built_in\">Object</span>.getOwePropertyDescriptor(book,<span class=\"string\">'year'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/* 返回 descriptor : &#123;</div><div class=\"line\">   value:'jason',</div><div class=\"line\">   configurable:false</div><div class=\"line\">&#125; */</span></div></pre></td></tr></table></figure>\n<h4 id=\"创建对象的几种方式\"><a href=\"#创建对象的几种方式\" class=\"headerlink\" title=\"创建对象的几种方式\"></a>创建对象的几种方式</h4><h5 id=\"工厂模式\"><a href=\"#工厂模式\" class=\"headerlink\" title=\"工厂模式\"></a>工厂模式</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createGirlFried</span>(<span class=\"params\">name,job</span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> o = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</div><div class=\"line\">    o.name = name;</div><div class=\"line\">    o.job = job;</div><div class=\"line\">    <span class=\"keyword\">return</span> o;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> girl1 = createGirlFried(<span class=\"string\">'shany'</span>,<span class=\"string\">'Dotor'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> girl1 = createGirlFried(<span class=\"string\">'kaer'</span>,<span class=\"string\">'Softwarn Engineer'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//没有解决对象识别的问题（对象的类型）</span></div></pre></td></tr></table></figure>\n<p>#####构造函数<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name,job</span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.name = name;</div><div class=\"line\">    <span class=\"keyword\">this</span>.job = job;</div><div class=\"line\">    <span class=\"keyword\">this</span>.sayName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        alert(<span class=\"keyword\">this</span>.name);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> p1 = <span class=\"keyword\">new</span> Person(<span class=\"string\">'zs'</span>,<span class=\"string\">'doctor'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> p2 = <span class=\"keyword\">new</span> Person(<span class=\"string\">'zs'</span>,<span class=\"string\">'doctor'</span>);</div><div class=\"line\"></div><div class=\"line\">alert(p1.construtor == p2.construtor)  <span class=\"comment\">// true</span></div><div class=\"line\">p1 <span class=\"keyword\">instanceof</span> Person  <span class=\"comment\">// true</span></div><div class=\"line\">p1 <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Object</span>  <span class=\"comment\">// true</span></div></pre></td></tr></table></figure></p>\n<p>使用 new 操作符，调用构造函数创建对象，会经历以下4步</p>\n<ol>\n<li>创建一个新对象</li>\n<li>将构造函数的作用域赋给新对象（this 指向这个新对象）</li>\n<li>执行构造函数中的代码（为这个对象添加新属性）</li>\n<li>返回新对象</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//构造函数 当函数用</span></div><div class=\"line\"><span class=\"keyword\">var</span> p = Person(<span class=\"string\">'sy'</span>,<span class=\"string\">'你猜'</span>);</div><div class=\"line\">alert(<span class=\"built_in\">window</span>.name) <span class=\"comment\">// sy</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 构造函数的问题：不同示例上的同名函数是不相等的</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sayName</span> (<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    alert(<span class=\"keyword\">this</span>.name);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name,job</span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.name = name;</div><div class=\"line\">    <span class=\"keyword\">this</span>.job = job;</div><div class=\"line\">    <span class=\"keyword\">this</span>.sayName = sayName;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">// 虽然函数一样，但污染了全局变量</span></div></pre></td></tr></table></figure>\n<h5 id=\"原型模式\"><a href=\"#原型模式\" class=\"headerlink\" title=\"原型模式\"></a>原型模式</h5><p>每个函数都有一个prototype属性，这是属性是一个指针，指向一个对象（即原型对象，包含共享的属性和方法）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name,job</span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.name = name;</div><div class=\"line\">    <span class=\"keyword\">this</span>.job = job;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">Person.prototype.sayName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    alert(<span class=\"keyword\">this</span>.name);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">Person.prototype.name = <span class=\"string\">'susan'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> p1 = <span class=\"keyword\">new</span> Person(<span class=\"string\">'san'</span>,<span class=\"string\">'programmer'</span>);</div><div class=\"line\">p1._proto_ == Person.prototype <span class=\"comment\">// true</span></div><div class=\"line\"></div><div class=\"line\">p1.name == san <span class=\"comment\">// true</span></div></pre></td></tr></table></figure>\n<p>虽然可以通过对象访问保存在原型中的值，却不能通过对象实例重写原型中的值，如果添加同名属性将屏蔽原型中的同名属性<br>    如果依旧要访问原型的的同名属性，只能<code>delete obj.propertyName</code>  (设置null  undefined 无效)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\">Person.prototype.construtor == Person <span class=\"comment\">// true</span></div><div class=\"line\">Person.prototype.isPrototypeOf(Person) <span class=\"comment\">// true</span></div><div class=\"line\"></div><div class=\"line\">检查一个属性是否是原型属性还是实例属性</div><div class=\"line\">hasOwnProperty(<span class=\"string\">'propName'</span>);</div><div class=\"line\">p1.hasOwnProperty(<span class=\"string\">'name'</span>) <span class=\"comment\">// true</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 遍历对象-两种方式使用in操作符( in / for in )</span></div><div class=\"line\"><span class=\"string\">'name'</span> <span class=\"keyword\">in</span> p1</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> prop <span class=\"keyword\">in</span> p1) &#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(prop)</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/* 使用for - in返回所有能通过对象访问的、 可枚举属性（ 包含实例属 获取对象上所有可枚举的实例属性， 可使用ECMAScript5 的 Object.keys() 方法 Object.keys(p) 返回一个数组（ 顺序和for - i 获取对象上所有可枚举的实例属性， 无论是否可枚举 Object.getOwePropertyNames() ps： construtor 是不可枚举的。*/</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 重写原型对象</span></div><div class=\"line\">Person.prototype = &#123;</div><div class=\"line\">        <span class=\"attr\">construtor</span>: Person, <span class=\"comment\">// 虽说修正了 construtor 但此时的 construtor变成可枚举的，原生的construtor是不可枚举的</span></div><div class=\"line\">        sayName: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.name;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 修复可枚举特性</span></div><div class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(Person.prototype, <span class=\"string\">'construtor'</span>, &#123;</div><div class=\"line\">    <span class=\"attr\">enumerable</span>: <span class=\"literal\">false</span></div><div class=\"line\">&#125;)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/* 原型的问题： 原型的最大问题是由其共享属性的本性导致的， 原型中的所有属性都是被实例共享， 这种共享对函数非常合适， 对包含基本数据类型的属性也说的过去， 然而对于引用问题就比较突出了 */</span></div><div class=\"line\"></div><div class=\"line\">Person.prototype.friends = [<span class=\"string\">'sam'</span>, <span class=\"string\">'shany'</span>];</div><div class=\"line\"><span class=\"comment\">// friends 被所有实例共享， 修改某个实例会影响其他实例</span></div></pre></td></tr></table></figure>\n<h5 id=\"组合使用构造函数和原型模式\"><a href=\"#组合使用构造函数和原型模式\" class=\"headerlink\" title=\"组合使用构造函数和原型模式\"></a>组合使用构造函数和原型模式</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">person</span>(<span class=\"params\">name</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.name = name;</div><div class=\"line\">    <span class=\"keyword\">this</span>.friends = [<span class=\"string\">'san'</span>];</div><div class=\"line\">&#125;</div><div class=\"line\">Person.prototype.sayName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    alert(<span class=\"keyword\">this</span>.name);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"动态原型模式\"><a href=\"#动态原型模式\" class=\"headerlink\" title=\"动态原型模式\"></a>动态原型模式</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">person</span>(<span class=\"params\">name</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.name = name;</div><div class=\"line\">    <span class=\"keyword\">this</span>.friends = [<span class=\"string\">'san'</span>];</div><div class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"keyword\">this</span>.sayName != <span class=\"string\">'function'</span>) &#123;</div><div class=\"line\">        Person.prototype.sayName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            alert(<span class=\"keyword\">this</span>.name);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"寄生构造函数\"><a href=\"#寄生构造函数\" class=\"headerlink\" title=\"寄生构造函数\"></a>寄生构造函数</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name, age</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> o = <span class=\"built_in\">Object</span>();</div><div class=\"line\">    o.name = name;</div><div class=\"line\">    o.age = age;</div><div class=\"line\">    <span class=\"keyword\">return</span> o;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> p = <span class=\"keyword\">new</span> Person(<span class=\"string\">'sam'</span>, <span class=\"number\">20</span>);</div><div class=\"line\"><span class=\"comment\">// return 语句重写了构造函数的值</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 这个方式可在特殊情况下为对象创建构造函数</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">MyArray</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> arr = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</div><div class=\"line\">    arr.push.apply(arr, <span class=\"built_in\">arguments</span>);</div><div class=\"line\">    arr.print = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.join(<span class=\"string\">'-'</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> arr;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"keyword\">new</span> MyArray(<span class=\"string\">'a1'</span>, <span class=\"string\">'a2'</span>);</div><div class=\"line\">alert(c.print());</div></pre></td></tr></table></figure>\n<h5 id=\"稳妥构造函数\"><a href=\"#稳妥构造函数\" class=\"headerlink\" title=\"稳妥构造函数\"></a>稳妥构造函数</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 适合在一些安全的环境中， 没有公共属性， 其方法也不应用this</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name, age</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> o = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</div><div class=\"line\">    o.sayName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">        alert(name);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"原型继承\"><a href=\"#原型继承\" class=\"headerlink\" title=\"原型继承\"></a>原型继承</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SuperType</span>(<span class=\"params\">name</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">this</span>.name = name;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SubType</span>(<span class=\"params\">name, age</span>) </span>&#123;</div><div class=\"line\">    SuperType.call(<span class=\"keyword\">this</span>, name)</div><div class=\"line\">    <span class=\"keyword\">this</span>.age = age;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"组合继承\"><a href=\"#组合继承\" class=\"headerlink\" title=\"组合继承\"></a>组合继承</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 常用的继承模式（ 原型继承 父类方法无法继承过来）</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SubType</span>(<span class=\"params\">name, age</span>) </span>&#123;</div><div class=\"line\">    SuperType.call(<span class=\"keyword\">this</span>, name)</div><div class=\"line\">    <span class=\"keyword\">this</span>.age = age;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">SubType.prototype = <span class=\"keyword\">new</span> SuperType();</div></pre></td></tr></table></figure>\n<h5 id=\"原型继承-1\"><a href=\"#原型继承-1\" class=\"headerlink\" title=\"原型继承\"></a>原型继承</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// ECMAScript实现</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">object</span>(<span class=\"params\">o</span>) </span>&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">F</span>(<span class=\"params\"></span>) </span>&#123;&#125;</div><div class=\"line\">    F.prototype = o;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> F();</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// ECMAScript中 Object.create(p,&#123;</span></div><div class=\"line\">    skill: <span class=\"string\">'js'</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n"},{"title":"fabric快速入门","date":"2016-02-14T05:07:01.000Z","_content":"\nFabric是一个Python库，用于简化使用SSH的应用程序部署或系统管理任务。\n\n它提供的操作包括：执行本地或远程shell命令，上传/下载文件，以及其他辅助功能等。\n\n### 安装\n\n[☞点我传送到fabric官网](http://www.fabfile.org/installing.html)\n\n安装fabric库\n\n``` shell\npip install fabric\n```\n>依赖 Paramiko 、PyCrypto库\n\n安装依赖\n\n``` shell\n# 安装 pycrypto 密码库\npip install pycrypto\n\n# 安装 pycrypto 依赖\npip install ecdsa\n```\n\nps:【windows7 x64 ，python2.7 】Windows下pip安装包报错：Microsoft Visual C++ 9.0 is required Unable to find vcvarsall.bat ，可以安装[Micorsoft Visual C++ Compiler for Python 2.7](https://www.microsoft.com/en-us/download/details.aspx?id=44266) 。\n\n\n### fabric使用\n\n新建py脚本：fabfile.py\n\n``` python\ndef hello():\n    print(\"Hello world!\")\n    \ndef hi():\n    print(\"Hello world!\")\n```\n\n执行fab命令:执行hello函数\n\n``` shell\nfab hello\n```\n\n 如果当前模块下没有fabfile.py文件，那么需要指定-f参数.\n \n ``` shell\n fab -f test.py hello\n ```\n\n使用参数\n\n``` python\ndef hello(name, value):\n    print(\"%s = %s!\" % (name, value))\n```\n \n带参执行命令\n \n```shell\nfab hello:name=age,value=20  \n```\n\n执行本地操作\n\n``` python\nfrom fabric.api import local, lcd\n\ndef lsfab():\n　　with lcd('~/tmp/fab'):\n   　　local('ls')\n```\n\n执行远程操作\n\n``` python\ndef setting_ci():\n    local('echo \"add and commit settings in local\"')\n\ndef update_setting_remote():\n     print \"remote update\"\n     with cd('~/temp'):   #cd用于进入某个目录\n         run('ls -l | wc -l')  #远程操作用run \n```\n\n多服务器操作\n\n``` python\n#!/usr/bin/env python\n# encoding: utf-8\n\nfrom fabric.api import *\nenv.roledefs = {\n            'testserver': ['user1@host1:port1',],\n            'productserver': ['user2@host2:port2', ]\n            }            \n\n@roles('testserver')\ndef task1():\n    run('ls -l | wc -l')\n\n@roles('productserver')\ndef task2():\n    run('ls ~/temp/ | wc -l')\n\ndef do():\n    execute(task1)\n    execute(task2) \n```\n\n\n用不同颜色打印\n\n```python\nfrom fabric.colors import *\n\ndef show():\n    print green('success')\n    print red('fail')\n    print yellow('yellow') \n```\n\nfabric 命令行工具\n\n```shell\n装饰器作用？\n    @task   # 定义任务 @task(alias='dwm') fab --list\n    @parallel # 并行处理\n\n    命令行常用： fab --help\n    fab -l             -- 显示可用的task（命令）\n    fab -H             -- 指定host，支持多host逗号分开\n    fab -R             -- 指定role，支持多个\n    fab -P             -- 并发数，默认是串行\n    fab -w             -- warn_only，默认是碰到异常直接abort退出\n    fab -f             -- 指定入口文件，fab默认入口文件是：fabfile/fabfile.py\n```\n\n[☞更多参考官网教程](http://docs.fabfile.org/en/1.13/)\n","source":"_posts/fabric快速入门.md","raw":"---\ntitle: fabric快速入门\ndate: 2016-02-14 13:07:01\ntags:\n    - python\n    - 运维\n\ncategory: \n    - python\n    \n---\n\nFabric是一个Python库，用于简化使用SSH的应用程序部署或系统管理任务。\n\n它提供的操作包括：执行本地或远程shell命令，上传/下载文件，以及其他辅助功能等。\n\n### 安装\n\n[☞点我传送到fabric官网](http://www.fabfile.org/installing.html)\n\n安装fabric库\n\n``` shell\npip install fabric\n```\n>依赖 Paramiko 、PyCrypto库\n\n安装依赖\n\n``` shell\n# 安装 pycrypto 密码库\npip install pycrypto\n\n# 安装 pycrypto 依赖\npip install ecdsa\n```\n\nps:【windows7 x64 ，python2.7 】Windows下pip安装包报错：Microsoft Visual C++ 9.0 is required Unable to find vcvarsall.bat ，可以安装[Micorsoft Visual C++ Compiler for Python 2.7](https://www.microsoft.com/en-us/download/details.aspx?id=44266) 。\n\n\n### fabric使用\n\n新建py脚本：fabfile.py\n\n``` python\ndef hello():\n    print(\"Hello world!\")\n    \ndef hi():\n    print(\"Hello world!\")\n```\n\n执行fab命令:执行hello函数\n\n``` shell\nfab hello\n```\n\n 如果当前模块下没有fabfile.py文件，那么需要指定-f参数.\n \n ``` shell\n fab -f test.py hello\n ```\n\n使用参数\n\n``` python\ndef hello(name, value):\n    print(\"%s = %s!\" % (name, value))\n```\n \n带参执行命令\n \n```shell\nfab hello:name=age,value=20  \n```\n\n执行本地操作\n\n``` python\nfrom fabric.api import local, lcd\n\ndef lsfab():\n　　with lcd('~/tmp/fab'):\n   　　local('ls')\n```\n\n执行远程操作\n\n``` python\ndef setting_ci():\n    local('echo \"add and commit settings in local\"')\n\ndef update_setting_remote():\n     print \"remote update\"\n     with cd('~/temp'):   #cd用于进入某个目录\n         run('ls -l | wc -l')  #远程操作用run \n```\n\n多服务器操作\n\n``` python\n#!/usr/bin/env python\n# encoding: utf-8\n\nfrom fabric.api import *\nenv.roledefs = {\n            'testserver': ['user1@host1:port1',],\n            'productserver': ['user2@host2:port2', ]\n            }            \n\n@roles('testserver')\ndef task1():\n    run('ls -l | wc -l')\n\n@roles('productserver')\ndef task2():\n    run('ls ~/temp/ | wc -l')\n\ndef do():\n    execute(task1)\n    execute(task2) \n```\n\n\n用不同颜色打印\n\n```python\nfrom fabric.colors import *\n\ndef show():\n    print green('success')\n    print red('fail')\n    print yellow('yellow') \n```\n\nfabric 命令行工具\n\n```shell\n装饰器作用？\n    @task   # 定义任务 @task(alias='dwm') fab --list\n    @parallel # 并行处理\n\n    命令行常用： fab --help\n    fab -l             -- 显示可用的task（命令）\n    fab -H             -- 指定host，支持多host逗号分开\n    fab -R             -- 指定role，支持多个\n    fab -P             -- 并发数，默认是串行\n    fab -w             -- warn_only，默认是碰到异常直接abort退出\n    fab -f             -- 指定入口文件，fab默认入口文件是：fabfile/fabfile.py\n```\n\n[☞更多参考官网教程](http://docs.fabfile.org/en/1.13/)\n","slug":"fabric快速入门","published":1,"updated":"2017-04-17T17:58:02.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1mffb1o0007u86kkr531tbq","content":"<p>Fabric是一个Python库，用于简化使用SSH的应用程序部署或系统管理任务。</p>\n<p>它提供的操作包括：执行本地或远程shell命令，上传/下载文件，以及其他辅助功能等。</p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p><a href=\"http://www.fabfile.org/installing.html\" target=\"_blank\" rel=\"external\">☞点我传送到fabric官网</a></p>\n<p>安装fabric库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pip install fabric</div></pre></td></tr></table></figure>\n<blockquote>\n<p>依赖 Paramiko 、PyCrypto库</p>\n</blockquote>\n<p>安装依赖</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 安装 pycrypto 密码库</div><div class=\"line\">pip install pycrypto</div><div class=\"line\"></div><div class=\"line\"># 安装 pycrypto 依赖</div><div class=\"line\">pip install ecdsa</div></pre></td></tr></table></figure>\n<p>ps:【windows7 x64 ，python2.7 】Windows下pip安装包报错：Microsoft Visual C++ 9.0 is required Unable to find vcvarsall.bat ，可以安装<a href=\"https://www.microsoft.com/en-us/download/details.aspx?id=44266\" target=\"_blank\" rel=\"external\">Micorsoft Visual C++ Compiler for Python 2.7</a> 。</p>\n<h3 id=\"fabric使用\"><a href=\"#fabric使用\" class=\"headerlink\" title=\"fabric使用\"></a>fabric使用</h3><p>新建py脚本：fabfile.py</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">hello</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    print(<span class=\"string\">\"Hello world!\"</span>)</div><div class=\"line\">    </div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">hi</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    print(<span class=\"string\">\"Hello world!\"</span>)</div></pre></td></tr></table></figure>\n<p>执行fab命令:执行hello函数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">fab hello</div></pre></td></tr></table></figure>\n<p> 如果当前模块下没有fabfile.py文件，那么需要指定-f参数.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">fab -f test.py hello</div></pre></td></tr></table></figure>\n<p>使用参数</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">hello</span><span class=\"params\">(name, value)</span>:</span></div><div class=\"line\">    print(<span class=\"string\">\"%s = %s!\"</span> % (name, value))</div></pre></td></tr></table></figure>\n<p>带参执行命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">fab hello:name=age,value=20</div></pre></td></tr></table></figure>\n<p>执行本地操作</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">from</span> fabric.api <span class=\"keyword\">import</span> local, lcd</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">lsfab</span><span class=\"params\">()</span>:</span></div><div class=\"line\">　　<span class=\"keyword\">with</span> lcd(<span class=\"string\">'~/tmp/fab'</span>):</div><div class=\"line\">   　　local(<span class=\"string\">'ls'</span>)</div></pre></td></tr></table></figure>\n<p>执行远程操作</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">setting_ci</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    local(<span class=\"string\">'echo \"add and commit settings in local\"'</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">update_setting_remote</span><span class=\"params\">()</span>:</span></div><div class=\"line\">     <span class=\"keyword\">print</span> <span class=\"string\">\"remote update\"</span></div><div class=\"line\">     <span class=\"keyword\">with</span> cd(<span class=\"string\">'~/temp'</span>):   <span class=\"comment\">#cd用于进入某个目录</span></div><div class=\"line\">         run(<span class=\"string\">'ls -l | wc -l'</span>)  <span class=\"comment\">#远程操作用run</span></div></pre></td></tr></table></figure>\n<p>多服务器操作</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></div><div class=\"line\"><span class=\"comment\"># encoding: utf-8</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">from</span> fabric.api <span class=\"keyword\">import</span> *</div><div class=\"line\">env.roledefs = &#123;</div><div class=\"line\">            <span class=\"string\">'testserver'</span>: [<span class=\"string\">'user1@host1:port1'</span>,],</div><div class=\"line\">            <span class=\"string\">'productserver'</span>: [<span class=\"string\">'user2@host2:port2'</span>, ]</div><div class=\"line\">            &#125;            </div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@roles('testserver')</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">task1</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    run(<span class=\"string\">'ls -l | wc -l'</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@roles('productserver')</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">task2</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    run(<span class=\"string\">'ls ~/temp/ | wc -l'</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">do</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    execute(task1)</div><div class=\"line\">    execute(task2)</div></pre></td></tr></table></figure>\n<p>用不同颜色打印</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">from</span> fabric.colors <span class=\"keyword\">import</span> *</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">show</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    <span class=\"keyword\">print</span> green(<span class=\"string\">'success'</span>)</div><div class=\"line\">    <span class=\"keyword\">print</span> red(<span class=\"string\">'fail'</span>)</div><div class=\"line\">    <span class=\"keyword\">print</span> yellow(<span class=\"string\">'yellow'</span>)</div></pre></td></tr></table></figure>\n<p>fabric 命令行工具</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">装饰器作用？</div><div class=\"line\">    @task   # 定义任务 @task(alias=&apos;dwm&apos;) fab --list</div><div class=\"line\">    @parallel # 并行处理</div><div class=\"line\"></div><div class=\"line\">    命令行常用： fab --help</div><div class=\"line\">    fab -l             -- 显示可用的task（命令）</div><div class=\"line\">    fab -H             -- 指定host，支持多host逗号分开</div><div class=\"line\">    fab -R             -- 指定role，支持多个</div><div class=\"line\">    fab -P             -- 并发数，默认是串行</div><div class=\"line\">    fab -w             -- warn_only，默认是碰到异常直接abort退出</div><div class=\"line\">    fab -f             -- 指定入口文件，fab默认入口文件是：fabfile/fabfile.py</div></pre></td></tr></table></figure>\n<p><a href=\"http://docs.fabfile.org/en/1.13/\" target=\"_blank\" rel=\"external\">☞更多参考官网教程</a></p>\n","excerpt":"","more":"<p>Fabric是一个Python库，用于简化使用SSH的应用程序部署或系统管理任务。</p>\n<p>它提供的操作包括：执行本地或远程shell命令，上传/下载文件，以及其他辅助功能等。</p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p><a href=\"http://www.fabfile.org/installing.html\">☞点我传送到fabric官网</a></p>\n<p>安装fabric库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pip install fabric</div></pre></td></tr></table></figure>\n<blockquote>\n<p>依赖 Paramiko 、PyCrypto库</p>\n</blockquote>\n<p>安装依赖</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 安装 pycrypto 密码库</div><div class=\"line\">pip install pycrypto</div><div class=\"line\"></div><div class=\"line\"># 安装 pycrypto 依赖</div><div class=\"line\">pip install ecdsa</div></pre></td></tr></table></figure>\n<p>ps:【windows7 x64 ，python2.7 】Windows下pip安装包报错：Microsoft Visual C++ 9.0 is required Unable to find vcvarsall.bat ，可以安装<a href=\"https://www.microsoft.com/en-us/download/details.aspx?id=44266\">Micorsoft Visual C++ Compiler for Python 2.7</a> 。</p>\n<h3 id=\"fabric使用\"><a href=\"#fabric使用\" class=\"headerlink\" title=\"fabric使用\"></a>fabric使用</h3><p>新建py脚本：fabfile.py</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">hello</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    print(<span class=\"string\">\"Hello world!\"</span>)</div><div class=\"line\">    </div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">hi</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    print(<span class=\"string\">\"Hello world!\"</span>)</div></pre></td></tr></table></figure>\n<p>执行fab命令:执行hello函数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">fab hello</div></pre></td></tr></table></figure>\n<p> 如果当前模块下没有fabfile.py文件，那么需要指定-f参数.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">fab -f test.py hello</div></pre></td></tr></table></figure>\n<p>使用参数</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">hello</span><span class=\"params\">(name, value)</span>:</span></div><div class=\"line\">    print(<span class=\"string\">\"%s = %s!\"</span> % (name, value))</div></pre></td></tr></table></figure>\n<p>带参执行命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">fab hello:name=age,value=20</div></pre></td></tr></table></figure>\n<p>执行本地操作</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">from</span> fabric.api <span class=\"keyword\">import</span> local, lcd</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">lsfab</span><span class=\"params\">()</span>:</span></div><div class=\"line\">　　<span class=\"keyword\">with</span> lcd(<span class=\"string\">'~/tmp/fab'</span>):</div><div class=\"line\">   　　local(<span class=\"string\">'ls'</span>)</div></pre></td></tr></table></figure>\n<p>执行远程操作</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">setting_ci</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    local(<span class=\"string\">'echo \"add and commit settings in local\"'</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">update_setting_remote</span><span class=\"params\">()</span>:</span></div><div class=\"line\">     <span class=\"keyword\">print</span> <span class=\"string\">\"remote update\"</span></div><div class=\"line\">     <span class=\"keyword\">with</span> cd(<span class=\"string\">'~/temp'</span>):   <span class=\"comment\">#cd用于进入某个目录</span></div><div class=\"line\">         run(<span class=\"string\">'ls -l | wc -l'</span>)  <span class=\"comment\">#远程操作用run</span></div></pre></td></tr></table></figure>\n<p>多服务器操作</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></div><div class=\"line\"><span class=\"comment\"># encoding: utf-8</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">from</span> fabric.api <span class=\"keyword\">import</span> *</div><div class=\"line\">env.roledefs = &#123;</div><div class=\"line\">            <span class=\"string\">'testserver'</span>: [<span class=\"string\">'user1@host1:port1'</span>,],</div><div class=\"line\">            <span class=\"string\">'productserver'</span>: [<span class=\"string\">'user2@host2:port2'</span>, ]</div><div class=\"line\">            &#125;            </div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@roles('testserver')</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">task1</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    run(<span class=\"string\">'ls -l | wc -l'</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@roles('productserver')</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">task2</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    run(<span class=\"string\">'ls ~/temp/ | wc -l'</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">do</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    execute(task1)</div><div class=\"line\">    execute(task2)</div></pre></td></tr></table></figure>\n<p>用不同颜色打印</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">from</span> fabric.colors <span class=\"keyword\">import</span> *</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">show</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    <span class=\"keyword\">print</span> green(<span class=\"string\">'success'</span>)</div><div class=\"line\">    <span class=\"keyword\">print</span> red(<span class=\"string\">'fail'</span>)</div><div class=\"line\">    <span class=\"keyword\">print</span> yellow(<span class=\"string\">'yellow'</span>)</div></pre></td></tr></table></figure>\n<p>fabric 命令行工具</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">装饰器作用？</div><div class=\"line\">    @task   # 定义任务 @task(alias=&apos;dwm&apos;) fab --list</div><div class=\"line\">    @parallel # 并行处理</div><div class=\"line\"></div><div class=\"line\">    命令行常用： fab --help</div><div class=\"line\">    fab -l             -- 显示可用的task（命令）</div><div class=\"line\">    fab -H             -- 指定host，支持多host逗号分开</div><div class=\"line\">    fab -R             -- 指定role，支持多个</div><div class=\"line\">    fab -P             -- 并发数，默认是串行</div><div class=\"line\">    fab -w             -- warn_only，默认是碰到异常直接abort退出</div><div class=\"line\">    fab -f             -- 指定入口文件，fab默认入口文件是：fabfile/fabfile.py</div></pre></td></tr></table></figure>\n<p><a href=\"http://docs.fabfile.org/en/1.13/\">☞更多参考官网教程</a></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cj1mffb0p0000u86k42ywrvgt","category_id":"cj1mffb1b0004u86ko5z3km6n","_id":"cj1mffb2b000bu86kpu9prgko"},{"post_id":"cj1mffb140002u86k2woxp9qp","category_id":"cj1mffb1b0004u86ko5z3km6n","_id":"cj1mffb2i000fu86kde3nfdpm"},{"post_id":"cj1mffb1k0006u86kabx5qwel","category_id":"cj1mffb2e000cu86kkhkziztx","_id":"cj1mffb2k000ju86k730i5gzi"},{"post_id":"cj1mffb1o0007u86kkr531tbq","category_id":"cj1mffb2i000gu86kkz5hll32","_id":"cj1mffb2m000lu86ketnib6f3"}],"PostTag":[{"post_id":"cj1mffb0p0000u86k42ywrvgt","tag_id":"cj1mffb1h0005u86kl3c5td6g","_id":"cj1mffb27000au86khr0bt941"},{"post_id":"cj1mffb140002u86k2woxp9qp","tag_id":"cj1mffb1x0009u86kndx160p1","_id":"cj1mffb2h000eu86kzmpswxfd"},{"post_id":"cj1mffb1k0006u86kabx5qwel","tag_id":"cj1mffb2g000du86komcvmxp4","_id":"cj1mffb2j000iu86kk57z6iku"},{"post_id":"cj1mffb1o0007u86kkr531tbq","tag_id":"cj1mffb2j000hu86kzzzicopy","_id":"cj1mffb2n000mu86k4rwa7fnk"},{"post_id":"cj1mffb1o0007u86kkr531tbq","tag_id":"cj1mffb2l000ku86kypdp71r6","_id":"cj1mffb2p000nu86kygccvh54"}],"Tag":[{"name":"工具","_id":"cj1mffb1h0005u86kl3c5td6g"},{"name":"linux","_id":"cj1mffb1x0009u86kndx160p1"},{"name":"js","_id":"cj1mffb2g000du86komcvmxp4"},{"name":"python","_id":"cj1mffb2j000hu86kzzzicopy"},{"name":"运维","_id":"cj1mffb2l000ku86kypdp71r6"}]}}