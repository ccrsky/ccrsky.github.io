{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/uploads/alipay_reward.png","path":"uploads/alipay_reward.png","modified":1,"renderable":0},{"_id":"source/uploads/avator.jpg","path":"uploads/avator.jpg","modified":1,"renderable":0},{"_id":"source/uploads/wechat_reward.png","path":"uploads/wechat_reward.png","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1517402109802},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1517402109802},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1517402109803},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1517402109802},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1517402109804},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1517402109805},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1517402109804},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1517402109804},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1517402109805},{"_id":"themes/next/README.cn.md","hash":"5d8af3d8de8d3926126a738519e97c8442b0effe","modified":1517402109805},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1517402109805},{"_id":"themes/next/README.md","hash":"44b28d995681a7c48bfe3d0577d6203812d07e59","modified":1517402109806},{"_id":"themes/next/_config.yml","hash":"9f2338f94c18d41ba7f4ebcc874677b25ea4fc55","modified":1517402799996},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1517402109806},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1517402109806},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1517402109832},{"_id":"source/categories/index.md","hash":"2e1eb26658c2028ba6b540e4cbd433829345b492","modified":1516346967203},{"_id":"source/_posts/Handlebars模板使用.md","hash":"4abdd18276d4d77d749aebe7b0658cd3491c0bcc","modified":1516346967197},{"_id":"source/_posts/RN-修改包服务器端口.md","hash":"680abd699e95bd822af77601f6594aa17acd9203","modified":1516346967198},{"_id":"source/_posts/Hexo插入媒体资源.md","hash":"184aed896fe3f157f16aa6f5e2767e97d066fdf4","modified":1516346967197},{"_id":"source/_posts/RN-真机调试及内部发布.md","hash":"97ec901d957aeb1a8a723524c47c8c6112b397d6","modified":1516346967198},{"_id":"source/_posts/fabric快速入门.md","hash":"40d92bb2b77150883cf01e6ce5fec6466c786ddd","modified":1516346967198},{"_id":"source/_posts/javascript对象.md","hash":"d16c3660945286610fb4462073dff6b5559f9587","modified":1516346967202},{"_id":"source/_posts/pm2的使用.md","hash":"19e98512bdd2d9b66ba2b1c5eec7174f443412d0","modified":1517403815227},{"_id":"source/_posts/UTF-8-without-BOM.md","hash":"4f42dfe9ae6991034c463a36fbbc881b6e392697","modified":1516346967198},{"_id":"source/_posts/linux进程资源信息.md","hash":"2caa77a19a17917c9f988dfd95fd1b548d1deb70","modified":1516346967202},{"_id":"source/_posts/next.md","hash":"5bab56ec85997aa561d4ba922ef5caca0e48b953","modified":1517403084284},{"_id":"source/uploads/alipay_reward.png","hash":"23f9ddcbf93c9ab9219305dd2767d4246e36eb85","modified":1516346967204},{"_id":"source/_posts/sed常用操作命令.md","hash":"0f4d39a63397f1953839b8ba0223dc0aa1b05e5a","modified":1516346967203},{"_id":"source/uploads/avator.jpg","hash":"0ef99616eccda15af268f6e96cba95369122b1e9","modified":1516346967204},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1517402109782},{"_id":"themes/next/.git/config","hash":"bf7d1df65cf34d0f25a7184a58c37a09f72e4be7","modified":1517402109785},{"_id":"source/_posts/tmux使用.md","hash":"8d5c1042da84fcae3e8170a1f8c3bd48bcff12da","modified":1516346967203},{"_id":"source/tags/index.md","hash":"4d86dcedd5d85895a5320a1b3f9f473c003f7dbe","modified":1516346967204},{"_id":"source/uploads/wechat_reward.png","hash":"e8ed15948ae22f0488169421115dd78da545b369","modified":1516346967205},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1517401583045},{"_id":"themes/next/.git/index","hash":"22993de984c9440a2ae89797fb71985f1e9471e6","modified":1517402386615},{"_id":"themes/next/.git/packed-refs","hash":"339779e225d913a344c5e6210617badd049c4434","modified":1517402109779},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"352093a1b210c72136687fd2eee649244cee402c","modified":1517402109803},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1517402109803},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1517402109802},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1517402109803},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1517402109807},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1517402109807},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1517402109807},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1517402109807},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1517402109807},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1517402109807},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1517402109808},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1517402109808},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1517402109808},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1517402109808},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1517402109808},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1517402109809},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1517402109808},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1517402109809},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1517402109809},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1517402109810},{"_id":"themes/next/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1517402109812},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1517402109831},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1517402109831},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1517402109831},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1517402109831},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1517402109832},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1517402109831},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1517402109833},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1517402109831},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1517402109832},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1517402109927},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1517402109926},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1517402109926},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1517402109871},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1517401583046},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1517401583048},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1517401583050},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1517401583051},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1517401583047},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1517401583052},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1517401583047},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1517401583053},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1517401583049},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1517401583044},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1517401583050},{"_id":"themes/next/.git/logs/HEAD","hash":"b4d2bb97f2d43f600c9bc1bd54d0582e9f3addc5","modified":1517402109784},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1517402109812},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1517402109812},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1517402109814},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1517402109813},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1517402109813},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1517402109816},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1517402109816},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1517402109815},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1517402109817},{"_id":"themes/next/layout/_macro/post.swig","hash":"446a35a2cd389f8cfc3aa38973a9b44ad0740134","modified":1517402109814},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1517402109815},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1517402109817},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1517402109818},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1517402109818},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1517402109818},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1517402109820},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1517402109820},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1517402109821},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1517402109827},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1517402109828},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1517402109828},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1517402109829},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1517402109829},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1517402109829},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1517402109829},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1517402109834},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1517402109834},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1517402109834},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1517402109834},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1517402109835},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1517402109835},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1517402109835},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1517402109835},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1517402109835},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1517402109871},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1517402109871},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1517402109871},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1517402109871},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1517402109872},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1517402109873},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1517402109872},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1517402109872},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1517402109873},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1517402109873},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1517402109873},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1517402109873},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1517402109874},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1517402109874},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1517402109874},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1517402109874},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1517402109874},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1517402109874},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1517402109874},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1517402109820},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1517402109820},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1517402109861},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1517402109861},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1517402109862},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1517402109870},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1517402109871},{"_id":"themes/next/.git/refs/heads/master","hash":"f4d9f6f8bc79e9bc071cf29324a74a1d78158ab9","modified":1517402109784},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1517402109817},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1517402109817},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1517402109818},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1517402109818},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1517402109819},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1517402109819},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1517402109819},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1517402109819},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1517402109819},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1517402109820},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1517402109820},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1517402109821},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1517402109821},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1517402109821},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1517402109821},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1517402109821},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1517402109820},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1517402109821},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1517402109821},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1517402109822},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1517402109822},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1517402109822},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1517402109822},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1517402109822},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1517402109823},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1517402109823},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1517402109823},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1517402109823},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1517402109824},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1517402109825},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1517402109825},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1517402109826},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1517402109827},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1517402109827},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1517402109830},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1517402109830},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1517402109830},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1517402109830},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1517402109860},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1517402109862},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1517402109862},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1517402109861},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1517402109870},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1517402109871},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1517402109870},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1517402109870},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1517402109875},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1517402109875},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1517402109875},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1517402109875},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1517402109876},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1517402109876},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1517402109875},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1517402109875},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1517402109876},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1517402109876},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1517402109876},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1517402109883},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1517402109880},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1517402109883},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1517402109884},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1517402109884},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1517402109888},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1517402109888},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1517402109893},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1517402109889},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1517402109893},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1517402109889},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1517402109894},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1517402109894},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1517402109894},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1517402109909},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1517402109908},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1517402109911},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1517402109910},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1517402109910},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1517402109911},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1517402109910},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1517402109912},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1517402109913},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1517402109912},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1517402109913},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1517402109913},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1517402109914},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1517402109914},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1517402109914},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1517402109914},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1517402109915},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1517402109915},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1517402109915},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1517402109915},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1517402109916},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1517402109915},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1517402109916},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1517402109916},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1517402109916},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1517402109917},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1517402109917},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1517402109921},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1517402109921},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1517402109923},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1517402109923},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1517402109923},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1517402109908},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1517402109782},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"b4d2bb97f2d43f600c9bc1bd54d0582e9f3addc5","modified":1517402109784},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1517402109830},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1517402109830},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1517402109836},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1517402109837},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1517402109837},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1517402109836},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1517402109837},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1517402109841},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1517402109848},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1517402109857},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1517402109857},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1517402109858},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1517402109859},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1517402109859},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1517402109860},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1517402109858},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1517402109864},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1517402109863},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1517402109864},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1517402109864},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1517402109865},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1517402109864},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1517402109865},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1517402109865},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1517402109867},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1517402109868},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4aac01962520d60b03b23022ab601ad4bd19c08c","modified":1517402109868},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1517402109868},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1517402109868},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1517402109869},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1517402109869},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1517402109869},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1517402109869},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1517402109870},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1517402109870},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1517402109876},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1517402109878},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1517402109884},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1517402109880},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1517402109879},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1517402109884},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1517402109884},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1517402109885},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1517402109885},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1517402109886},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1517402109887},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1517402109888},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1517402109887},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1517402109890},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1517402109890},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1517402109895},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1517402109895},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1517402109894},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1517402109921},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1517402109920},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1517402109907},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1517402109879},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1517402109922},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1517402109906},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1517402109837},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1517402109838},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1517402109838},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1517402109838},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1517402109838},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1517402109838},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1517402109839},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1517402109839},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1517402109839},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"b4d2bb97f2d43f600c9bc1bd54d0582e9f3addc5","modified":1517402109782},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1517402109840},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1517402109841},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1517402109840},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1517402109841},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1517402109841},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1517402109840},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1517402109843},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1517402109843},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1517402109843},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1517402109843},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1517402109843},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1517402109844},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1517402109844},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1517402109841},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1517402109844},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1517402109844},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1517402109845},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1517402109845},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1517402109846},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1517402109846},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1517402109846},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1517402109846},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1517402109846},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1517402109847},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1517402109848},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1517402109848},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1517402109848},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1517402109848},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1517402109846},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1517402109849},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1517402109849},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1517402109841},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1517402109849},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1517402109850},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1517402109849},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1517402109850},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1517402109850},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1517402109852},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1517402109853},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1517402109853},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1517402109845},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1517402109854},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1517402109855},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1517402109855},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1517402109853},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1517402109856},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1517402109852},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1517402109850},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1517402109855},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1517402109869},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1517402109877},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1517402109866},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1517402109866},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1517402109877},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1517402109877},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1517402109878},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1517402109878},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1517402109886},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1517402109886},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1517402109886},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1517402109887},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1517402109886},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1517402109887},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1517402109899},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1517402109897},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1517402109904},{"_id":"themes/next/.git/objects/pack/pack-96fbd1d56aef4d2d90fb132274888fcdb6eea7fd.idx","hash":"eb10dece370e7f0667a7dfb71b8b12b2c9e00e8e","modified":1517402109752},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1517402109883},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1517402109920},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1517402109902},{"_id":"themes/next/.git/objects/pack/pack-96fbd1d56aef4d2d90fb132274888fcdb6eea7fd.pack","hash":"3fe8f716a595aa2b66d3629af7e3d0850c5da6a2","modified":1517402109747},{"_id":"public/atom.xml","hash":"3cdbb6c6654873ed6c21ab5cd6702312cf6c617c","modified":1517403839837},{"_id":"public/categories/index.html","hash":"c04e4fc71c4b631910174ee7dadaf92cdb6ac323","modified":1517403839861},{"_id":"public/tags/index.html","hash":"0e090dbd8a9c7308b19c8e484c9947cc219b92f0","modified":1517403839861},{"_id":"public/archives/page/2/index.html","hash":"a856b05cf06947f395468606e91f2016fccde872","modified":1517403839861},{"_id":"public/archives/2016/index.html","hash":"a87ff193c75a16e0056ac9a53d672e9ed62a20e3","modified":1517403839861},{"_id":"public/archives/2016/02/index.html","hash":"b2fbf55794f592b47611371471cbb3a3b5798097","modified":1517403839861},{"_id":"public/archives/2017/03/index.html","hash":"7318c36ceace5741771be5655a8b19dc68c874a2","modified":1517403839861},{"_id":"public/archives/2017/04/index.html","hash":"af421ed0dd4d2544c1e406843c200661cafca385","modified":1517403839861},{"_id":"public/archives/2017/08/index.html","hash":"bb1eb4c54f6e45ac85126b496584241abdcade71","modified":1517403839861},{"_id":"public/archives/2017/09/index.html","hash":"b8c653270ebe759859f2c598dc17a0cb00caf578","modified":1517403839861},{"_id":"public/archives/2018/index.html","hash":"3eaa2ed5b4dc305543b47f1f32345dcbe5601ef3","modified":1517403839861},{"_id":"public/archives/2018/01/index.html","hash":"6ace624dc8a1f55c69f93591b4699552e3915bd9","modified":1517403839861},{"_id":"public/categories/js/index.html","hash":"246397bd19c4ffc92d0a994803a668f204c19430","modified":1517403839861},{"_id":"public/categories/js/react-native/index.html","hash":"59b4833d3fdcfa5063b5799cd87f0de85199a01e","modified":1517403839861},{"_id":"public/categories/python/index.html","hash":"6baaacd631f8368663d4030e89a98484ca336688","modified":1517403839861},{"_id":"public/categories/常见问题/index.html","hash":"da5fa914c9d7b954751b2d66b83d2cd9cf9ae6e9","modified":1517403839861},{"_id":"public/categories/linux/index.html","hash":"800a92093ee3307b545bce635d382a3208f2a84b","modified":1517403839861},{"_id":"public/tags/js/index.html","hash":"e8fc71ffeb58eb62513df9b0fb00678ac5a28fba","modified":1517403839861},{"_id":"public/tags/react-native/index.html","hash":"0b6ca59983c0087467a8c80b31554794f290a631","modified":1517403839861},{"_id":"public/tags/hexo/index.html","hash":"57461b0b5a452dabc3b3afed8850ddc66df61bc3","modified":1517403839862},{"_id":"public/tags/python/index.html","hash":"e4c4e05837f1d828fd61196a3e882948f4d6762d","modified":1517403839862},{"_id":"public/tags/运维/index.html","hash":"d60f46dcefd77095c0b229f83ad3cb7c0c72005d","modified":1517403839862},{"_id":"public/tags/node/index.html","hash":"9973c05747f0d4fe7f372f928bcf03c2ea2714a1","modified":1517403839862},{"_id":"public/tags/常见问题/index.html","hash":"57f7bcfd86d412dedde6792613613777b402c608","modified":1517403839862},{"_id":"public/tags/linux/index.html","hash":"4f1cc511b8e5a6bd6fd073595ccd9340a5bd9102","modified":1517403839862},{"_id":"public/tags/工具/index.html","hash":"e4b1862f295ae42cc622c1b21529154c48a17f99","modified":1517403839862},{"_id":"public/2018/01/31/pm2的使用/index.html","hash":"48ae97f869b713e9b99aa21df2119a8f24573cf9","modified":1517403839862},{"_id":"public/2017/09/11/RN-真机调试及内部发布/index.html","hash":"7a887378ad3d6ead53d0d8f25adb2cbaae04d0de","modified":1517403839862},{"_id":"public/2017/09/11/RN-修改包服务器端口/index.html","hash":"d64860d5aa717beee93c614a084ab2e4acccaffc","modified":1517403839862},{"_id":"public/2017/08/17/next/index.html","hash":"4d787871a50aa81cec99e5664a7b4c8275d17027","modified":1517403839862},{"_id":"public/2017/08/15/Hexo插入媒体资源/index.html","hash":"9f921ad478ee6575847da521dd25e440f4e01f46","modified":1517403839862},{"_id":"public/2017/08/15/Handlebars模板使用/index.html","hash":"6e9b368e6265708bf9540551586e840796a49f72","modified":1517403839862},{"_id":"public/2017/04/26/sed常用操作命令/index.html","hash":"f620c3a76f0ca8b9d23c72fd867e6ff320f65fc9","modified":1517403839862},{"_id":"public/2017/04/21/UTF-8-without-BOM/index.html","hash":"9c7991f04b1bae4bef05a5e5617845e511062675","modified":1517403839862},{"_id":"public/2017/04/17/linux进程资源信息/index.html","hash":"36ee4837ce4e9477b91ff71a0b8a29da728dd3ba","modified":1517403839862},{"_id":"public/2017/03/21/tmux使用/index.html","hash":"5e5d9fca70e90b956a3d79b596a135dfdaa3e816","modified":1517403839862},{"_id":"public/2016/02/14/fabric快速入门/index.html","hash":"82d39a8aef8c9c8d20868893a4cd2dd9fa937045","modified":1517403839862},{"_id":"public/2016/02/11/javascript对象/index.html","hash":"9b4507d62629e077bea1f3b81fd25808c92563c4","modified":1517403839862},{"_id":"public/archives/index.html","hash":"e01146ea740970d0a7546a641f458b97d0535cdb","modified":1517403839862},{"_id":"public/archives/2017/index.html","hash":"c8e3681c92bb1c3243d12ebdf3000ede08ee506f","modified":1517403839863},{"_id":"public/index.html","hash":"2bc535a926eb78186ed14a192e2dd0e113513d50","modified":1517403839863},{"_id":"public/page/2/index.html","hash":"cd487e97dfc541f72898b87cb8bc78cff0952dc6","modified":1517403839863},{"_id":"public/uploads/alipay_reward.png","hash":"23f9ddcbf93c9ab9219305dd2767d4246e36eb85","modified":1517403839868},{"_id":"public/uploads/avator.jpg","hash":"0ef99616eccda15af268f6e96cba95369122b1e9","modified":1517403839868},{"_id":"public/uploads/wechat_reward.png","hash":"e8ed15948ae22f0488169421115dd78da545b369","modified":1517403839868},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1517403839868},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1517403839868},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1517403839868},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1517403839868},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1517403839869},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1517403839869},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1517403839869},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1517403839869},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1517403839869},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1517403839869},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1517403839869},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1517403839869},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1517403839869},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1517403839869},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1517403839869},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1517403839869},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1517403839869},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1517403839869},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1517403839869},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1517403839869},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1517403839869},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1517403839869},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1517403839869},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1517403839869},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1517403839869},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1517403839869},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1517403839869},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1517403839869},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1517403839869},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1517403839870},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1517403839870},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1517403839870},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1517403839870},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1517403840372},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1517403840377},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1517403840392},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1517403840392},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1517403840392},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1517403840392},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1517403840392},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1517403840392},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1517403840392},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1517403840392},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1517403840393},{"_id":"public/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1517403840393},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1517403840393},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1517403840393},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1517403840393},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1517403840393},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1517403840393},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1517403840393},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1517403840393},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1517403840393},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1517403840393},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1517403840393},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1517403840393},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1517403840393},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1517403840393},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1517403840393},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1517403840393},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1517403840393},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1517403840393},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1517403840394},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1517403840394},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1517403840394},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1517403840394},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1517403840394},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1517403840394},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1517403840394},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1517403840394},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1517403840394},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1517403840394},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1517403840394},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1517403840395},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1517403840395},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1517403840395},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1517403840395},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1517403840395},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1517403840395},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1517403840395},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1517403840395},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1517403840395},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1517403840395},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1517403840395},{"_id":"public/css/main.css","hash":"96fe93b45f3557c2977c8de4ca362ce098c72a07","modified":1517403840395},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1517403840395},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1517403840395},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1517403840395},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1517403840395},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1517403840395},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1517403840395},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1517403840396},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1517403840396},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1517403840396},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1517403840396},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1517403840396},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1517403840396},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1517403840396},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1517403840396},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1517403840396},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1517403840396},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1517403840396},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1517403840396},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1517403840396},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1517403840396},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1517403840396},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1517403840397},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1517403840397},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1517403840455}],"Category":[{"name":"js","_id":"cjd332dzr0003c2mjbml6dnbc"},{"name":"react native","parent":"cjd332dzr0003c2mjbml6dnbc","_id":"cjd332dzy000bc2mjct0sj39o"},{"name":"python","_id":"cjd332e4q000nc2mjw1v2le8w"},{"name":"常见问题","_id":"cjd332e4x000yc2mj98qlbse2"},{"name":"linux","_id":"cjd332e510016c2mjewdv3ky4"}],"Data":[],"Page":[{"title":"categories","date":"2017-03-21T05:10:52.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-03-21 13:10:52\ntype: \"categories\"\ncomments: false\n---\n","updated":"2018-01-19T07:29:27.203Z","path":"categories/index.html","layout":"page","_id":"cjd332dzm0000c2mjoowyi1wg","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2017-03-21T05:09:34.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-03-21 13:09:34\ntype: \"tags\"\ncomments: false\n---\n","updated":"2018-01-19T07:29:27.204Z","path":"tags/index.html","layout":"page","_id":"cjd332e4l000jc2mja2vrr1tz","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Handlebars模板使用","date":"2017-08-14T16:09:36.000Z","_content":"\n\n[Handlebars](http://handlebarsjs.com/) 是 JavaScript 一个语义模板库，通过对view和data的分离来快速构建Web模板。\n\n![](http://ouonaooa5.bkt.clouddn.com/handlebarjs.jpg)\n\n### 安装\n\n- 直接下载 [Handlebars.js](http://builds.handlebarsjs.com.s3.amazonaws.com/handlebars-v4.0.10.js) 和 [Handlebar Runtime](http://builds.handlebarsjs.com.s3.amazonaws.com/handlebars.runtime-v4.0.10.js)\n- 通过npm下载\n\n```bash\n# 安装\nnpm install --save handlebars\n\n# 引用\nrequire('handlebars');\n\n# 如果模板预编译后,可直接使用运行时环境\nrequire('handlebars/runtime');\n```\n\n\n\n### 快速入门\n\n#### Handlebar表达式\n\nHandlebars会从当前上下文中查找title和body属性\n\n```html\n<div class=\"entry\">\n  <h1>{{title}}</h1>\n  <div class=\"body\">\n    {{body}}\n  </div>\n</div>\n```\n\n#### 路径查询\nHandlebars会从当前上下文中查找article属性,然后在查找结果中找title属性\n\n``` html\n<h1>{{article.title}}</h1>\n<!-- 两者等价，下面方法deprecated-->\n<h1>{{article/title}}</h1>\n\n```\n>标识符不能包含 Whitespace ! \" # % & ' ( ) * + , . / ; < = > @ [ \\ ] ^ ` { | } ~\n\n如果出现不合法的属性，可以使用中括号的方式进行引用\n\n``` html\n{{#each articles.[10].[#comments]}}\n  <h1>{{subject}}</h1>\n  {{{body}}}\n{{/each}}\n```\n>默认情况下 Handlebars为了安全，会对内容进行转义，如需原样输出可以使用{%raw %}`{{{ html }}}`{%endraw%}\n\n#### Helper模板方法\n\n```js\n{{{link story}}}\n\nHandlebars.registerHelper('link', function(object, options) {\n  var url = Handlebars.escapeExpression(object.url),\n      text = Handlebars.escapeExpression(object.text);\n\n  return new Handlebars.SafeString(\n    \"<a href='\" + url + \"'>\" + text + \"</a>\"\n  );\n});\n```\nHandlebars helper支持接收一个可选的键值对参数作为它的最后一个参数传入(hash)\n\n```js\n{{{link \"See more...\" href=story.url class=\"story\"}}}\nHandlebars.registerHelper('link', function(text, options) {\n  var attrs = [];\n\n  for (var prop in options.hash) {\n    attrs.push(\n        Handlebars.escapeExpression(prop) + '=\"'\n        + Handlebars.escapeExpression(options.hash[prop]) + '\"');\n  }\n\n  return new Handlebars.SafeString(\n    \"<a \" + attrs.join(\" \") + \">\" + Handlebars.escapeExpression(text) + \"</a>\"\n  );\n});\n```\nHelper 支持嵌套\n\n``` html\n{{outer-helper (inner-helper 'abc') 'def'}}\n```\n\n#### 去掉空格\n\n去掉多余空格(在大括号边添加 ~)\n\n``` html\n{{#each nav ~}}\n  <a href=\"{{url}}\">\n    {{~#if test}}\n      {{~title}}\n    {{~^~}}\n      Empty\n    {{~/if~}}\n  </a>\n{{~/each}}\n```\n\n#### 标签转义\n使用标签原内容\n\n```html\n<!-- 在前边添加 \\ -->\n\\{{escaped}}\n\n<!--使用4个大括号-->\n{{{{raw}}}}\n  {{escaped}}\n{{{{/raw}}}}\n```\n\n\n### 编译模板\n\n#### 模板字符串\n\n```html\n<script id=\"entry-template\" type=\"text/x-handlebars-template\">\n  <div class=\"entry\">\n    <h1>{{title}}</h1>\n    <div class=\"body\">\n      {{body}}\n    </div>\n  </div>\n</script>\n```\n使用 `Handlebars.compile`编译模板输出模板函数\n\n```js\nvar source   = $(\"#entry-template\").html();\nvar template = Handlebars.compile(source);\n\n// 如果预先生成模板函数了，则可以直接引用runtime库，不必将handlebar全部引入\n```\n\n#### 命令行工具\n```bash\nnpm install handlebars -g\n\n# 语法 \nhandlebars <input> -f <output>\n\n# 查看更多使用方法\nhandlebars --help \n\n#如果输入文件是 person.handlebars，Handlebar会将文件内容作为compile方法的第一个参数，生成一个模板方法，插入到 Handlebars.templates.person上，之后可直接使用 Handlebars.templates.person(context,options)\n\n# 若预编译，直接使用runtime库 <script src=\"/libs/handlebars.runtime.js\"></script>\n```\n\n### 高级使用\n\n#### complile 函数\n\n```js\n模板函数接收第二个可选参数，传以下参数:\ndata:传入私有变量 @variable \nhelpers:传入局部helper，而不是全局定义，重名会覆盖全局。\npartials: 自定义模板片段partials，与helper类似\n```\n\n#### 块级表达式\n块级表达式可以改变模板局部context，块级helper以#开口，结尾以/开发，如{%raw%}`{{#hi}} {{/hi}}`{%endraw%}\n\n```js\n<div class=\"entry\">\n  <h1>{{title}}</h1>\n  <div class=\"body\">\n    {{#bold}}{{body}}{{/bold}}\n    {{#noop}} hello {{/noop}}\n  </div>\n</div>\n\nHandlebars.registerHelper('noop', function(options) {\n  return options.fn(this);\n});\n// 其中this执行当前上下文 options.fn 就像普通的模板函数一样，如果块级helper含有else部分，和fn类似的还有一个 options.reverse 渲染else里的模板。\n\nHandlebars.registerHelper('bold', function(options) {\n  return new Handlebars.SafeString(\n      '<div class=\"mybold\">'\n      + options.fn(this)\n      + '</div>');\n});\n\n\n<!-- with 会改变当前上下文 -->\n{{#with story}}\n<div class=\"intro\">{{{intro}}}</div>\n<div class=\"body\">{{{body}}}</div>\n{{/with}}\n\n\n\n<!-- 使用each 迭代 -->\n{{#each comments}}\n<div class=\"comment\">\n  <h2>{{subject}}</h2>\n  {{{body}}}\n</div>\n{{/each}}\n\n// each 原理\nHandlebars.registerHelper('each', function(context, options) {\n  var ret = \"\";\n  for(var i=0, j=context.length; i<j; i++) {\n    ret = ret + options.fn(context[i]);\n  }\n  return ret;\n});\n\n\n\n<!-- 条件渲染 -->\n{{#if isActive}}\n  <img src=\"star.gif\" alt=\"Active\">\n{{else}}\n  <img src=\"cry.gif\" alt=\"Inactive\">\n{{/if}}\n\nHandlebars.registerHelper('if', function(conditional, options) {\n  if(conditional) {\n    return options.fn(this);  \n  } else {\n    return options.inverse(this);  // 使用else里边的模板\n  }\n});\n\n\n<!-- hash 参数 -->\n{{#list nav id=\"nav-bar\" class=\"top\"}}\n  <a href=\"{{url}}\">{{title}}</a>\n{{/list}}\n\nHandlebars.registerHelper('list', function(context, options) {\n  var attrs = Em.keys(options.hash).map(function(key) {\n    return key + '=\"' + options.hash[key] + '\"';\n  }).join(\" \");\n\n  return \"<ul \" + attrs + \">\" + context.map(function(item) {\n    return \"<li>\" + options.fn(item) + \"</li>\";\n  }).join(\"\\n\") + \"</ul>\";\n});\n\n\n<!-- block helper 支持向子模板里注入自己的私有变量，如@index -->\n{{#list array}}\n  {{@index}}. {{title}}\n{{/list}}\nHandlebars.registerHelper('list', function(context, options) {\n  var out = \"<ul>\", data;\n\n  if (options.data) {\n    data = Handlebars.createFrame(options.data);\n  }\n\n  for (var i=0; i<context.length; i++) {\n    if (data) {\n      data.index = i;\n    }\n\n    out += \"<li>\" + options.fn(context[i], { data: data }) + \"</li>\";\n  }\n\n  out += \"</ul>\";\n  return out;\n});\n\n// 访问父作用域中的index 可以使用 @../index\n\n// Handlebars 3.0 部分内置helper 支持命名参数  user为当前this,userId为index\n{{#each users as |user userId|}}\n  Id: {{userId}} Name: {{user.name}}\n{{/each}}\n\nHandlebars.registerHelper('block-params', function() {\n  var args = [],\n      options = arguments[arguments.length - 1];\n  for (var i = 0; i < arguments.length - 1; i++) {\n    args.push(arguments[i]);\n  }\n\n  return options.fn(this, {data: options.data, blockParams: args});\n});\n{{#block-params 1 2 3 as |foo bar baz|}}\n  {{foo}} {{bar}} {{baz}}\n{{/block-params}}\n\n<!-- 纯渲染，不做任何处理 -->\n{{{{raw-helper}}}}\n  {{bar}}\n{{{{/raw-helper}}}}\n```\n\n\n\n#### 路径查找\n\n可以通过{% raw %} `../name` 或者`{{./name}} or {{this/name}} or {{this.name}}`{% endraw %}\n\n\n```html\n{{permalink}}\n{{#each comments}}\n  {{../permalink}}\n\n  {{#if title}}\n    {{../permalink}}\n  {{/if}}\n{{/each}}\n<!-- permalink 查找上级作用域中的Permalink属性 -->\n```\n\n\n#### 模板注释\n使用{% raw %}`{{!-- --}} or {{! }}`{% endraw %}注释内容\n\n```html\n{{!-- This comment will not be in the output --}} \n\n{{! This comment will not be in the output }}\n```\n\n\n#### Helper\n使用 `Handlebars.registerHelper`注册模板助手\n\n```js\nHandlebars.registerHelper('fullName', function(person) {\n  return person.firstName + \" \" + person.lastName;\n});\n\nHandlebars.registerHelper('agree_button', function() {\n  var emotion = Handlebars.escapeExpression(this.emotion),\n      name = Handlebars.escapeExpression(this.name);\n\n// 如果不需要转义内容，使用Handlebars.SafeString \n  return new Handlebars.SafeString(\n    \"<button>I agree. I \" + emotion + \" \" + name + \"</button>\"\n  );\n});\n\nHandlebars.registerHelper('if', function(conditional, options) {\n  if(conditional) {\n    return options.fn(this);  \n  } else {\n    return options.inverse(this);  // 使用else里边的模板\n  }\n});\n```\n\n\n\n#### 模板片段Partials \n使用 `Handlebars.registerPartial`注册模板片段\n\n```js\nHandlebars.registerPartial('myPartial', '{{name}}')\n```\n\n使用{% raw %}`{{> myPartial }}`{% endraw %}调用\n\n```html\n<div class=\"post\">\n  {{> userMessage tagName=\"h1\" }}\n  <h1>Comments</h1>\n</div>\n\n<!-- 动态模板片段 -->\n{{> (whichPartial) }}\n\n<!-- 更改上下文 -->\n{{> myPartial myOtherContext }}\n\n<!-- hash 参数，模板中可直接使用该参数-->\n{{> myPartial parameter=value }}\n\n<!-- Partial Blocks  如果partial 没有注册就直接调用，就会抛出异常，使用块级helper可解决 -->\n{{#> myPartial }}\n  Failover content    {{! myPartial 没有注册时才渲染 }}\n{{/myPartial}}\n\n<!-- 可以通过@partial-block拿到默认内容 -->\n{{#> layout }}\n  My Content\n{{/layout}}\n\nSite Content\n{{> @partial-block }}\n\n<!-- 模板内声明partial，当前block和子模板中可用 -->\n{{#*inline \"myPartial\"}}\n  My Content\n{{/inline}}\n\n{{#each children}}\n  {{> myPartial}}\n{{/each}}\n\n```\n\n\n#### 内置Helper\n\n`if` 如果值为 `false, undefined, null, \"\", 0, or []` 就会渲染else部分\n\n```html\n<div class=\"entry\">\n  {{#if author}}\n    <h1>{{firstName}} {{lastName}}</h1>\n  {{else}}\n    <h1>Unknown Author</h1>\n  {{/if}}\n</div>\n```\n\n`unless` 相当于`if`的else情况\n\n```html\n{{#unless license}}\n  <h3 class=\"warning\">WARNING: This entry does not have a license!</h3>\n{{/unless}}\n```\n\n`each`遍历数组，会改变当前context，执行遍历的元素\n\n```html\n<ul class=\"people_list\">\n  {{#each people}}\n    <li>{{this}}</li>\n    \n  {{else}}\n    暂无数据\n  {{/each}}\n</ul>\n```\n>{{@key}} 遍历对象，相当于变量的key;{{@index}}遍历数组，为array的index\n \n`with` 会改变当前context\n\n```html\n\n<div class=\"entry\">\n  <h1>{{title}}</h1>\n\n  {{#with author}}\n  <h2>By {{firstName}} {{lastName}}</h2>\n  {{else}}\n  <p class=\"empty\">No content</p>\n  {{/with}}\n</div>\n``` \n\n`log` 渲染时打印日志\n\n```html\n{{log \"Look at me!\"}}\n\n<!-- level 支持的值为 debug, info, warn, and error -->\n{{log \"Log!\" level=\"error\"}}\n```\n\n处理helper异常\n如果调用一个不存在的helper，就会异常，`options.name`会自动注入为helper名称\n\n```js\nHandlebars.registerHelper('helperMissing', function(/* [args, ] options */) {\n  var options = arguments[arguments.length - 1];\n  throw new Handlebars.Exception('Unknown field: ' + options.name);\n});\n```\n\n\n#### API\n\n```js\n// 注册 partial\nHandlebars.registerPartial('foo', partial);\n\nHandlebars.registerPartial({\n  foo: partial,\n  bar: partial\n});\n// 注销 partial\nHandlebars.unregisterPartial('foo');\n\n// 注册 helper\nHandlebars.registerHelper('foo', function() {\n});\n\nHandlebars.registerHelper({\n  foo: function() {\n  },\n  bar: function() {\n  }\n});\n// 注销helper\nHandlebars.unregisterHelper('foo');\n\n// 创建块级作用域 child data\nHandlebars.createFrame(data)\n\n// 顶级对象\n@root \n\n// 数组第一个元素\n@first\n\n// 数组最后一个元素\n@last\n\n// 对象的key\n@key\n\n// 数组的index\n@index\n\n```\n[API更多请参考](http://handlebarsjs.com/reference.html)\n\n","source":"_posts/Handlebars模板使用.md","raw":"---\ntitle: Handlebars模板使用\ndate: 2017-08-15 00:09:36\ntags:\n    - js\n\ncategory: \n    - js\n---\n\n\n[Handlebars](http://handlebarsjs.com/) 是 JavaScript 一个语义模板库，通过对view和data的分离来快速构建Web模板。\n\n![](http://ouonaooa5.bkt.clouddn.com/handlebarjs.jpg)\n\n### 安装\n\n- 直接下载 [Handlebars.js](http://builds.handlebarsjs.com.s3.amazonaws.com/handlebars-v4.0.10.js) 和 [Handlebar Runtime](http://builds.handlebarsjs.com.s3.amazonaws.com/handlebars.runtime-v4.0.10.js)\n- 通过npm下载\n\n```bash\n# 安装\nnpm install --save handlebars\n\n# 引用\nrequire('handlebars');\n\n# 如果模板预编译后,可直接使用运行时环境\nrequire('handlebars/runtime');\n```\n\n\n\n### 快速入门\n\n#### Handlebar表达式\n\nHandlebars会从当前上下文中查找title和body属性\n\n```html\n<div class=\"entry\">\n  <h1>{{title}}</h1>\n  <div class=\"body\">\n    {{body}}\n  </div>\n</div>\n```\n\n#### 路径查询\nHandlebars会从当前上下文中查找article属性,然后在查找结果中找title属性\n\n``` html\n<h1>{{article.title}}</h1>\n<!-- 两者等价，下面方法deprecated-->\n<h1>{{article/title}}</h1>\n\n```\n>标识符不能包含 Whitespace ! \" # % & ' ( ) * + , . / ; < = > @ [ \\ ] ^ ` { | } ~\n\n如果出现不合法的属性，可以使用中括号的方式进行引用\n\n``` html\n{{#each articles.[10].[#comments]}}\n  <h1>{{subject}}</h1>\n  {{{body}}}\n{{/each}}\n```\n>默认情况下 Handlebars为了安全，会对内容进行转义，如需原样输出可以使用{%raw %}`{{{ html }}}`{%endraw%}\n\n#### Helper模板方法\n\n```js\n{{{link story}}}\n\nHandlebars.registerHelper('link', function(object, options) {\n  var url = Handlebars.escapeExpression(object.url),\n      text = Handlebars.escapeExpression(object.text);\n\n  return new Handlebars.SafeString(\n    \"<a href='\" + url + \"'>\" + text + \"</a>\"\n  );\n});\n```\nHandlebars helper支持接收一个可选的键值对参数作为它的最后一个参数传入(hash)\n\n```js\n{{{link \"See more...\" href=story.url class=\"story\"}}}\nHandlebars.registerHelper('link', function(text, options) {\n  var attrs = [];\n\n  for (var prop in options.hash) {\n    attrs.push(\n        Handlebars.escapeExpression(prop) + '=\"'\n        + Handlebars.escapeExpression(options.hash[prop]) + '\"');\n  }\n\n  return new Handlebars.SafeString(\n    \"<a \" + attrs.join(\" \") + \">\" + Handlebars.escapeExpression(text) + \"</a>\"\n  );\n});\n```\nHelper 支持嵌套\n\n``` html\n{{outer-helper (inner-helper 'abc') 'def'}}\n```\n\n#### 去掉空格\n\n去掉多余空格(在大括号边添加 ~)\n\n``` html\n{{#each nav ~}}\n  <a href=\"{{url}}\">\n    {{~#if test}}\n      {{~title}}\n    {{~^~}}\n      Empty\n    {{~/if~}}\n  </a>\n{{~/each}}\n```\n\n#### 标签转义\n使用标签原内容\n\n```html\n<!-- 在前边添加 \\ -->\n\\{{escaped}}\n\n<!--使用4个大括号-->\n{{{{raw}}}}\n  {{escaped}}\n{{{{/raw}}}}\n```\n\n\n### 编译模板\n\n#### 模板字符串\n\n```html\n<script id=\"entry-template\" type=\"text/x-handlebars-template\">\n  <div class=\"entry\">\n    <h1>{{title}}</h1>\n    <div class=\"body\">\n      {{body}}\n    </div>\n  </div>\n</script>\n```\n使用 `Handlebars.compile`编译模板输出模板函数\n\n```js\nvar source   = $(\"#entry-template\").html();\nvar template = Handlebars.compile(source);\n\n// 如果预先生成模板函数了，则可以直接引用runtime库，不必将handlebar全部引入\n```\n\n#### 命令行工具\n```bash\nnpm install handlebars -g\n\n# 语法 \nhandlebars <input> -f <output>\n\n# 查看更多使用方法\nhandlebars --help \n\n#如果输入文件是 person.handlebars，Handlebar会将文件内容作为compile方法的第一个参数，生成一个模板方法，插入到 Handlebars.templates.person上，之后可直接使用 Handlebars.templates.person(context,options)\n\n# 若预编译，直接使用runtime库 <script src=\"/libs/handlebars.runtime.js\"></script>\n```\n\n### 高级使用\n\n#### complile 函数\n\n```js\n模板函数接收第二个可选参数，传以下参数:\ndata:传入私有变量 @variable \nhelpers:传入局部helper，而不是全局定义，重名会覆盖全局。\npartials: 自定义模板片段partials，与helper类似\n```\n\n#### 块级表达式\n块级表达式可以改变模板局部context，块级helper以#开口，结尾以/开发，如{%raw%}`{{#hi}} {{/hi}}`{%endraw%}\n\n```js\n<div class=\"entry\">\n  <h1>{{title}}</h1>\n  <div class=\"body\">\n    {{#bold}}{{body}}{{/bold}}\n    {{#noop}} hello {{/noop}}\n  </div>\n</div>\n\nHandlebars.registerHelper('noop', function(options) {\n  return options.fn(this);\n});\n// 其中this执行当前上下文 options.fn 就像普通的模板函数一样，如果块级helper含有else部分，和fn类似的还有一个 options.reverse 渲染else里的模板。\n\nHandlebars.registerHelper('bold', function(options) {\n  return new Handlebars.SafeString(\n      '<div class=\"mybold\">'\n      + options.fn(this)\n      + '</div>');\n});\n\n\n<!-- with 会改变当前上下文 -->\n{{#with story}}\n<div class=\"intro\">{{{intro}}}</div>\n<div class=\"body\">{{{body}}}</div>\n{{/with}}\n\n\n\n<!-- 使用each 迭代 -->\n{{#each comments}}\n<div class=\"comment\">\n  <h2>{{subject}}</h2>\n  {{{body}}}\n</div>\n{{/each}}\n\n// each 原理\nHandlebars.registerHelper('each', function(context, options) {\n  var ret = \"\";\n  for(var i=0, j=context.length; i<j; i++) {\n    ret = ret + options.fn(context[i]);\n  }\n  return ret;\n});\n\n\n\n<!-- 条件渲染 -->\n{{#if isActive}}\n  <img src=\"star.gif\" alt=\"Active\">\n{{else}}\n  <img src=\"cry.gif\" alt=\"Inactive\">\n{{/if}}\n\nHandlebars.registerHelper('if', function(conditional, options) {\n  if(conditional) {\n    return options.fn(this);  \n  } else {\n    return options.inverse(this);  // 使用else里边的模板\n  }\n});\n\n\n<!-- hash 参数 -->\n{{#list nav id=\"nav-bar\" class=\"top\"}}\n  <a href=\"{{url}}\">{{title}}</a>\n{{/list}}\n\nHandlebars.registerHelper('list', function(context, options) {\n  var attrs = Em.keys(options.hash).map(function(key) {\n    return key + '=\"' + options.hash[key] + '\"';\n  }).join(\" \");\n\n  return \"<ul \" + attrs + \">\" + context.map(function(item) {\n    return \"<li>\" + options.fn(item) + \"</li>\";\n  }).join(\"\\n\") + \"</ul>\";\n});\n\n\n<!-- block helper 支持向子模板里注入自己的私有变量，如@index -->\n{{#list array}}\n  {{@index}}. {{title}}\n{{/list}}\nHandlebars.registerHelper('list', function(context, options) {\n  var out = \"<ul>\", data;\n\n  if (options.data) {\n    data = Handlebars.createFrame(options.data);\n  }\n\n  for (var i=0; i<context.length; i++) {\n    if (data) {\n      data.index = i;\n    }\n\n    out += \"<li>\" + options.fn(context[i], { data: data }) + \"</li>\";\n  }\n\n  out += \"</ul>\";\n  return out;\n});\n\n// 访问父作用域中的index 可以使用 @../index\n\n// Handlebars 3.0 部分内置helper 支持命名参数  user为当前this,userId为index\n{{#each users as |user userId|}}\n  Id: {{userId}} Name: {{user.name}}\n{{/each}}\n\nHandlebars.registerHelper('block-params', function() {\n  var args = [],\n      options = arguments[arguments.length - 1];\n  for (var i = 0; i < arguments.length - 1; i++) {\n    args.push(arguments[i]);\n  }\n\n  return options.fn(this, {data: options.data, blockParams: args});\n});\n{{#block-params 1 2 3 as |foo bar baz|}}\n  {{foo}} {{bar}} {{baz}}\n{{/block-params}}\n\n<!-- 纯渲染，不做任何处理 -->\n{{{{raw-helper}}}}\n  {{bar}}\n{{{{/raw-helper}}}}\n```\n\n\n\n#### 路径查找\n\n可以通过{% raw %} `../name` 或者`{{./name}} or {{this/name}} or {{this.name}}`{% endraw %}\n\n\n```html\n{{permalink}}\n{{#each comments}}\n  {{../permalink}}\n\n  {{#if title}}\n    {{../permalink}}\n  {{/if}}\n{{/each}}\n<!-- permalink 查找上级作用域中的Permalink属性 -->\n```\n\n\n#### 模板注释\n使用{% raw %}`{{!-- --}} or {{! }}`{% endraw %}注释内容\n\n```html\n{{!-- This comment will not be in the output --}} \n\n{{! This comment will not be in the output }}\n```\n\n\n#### Helper\n使用 `Handlebars.registerHelper`注册模板助手\n\n```js\nHandlebars.registerHelper('fullName', function(person) {\n  return person.firstName + \" \" + person.lastName;\n});\n\nHandlebars.registerHelper('agree_button', function() {\n  var emotion = Handlebars.escapeExpression(this.emotion),\n      name = Handlebars.escapeExpression(this.name);\n\n// 如果不需要转义内容，使用Handlebars.SafeString \n  return new Handlebars.SafeString(\n    \"<button>I agree. I \" + emotion + \" \" + name + \"</button>\"\n  );\n});\n\nHandlebars.registerHelper('if', function(conditional, options) {\n  if(conditional) {\n    return options.fn(this);  \n  } else {\n    return options.inverse(this);  // 使用else里边的模板\n  }\n});\n```\n\n\n\n#### 模板片段Partials \n使用 `Handlebars.registerPartial`注册模板片段\n\n```js\nHandlebars.registerPartial('myPartial', '{{name}}')\n```\n\n使用{% raw %}`{{> myPartial }}`{% endraw %}调用\n\n```html\n<div class=\"post\">\n  {{> userMessage tagName=\"h1\" }}\n  <h1>Comments</h1>\n</div>\n\n<!-- 动态模板片段 -->\n{{> (whichPartial) }}\n\n<!-- 更改上下文 -->\n{{> myPartial myOtherContext }}\n\n<!-- hash 参数，模板中可直接使用该参数-->\n{{> myPartial parameter=value }}\n\n<!-- Partial Blocks  如果partial 没有注册就直接调用，就会抛出异常，使用块级helper可解决 -->\n{{#> myPartial }}\n  Failover content    {{! myPartial 没有注册时才渲染 }}\n{{/myPartial}}\n\n<!-- 可以通过@partial-block拿到默认内容 -->\n{{#> layout }}\n  My Content\n{{/layout}}\n\nSite Content\n{{> @partial-block }}\n\n<!-- 模板内声明partial，当前block和子模板中可用 -->\n{{#*inline \"myPartial\"}}\n  My Content\n{{/inline}}\n\n{{#each children}}\n  {{> myPartial}}\n{{/each}}\n\n```\n\n\n#### 内置Helper\n\n`if` 如果值为 `false, undefined, null, \"\", 0, or []` 就会渲染else部分\n\n```html\n<div class=\"entry\">\n  {{#if author}}\n    <h1>{{firstName}} {{lastName}}</h1>\n  {{else}}\n    <h1>Unknown Author</h1>\n  {{/if}}\n</div>\n```\n\n`unless` 相当于`if`的else情况\n\n```html\n{{#unless license}}\n  <h3 class=\"warning\">WARNING: This entry does not have a license!</h3>\n{{/unless}}\n```\n\n`each`遍历数组，会改变当前context，执行遍历的元素\n\n```html\n<ul class=\"people_list\">\n  {{#each people}}\n    <li>{{this}}</li>\n    \n  {{else}}\n    暂无数据\n  {{/each}}\n</ul>\n```\n>{{@key}} 遍历对象，相当于变量的key;{{@index}}遍历数组，为array的index\n \n`with` 会改变当前context\n\n```html\n\n<div class=\"entry\">\n  <h1>{{title}}</h1>\n\n  {{#with author}}\n  <h2>By {{firstName}} {{lastName}}</h2>\n  {{else}}\n  <p class=\"empty\">No content</p>\n  {{/with}}\n</div>\n``` \n\n`log` 渲染时打印日志\n\n```html\n{{log \"Look at me!\"}}\n\n<!-- level 支持的值为 debug, info, warn, and error -->\n{{log \"Log!\" level=\"error\"}}\n```\n\n处理helper异常\n如果调用一个不存在的helper，就会异常，`options.name`会自动注入为helper名称\n\n```js\nHandlebars.registerHelper('helperMissing', function(/* [args, ] options */) {\n  var options = arguments[arguments.length - 1];\n  throw new Handlebars.Exception('Unknown field: ' + options.name);\n});\n```\n\n\n#### API\n\n```js\n// 注册 partial\nHandlebars.registerPartial('foo', partial);\n\nHandlebars.registerPartial({\n  foo: partial,\n  bar: partial\n});\n// 注销 partial\nHandlebars.unregisterPartial('foo');\n\n// 注册 helper\nHandlebars.registerHelper('foo', function() {\n});\n\nHandlebars.registerHelper({\n  foo: function() {\n  },\n  bar: function() {\n  }\n});\n// 注销helper\nHandlebars.unregisterHelper('foo');\n\n// 创建块级作用域 child data\nHandlebars.createFrame(data)\n\n// 顶级对象\n@root \n\n// 数组第一个元素\n@first\n\n// 数组最后一个元素\n@last\n\n// 对象的key\n@key\n\n// 数组的index\n@index\n\n```\n[API更多请参考](http://handlebarsjs.com/reference.html)\n\n","slug":"Handlebars模板使用","published":1,"updated":"2018-01-19T07:29:27.197Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjd332dzn0001c2mjc088x6na","content":"<p><a href=\"http://handlebarsjs.com/\" target=\"_blank\" rel=\"noopener\">Handlebars</a> 是 JavaScript 一个语义模板库，通过对view和data的分离来快速构建Web模板。</p>\n<p><img src=\"http://ouonaooa5.bkt.clouddn.com/handlebarjs.jpg\" alt=\"\"></p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><ul>\n<li>直接下载 <a href=\"http://builds.handlebarsjs.com.s3.amazonaws.com/handlebars-v4.0.10.js\" target=\"_blank\" rel=\"noopener\">Handlebars.js</a> 和 <a href=\"http://builds.handlebarsjs.com.s3.amazonaws.com/handlebars.runtime-v4.0.10.js\" target=\"_blank\" rel=\"noopener\">Handlebar Runtime</a></li>\n<li>通过npm下载</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装</span></span><br><span class=\"line\">npm install --save handlebars</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 引用</span></span><br><span class=\"line\">require(<span class=\"string\">'handlebars'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果模板预编译后,可直接使用运行时环境</span></span><br><span class=\"line\">require(<span class=\"string\">'handlebars/runtime'</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"快速入门\"><a href=\"#快速入门\" class=\"headerlink\" title=\"快速入门\"></a>快速入门</h3><h4 id=\"Handlebar表达式\"><a href=\"#Handlebar表达式\" class=\"headerlink\" title=\"Handlebar表达式\"></a>Handlebar表达式</h4><p>Handlebars会从当前上下文中查找title和body属性</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"entry\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;&#123;title&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"body\"</span>&gt;</span></span><br><span class=\"line\">    &#123;&#123;body&#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"路径查询\"><a href=\"#路径查询\" class=\"headerlink\" title=\"路径查询\"></a>路径查询</h4><p>Handlebars会从当前上下文中查找article属性,然后在查找结果中找title属性</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;&#123;article.title&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 两者等价，下面方法deprecated--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;&#123;article/title&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>标识符不能包含 Whitespace ! “ # % &amp; ‘ ( ) * + , . / ; &lt; = &gt; @ [ \\ ] ^ ` { | } ~</p>\n</blockquote>\n<p>如果出现不合法的属性，可以使用中括号的方式进行引用</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;#each articles.[10].[#comments]&#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;&#123;subject&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  &#123;&#123;&#123;body&#125;&#125;&#125;</span><br><span class=\"line\">&#123;&#123;/each&#125;&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>默认情况下 Handlebars为了安全，会对内容进行转义，如需原样输出可以使用`{{{ html }}}`</p>\n</blockquote>\n<h4 id=\"Helper模板方法\"><a href=\"#Helper模板方法\" class=\"headerlink\" title=\"Helper模板方法\"></a>Helper模板方法</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;&#123;link story&#125;&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Handlebars.registerHelper(<span class=\"string\">'link'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">object, options</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> url = Handlebars.escapeExpression(object.url),</span><br><span class=\"line\">      text = Handlebars.escapeExpression(object.text);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Handlebars.SafeString(</span><br><span class=\"line\">    <span class=\"string\">\"&lt;a href='\"</span> + url + <span class=\"string\">\"'&gt;\"</span> + text + <span class=\"string\">\"&lt;/a&gt;\"</span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>Handlebars helper支持接收一个可选的键值对参数作为它的最后一个参数传入(hash)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;&#123;link <span class=\"string\">\"See more...\"</span> href=story.url <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"story\"</span>&#125;&#125;&#125;</span><br><span class=\"line\">Handlebars.registerHelper(<span class=\"string\">'link'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">text, options</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> attrs = [];</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> prop <span class=\"keyword\">in</span> options.hash) &#123;</span><br><span class=\"line\">    attrs.push(</span><br><span class=\"line\">        Handlebars.escapeExpression(prop) + <span class=\"string\">'=\"'</span></span><br><span class=\"line\">        + Handlebars.escapeExpression(options.hash[prop]) + <span class=\"string\">'\"'</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Handlebars.SafeString(</span><br><span class=\"line\">    <span class=\"string\">\"&lt;a \"</span> + attrs.join(<span class=\"string\">\" \"</span>) + <span class=\"string\">\"&gt;\"</span> + Handlebars.escapeExpression(text) + <span class=\"string\">\"&lt;/a&gt;\"</span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>Helper 支持嵌套</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;outer-helper (inner-helper 'abc') 'def'&#125;&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"去掉空格\"><a href=\"#去掉空格\" class=\"headerlink\" title=\"去掉空格\"></a>去掉空格</h4><p>去掉多余空格(在大括号边添加 ~)</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;#each nav ~&#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"&#123;&#123;url&#125;&#125;\"</span>&gt;</span></span><br><span class=\"line\">    &#123;&#123;~#if test&#125;&#125;</span><br><span class=\"line\">      &#123;&#123;~title&#125;&#125;</span><br><span class=\"line\">    &#123;&#123;~^~&#125;&#125;</span><br><span class=\"line\">      Empty</span><br><span class=\"line\">    &#123;&#123;~/if~&#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">&#123;&#123;~/each&#125;&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"标签转义\"><a href=\"#标签转义\" class=\"headerlink\" title=\"标签转义\"></a>标签转义</h4><p>使用标签原内容</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 在前边添加 \\ --&gt;</span></span><br><span class=\"line\">\\&#123;&#123;escaped&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--使用4个大括号--&gt;</span></span><br><span class=\"line\">&#123;&#123;&#123;&#123;raw&#125;&#125;&#125;&#125;</span><br><span class=\"line\">  &#123;&#123;escaped&#125;&#125;</span><br><span class=\"line\">&#123;&#123;&#123;&#123;/raw&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"编译模板\"><a href=\"#编译模板\" class=\"headerlink\" title=\"编译模板\"></a>编译模板</h3><h4 id=\"模板字符串\"><a href=\"#模板字符串\" class=\"headerlink\" title=\"模板字符串\"></a>模板字符串</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">id</span>=<span class=\"string\">\"entry-template\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/x-handlebars-template\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">  &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"entry\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;&#123;title&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"javascript\">    &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"body\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#123;&#123;body&#125;&#125;</span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>使用 <code>Handlebars.compile</code>编译模板输出模板函数</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> source   = $(<span class=\"string\">\"#entry-template\"</span>).html();</span><br><span class=\"line\"><span class=\"keyword\">var</span> template = Handlebars.compile(source);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 如果预先生成模板函数了，则可以直接引用runtime库，不必将handlebar全部引入</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"命令行工具\"><a href=\"#命令行工具\" class=\"headerlink\" title=\"命令行工具\"></a>命令行工具</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install handlebars -g</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 语法 </span></span><br><span class=\"line\">handlebars &lt;input&gt; -f &lt;output&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看更多使用方法</span></span><br><span class=\"line\">handlebars --<span class=\"built_in\">help</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#如果输入文件是 person.handlebars，Handlebar会将文件内容作为compile方法的第一个参数，生成一个模板方法，插入到 Handlebars.templates.person上，之后可直接使用 Handlebars.templates.person(context,options)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 若预编译，直接使用runtime库 &lt;script src=\"/libs/handlebars.runtime.js\"&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"高级使用\"><a href=\"#高级使用\" class=\"headerlink\" title=\"高级使用\"></a>高级使用</h3><h4 id=\"complile-函数\"><a href=\"#complile-函数\" class=\"headerlink\" title=\"complile 函数\"></a>complile 函数</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">模板函数接收第二个可选参数，传以下参数:</span><br><span class=\"line\">data:传入私有变量 @variable </span><br><span class=\"line\">helpers:传入局部helper，而不是全局定义，重名会覆盖全局。</span><br><span class=\"line\">partials: 自定义模板片段partials，与helper类似</span><br></pre></td></tr></table></figure>\n<h4 id=\"块级表达式\"><a href=\"#块级表达式\" class=\"headerlink\" title=\"块级表达式\"></a>块级表达式</h4><p>块级表达式可以改变模板局部context，块级helper以#开口，结尾以/开发，如`{{#hi}} {{/hi}}`</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"entry\"</span>&gt;</span><br><span class=\"line\">  &lt;h1&gt;&#123;&#123;title&#125;&#125;&lt;<span class=\"regexp\">/h1&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;div class=\"body\"&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &#123;&#123;#bold&#125;&#125;&#123;&#123;body&#125;&#125;&#123;&#123;/</span>bold&#125;&#125;</span><br><span class=\"line\">    &#123;&#123;#noop&#125;&#125; hello &#123;&#123;/noop&#125;&#125;</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">Handlebars.registerHelper(<span class=\"string\">'noop'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">options</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> options.fn(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 其中this执行当前上下文 options.fn 就像普通的模板函数一样，如果块级helper含有else部分，和fn类似的还有一个 options.reverse 渲染else里的模板。</span></span><br><span class=\"line\"></span><br><span class=\"line\">Handlebars.registerHelper(<span class=\"string\">'bold'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">options</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Handlebars.SafeString(</span><br><span class=\"line\">      <span class=\"string\">'&lt;div class=\"mybold\"&gt;'</span></span><br><span class=\"line\">      + options.fn(<span class=\"keyword\">this</span>)</span><br><span class=\"line\">      + <span class=\"string\">'&lt;/div&gt;'</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- <span class=\"keyword\">with</span> 会改变当前上下文 --&gt;</span><br><span class=\"line\">&#123;&#123;#with story&#125;&#125;</span><br><span class=\"line\">&lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"intro\"</span>&gt;&#123;&#123;&#123;intro&#125;&#125;&#125;&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;div class=\"body\"&gt;&#123;&#123;&#123;body&#125;&#125;&#125;&lt;/</span>div&gt;</span><br><span class=\"line\">&#123;&#123;/<span class=\"keyword\">with</span>&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- 使用each 迭代 --&gt;</span><br><span class=\"line\">&#123;&#123;#each comments&#125;&#125;</span><br><span class=\"line\">&lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"comment\"</span>&gt;</span><br><span class=\"line\">  &lt;h2&gt;&#123;&#123;subject&#125;&#125;&lt;<span class=\"regexp\">/h2&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &#123;&#123;&#123;body&#125;&#125;&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>div&gt;</span><br><span class=\"line\">&#123;&#123;/each&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// each 原理</span></span><br><span class=\"line\">Handlebars.registerHelper(<span class=\"string\">'each'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">context, options</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> ret = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>, j=context.length; i&lt;j; i++) &#123;</span><br><span class=\"line\">    ret = ret + options.fn(context[i]);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- 条件渲染 --&gt;</span><br><span class=\"line\">&#123;&#123;#if isActive&#125;&#125;</span><br><span class=\"line\">  &lt;img src=<span class=\"string\">\"star.gif\"</span> alt=<span class=\"string\">\"Active\"</span>&gt;</span><br><span class=\"line\">&#123;&#123;<span class=\"keyword\">else</span>&#125;&#125;</span><br><span class=\"line\">  &lt;img src=<span class=\"string\">\"cry.gif\"</span> alt=<span class=\"string\">\"Inactive\"</span>&gt;</span><br><span class=\"line\">&#123;&#123;/<span class=\"keyword\">if</span>&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Handlebars.registerHelper(<span class=\"string\">'if'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">conditional, options</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(conditional) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> options.fn(<span class=\"keyword\">this</span>);  </span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> options.inverse(<span class=\"keyword\">this</span>);  <span class=\"comment\">// 使用else里边的模板</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- hash 参数 --&gt;</span><br><span class=\"line\">&#123;&#123;#list nav id=\"nav-bar\" class=\"top\"&#125;&#125;</span><br><span class=\"line\">  &lt;a href=<span class=\"string\">\"&#123;&#123;url&#125;&#125;\"</span>&gt;&#123;&#123;title&#125;&#125;&lt;<span class=\"regexp\">/a&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&#123;&#123;/</span>list&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Handlebars.registerHelper(<span class=\"string\">'list'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">context, options</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> attrs = Em.keys(options.hash).map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">key</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> key + <span class=\"string\">'=\"'</span> + options.hash[key] + <span class=\"string\">'\"'</span>;</span><br><span class=\"line\">  &#125;).join(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">\"&lt;ul \"</span> + attrs + <span class=\"string\">\"&gt;\"</span> + context.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">\"&lt;li&gt;\"</span> + options.fn(item) + <span class=\"string\">\"&lt;/li&gt;\"</span>;</span><br><span class=\"line\">  &#125;).join(<span class=\"string\">\"\\n\"</span>) + <span class=\"string\">\"&lt;/ul&gt;\"</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- block helper 支持向子模板里注入自己的私有变量，如@index --&gt;</span><br><span class=\"line\">&#123;&#123;#list array&#125;&#125;</span><br><span class=\"line\">  &#123;&#123;@index&#125;&#125;. &#123;&#123;title&#125;&#125;</span><br><span class=\"line\">&#123;&#123;/list&#125;&#125;</span><br><span class=\"line\">Handlebars.registerHelper(<span class=\"string\">'list'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">context, options</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> out = <span class=\"string\">\"&lt;ul&gt;\"</span>, data;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (options.data) &#123;</span><br><span class=\"line\">    data = Handlebars.createFrame(options.data);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>; i&lt;context.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (data) &#123;</span><br><span class=\"line\">      data.index = i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    out += <span class=\"string\">\"&lt;li&gt;\"</span> + options.fn(context[i], &#123; <span class=\"attr\">data</span>: data &#125;) + <span class=\"string\">\"&lt;/li&gt;\"</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  out += <span class=\"string\">\"&lt;/ul&gt;\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> out;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 访问父作用域中的index 可以使用 @../index</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Handlebars 3.0 部分内置helper 支持命名参数  user为当前this,userId为index</span></span><br><span class=\"line\">&#123;&#123;#each users as |user userId|&#125;&#125;</span><br><span class=\"line\">  Id: &#123;&#123;userId&#125;&#125; Name: &#123;&#123;user.name&#125;&#125;</span><br><span class=\"line\">&#123;&#123;/each&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Handlebars.registerHelper(<span class=\"string\">'block-params'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> args = [],</span><br><span class=\"line\">      options = <span class=\"built_in\">arguments</span>[<span class=\"built_in\">arguments</span>.length - <span class=\"number\">1</span>];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"built_in\">arguments</span>.length - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">    args.push(<span class=\"built_in\">arguments</span>[i]);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> options.fn(<span class=\"keyword\">this</span>, &#123;<span class=\"attr\">data</span>: options.data, <span class=\"attr\">blockParams</span>: args&#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&#123;&#123;#block-params 1 2 3 as |foo bar baz|&#125;&#125;</span><br><span class=\"line\">  &#123;&#123;foo&#125;&#125; &#123;&#123;bar&#125;&#125; &#123;&#123;baz&#125;&#125;</span><br><span class=\"line\">&#123;&#123;/block-params&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- 纯渲染，不做任何处理 --&gt;</span><br><span class=\"line\">&#123;&#123;&#123;&#123;raw-helper&#125;&#125;&#125;&#125;</span><br><span class=\"line\">  &#123;&#123;bar&#125;&#125;</span><br><span class=\"line\">&#123;&#123;&#123;&#123;/raw-helper&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"路径查找\"><a href=\"#路径查找\" class=\"headerlink\" title=\"路径查找\"></a>路径查找</h4><p>可以通过 `../name` 或者`{{./name}} or {{this/name}} or {{this.name}}`</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;permalink&#125;&#125;</span><br><span class=\"line\">&#123;&#123;#each comments&#125;&#125;</span><br><span class=\"line\">  &#123;&#123;../permalink&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#123;&#123;#if title&#125;&#125;</span><br><span class=\"line\">    &#123;&#123;../permalink&#125;&#125;</span><br><span class=\"line\">  &#123;&#123;/if&#125;&#125;</span><br><span class=\"line\">&#123;&#123;/each&#125;&#125;</span><br><span class=\"line\"><span class=\"comment\">&lt;!-- permalink 查找上级作用域中的Permalink属性 --&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"模板注释\"><a href=\"#模板注释\" class=\"headerlink\" title=\"模板注释\"></a>模板注释</h4><p>使用`{{!-- --}} or {{! }}`注释内容</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;!-- This comment will not be in the output --&#125;&#125; </span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&#123;! This comment will not be in the output &#125;&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"Helper\"><a href=\"#Helper\" class=\"headerlink\" title=\"Helper\"></a>Helper</h4><p>使用 <code>Handlebars.registerHelper</code>注册模板助手</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Handlebars.registerHelper(<span class=\"string\">'fullName'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">person</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> person.firstName + <span class=\"string\">\" \"</span> + person.lastName;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">Handlebars.registerHelper(<span class=\"string\">'agree_button'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> emotion = Handlebars.escapeExpression(<span class=\"keyword\">this</span>.emotion),</span><br><span class=\"line\">      name = Handlebars.escapeExpression(<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 如果不需要转义内容，使用Handlebars.SafeString </span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Handlebars.SafeString(</span><br><span class=\"line\">    <span class=\"string\">\"&lt;button&gt;I agree. I \"</span> + emotion + <span class=\"string\">\" \"</span> + name + <span class=\"string\">\"&lt;/button&gt;\"</span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">Handlebars.registerHelper(<span class=\"string\">'if'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">conditional, options</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(conditional) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> options.fn(<span class=\"keyword\">this</span>);  </span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> options.inverse(<span class=\"keyword\">this</span>);  <span class=\"comment\">// 使用else里边的模板</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"模板片段Partials\"><a href=\"#模板片段Partials\" class=\"headerlink\" title=\"模板片段Partials\"></a>模板片段Partials</h4><p>使用 <code>Handlebars.registerPartial</code>注册模板片段</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Handlebars.registerPartial(<span class=\"string\">'myPartial'</span>, <span class=\"string\">'&#123;&#123;name&#125;&#125;'</span>)</span><br></pre></td></tr></table></figure>\n<p>使用`{{> myPartial }}`调用</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"post\"</span>&gt;</span></span><br><span class=\"line\">  &#123;&#123;&gt; userMessage tagName=\"h1\" &#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Comments<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 动态模板片段 --&gt;</span></span><br><span class=\"line\">&#123;&#123;&gt; (whichPartial) &#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 更改上下文 --&gt;</span></span><br><span class=\"line\">&#123;&#123;&gt; myPartial myOtherContext &#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- hash 参数，模板中可直接使用该参数--&gt;</span></span><br><span class=\"line\">&#123;&#123;&gt; myPartial parameter=value &#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- Partial Blocks  如果partial 没有注册就直接调用，就会抛出异常，使用块级helper可解决 --&gt;</span></span><br><span class=\"line\">&#123;&#123;#&gt; myPartial &#125;&#125;</span><br><span class=\"line\">  Failover content    &#123;&#123;! myPartial 没有注册时才渲染 &#125;&#125;</span><br><span class=\"line\">&#123;&#123;/myPartial&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 可以通过@partial-block拿到默认内容 --&gt;</span></span><br><span class=\"line\">&#123;&#123;#&gt; layout &#125;&#125;</span><br><span class=\"line\">  My Content</span><br><span class=\"line\">&#123;&#123;/layout&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Site Content</span><br><span class=\"line\">&#123;&#123;&gt; @partial-block &#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 模板内声明partial，当前block和子模板中可用 --&gt;</span></span><br><span class=\"line\">&#123;&#123;#*inline \"myPartial\"&#125;&#125;</span><br><span class=\"line\">  My Content</span><br><span class=\"line\">&#123;&#123;/inline&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&#123;#each children&#125;&#125;</span><br><span class=\"line\">  &#123;&#123;&gt; myPartial&#125;&#125;</span><br><span class=\"line\">&#123;&#123;/each&#125;&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"内置Helper\"><a href=\"#内置Helper\" class=\"headerlink\" title=\"内置Helper\"></a>内置Helper</h4><p><code>if</code> 如果值为 <code>false, undefined, null, &quot;&quot;, 0, or []</code> 就会渲染else部分</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"entry\"</span>&gt;</span></span><br><span class=\"line\">  &#123;&#123;#if author&#125;&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;&#123;firstName&#125;&#125; &#123;&#123;lastName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  &#123;&#123;else&#125;&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Unknown Author<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  &#123;&#123;/if&#125;&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><code>unless</code> 相当于<code>if</code>的else情况</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;#unless license&#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h3</span> <span class=\"attr\">class</span>=<span class=\"string\">\"warning\"</span>&gt;</span>WARNING: This entry does not have a license!<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">&#123;&#123;/unless&#125;&#125;</span><br></pre></td></tr></table></figure>\n<p><code>each</code>遍历数组，会改变当前context，执行遍历的元素</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"people_list\"</span>&gt;</span></span><br><span class=\"line\">  &#123;&#123;#each people&#125;&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>&#123;&#123;this&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">  &#123;&#123;else&#125;&#125;</span><br><span class=\"line\">    暂无数据</span><br><span class=\"line\">  &#123;&#123;/each&#125;&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p> 遍历对象，相当于变量的key;遍历数组，为array的index</p>\n</blockquote>\n<p><code>with</code> 会改变当前context</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"entry\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;&#123;title&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  &#123;&#123;#with author&#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>By &#123;&#123;firstName&#125;&#125; &#123;&#123;lastName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">  &#123;&#123;else&#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"empty\"</span>&gt;</span>No content<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  &#123;&#123;/with&#125;&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">``` </span><br><span class=\"line\"></span><br><span class=\"line\">`log` 渲染时打印日志</span><br><span class=\"line\"></span><br><span class=\"line\">```html</span><br><span class=\"line\">&#123;&#123;log \"Look at me!\"&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- level 支持的值为 debug, info, warn, and error --&gt;</span></span><br><span class=\"line\">&#123;&#123;log \"Log!\" level=\"error\"&#125;&#125;</span><br></pre></td></tr></table></figure>\n<p>处理helper异常<br>如果调用一个不存在的helper，就会异常，<code>options.name</code>会自动注入为helper名称</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Handlebars.registerHelper(<span class=\"string\">'helperMissing'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"><span class=\"regexp\">/* [args, ] options */</span></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> options = <span class=\"built_in\">arguments</span>[<span class=\"built_in\">arguments</span>.length - <span class=\"number\">1</span>];</span><br><span class=\"line\">  <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Handlebars.Exception(<span class=\"string\">'Unknown field: '</span> + options.name);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 注册 partial</span></span><br><span class=\"line\">Handlebars.registerPartial(<span class=\"string\">'foo'</span>, partial);</span><br><span class=\"line\"></span><br><span class=\"line\">Handlebars.registerPartial(&#123;</span><br><span class=\"line\">  foo: partial,</span><br><span class=\"line\">  bar: partial</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 注销 partial</span></span><br><span class=\"line\">Handlebars.unregisterPartial(<span class=\"string\">'foo'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 注册 helper</span></span><br><span class=\"line\">Handlebars.registerHelper(<span class=\"string\">'foo'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">Handlebars.registerHelper(&#123;</span><br><span class=\"line\">  foo: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  bar: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 注销helper</span></span><br><span class=\"line\">Handlebars.unregisterHelper(<span class=\"string\">'foo'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建块级作用域 child data</span></span><br><span class=\"line\">Handlebars.createFrame(data)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 顶级对象</span></span><br><span class=\"line\">@root </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 数组第一个元素</span></span><br><span class=\"line\">@first</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 数组最后一个元素</span></span><br><span class=\"line\">@last</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 对象的key</span></span><br><span class=\"line\">@key</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 数组的index</span></span><br><span class=\"line\">@index</span><br></pre></td></tr></table></figure>\n<p><a href=\"http://handlebarsjs.com/reference.html\" target=\"_blank\" rel=\"noopener\">API更多请参考</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"http://handlebarsjs.com/\" target=\"_blank\" rel=\"noopener\">Handlebars</a> 是 JavaScript 一个语义模板库，通过对view和data的分离来快速构建Web模板。</p>\n<p><img src=\"http://ouonaooa5.bkt.clouddn.com/handlebarjs.jpg\" alt=\"\"></p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><ul>\n<li>直接下载 <a href=\"http://builds.handlebarsjs.com.s3.amazonaws.com/handlebars-v4.0.10.js\" target=\"_blank\" rel=\"noopener\">Handlebars.js</a> 和 <a href=\"http://builds.handlebarsjs.com.s3.amazonaws.com/handlebars.runtime-v4.0.10.js\" target=\"_blank\" rel=\"noopener\">Handlebar Runtime</a></li>\n<li>通过npm下载</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装</span></span><br><span class=\"line\">npm install --save handlebars</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 引用</span></span><br><span class=\"line\">require(<span class=\"string\">'handlebars'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果模板预编译后,可直接使用运行时环境</span></span><br><span class=\"line\">require(<span class=\"string\">'handlebars/runtime'</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"快速入门\"><a href=\"#快速入门\" class=\"headerlink\" title=\"快速入门\"></a>快速入门</h3><h4 id=\"Handlebar表达式\"><a href=\"#Handlebar表达式\" class=\"headerlink\" title=\"Handlebar表达式\"></a>Handlebar表达式</h4><p>Handlebars会从当前上下文中查找title和body属性</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"entry\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;&#123;title&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"body\"</span>&gt;</span></span><br><span class=\"line\">    &#123;&#123;body&#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"路径查询\"><a href=\"#路径查询\" class=\"headerlink\" title=\"路径查询\"></a>路径查询</h4><p>Handlebars会从当前上下文中查找article属性,然后在查找结果中找title属性</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;&#123;article.title&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 两者等价，下面方法deprecated--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;&#123;article/title&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>标识符不能包含 Whitespace ! “ # % &amp; ‘ ( ) * + , . / ; &lt; = &gt; @ [ \\ ] ^ ` { | } ~</p>\n</blockquote>\n<p>如果出现不合法的属性，可以使用中括号的方式进行引用</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;#each articles.[10].[#comments]&#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;&#123;subject&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  &#123;&#123;&#123;body&#125;&#125;&#125;</span><br><span class=\"line\">&#123;&#123;/each&#125;&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>默认情况下 Handlebars为了安全，会对内容进行转义，如需原样输出可以使用`{{{ html }}}`</p>\n</blockquote>\n<h4 id=\"Helper模板方法\"><a href=\"#Helper模板方法\" class=\"headerlink\" title=\"Helper模板方法\"></a>Helper模板方法</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;&#123;link story&#125;&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Handlebars.registerHelper(<span class=\"string\">'link'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">object, options</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> url = Handlebars.escapeExpression(object.url),</span><br><span class=\"line\">      text = Handlebars.escapeExpression(object.text);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Handlebars.SafeString(</span><br><span class=\"line\">    <span class=\"string\">\"&lt;a href='\"</span> + url + <span class=\"string\">\"'&gt;\"</span> + text + <span class=\"string\">\"&lt;/a&gt;\"</span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>Handlebars helper支持接收一个可选的键值对参数作为它的最后一个参数传入(hash)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;&#123;link <span class=\"string\">\"See more...\"</span> href=story.url <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"story\"</span>&#125;&#125;&#125;</span><br><span class=\"line\">Handlebars.registerHelper(<span class=\"string\">'link'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">text, options</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> attrs = [];</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> prop <span class=\"keyword\">in</span> options.hash) &#123;</span><br><span class=\"line\">    attrs.push(</span><br><span class=\"line\">        Handlebars.escapeExpression(prop) + <span class=\"string\">'=\"'</span></span><br><span class=\"line\">        + Handlebars.escapeExpression(options.hash[prop]) + <span class=\"string\">'\"'</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Handlebars.SafeString(</span><br><span class=\"line\">    <span class=\"string\">\"&lt;a \"</span> + attrs.join(<span class=\"string\">\" \"</span>) + <span class=\"string\">\"&gt;\"</span> + Handlebars.escapeExpression(text) + <span class=\"string\">\"&lt;/a&gt;\"</span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>Helper 支持嵌套</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;outer-helper (inner-helper 'abc') 'def'&#125;&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"去掉空格\"><a href=\"#去掉空格\" class=\"headerlink\" title=\"去掉空格\"></a>去掉空格</h4><p>去掉多余空格(在大括号边添加 ~)</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;#each nav ~&#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"&#123;&#123;url&#125;&#125;\"</span>&gt;</span></span><br><span class=\"line\">    &#123;&#123;~#if test&#125;&#125;</span><br><span class=\"line\">      &#123;&#123;~title&#125;&#125;</span><br><span class=\"line\">    &#123;&#123;~^~&#125;&#125;</span><br><span class=\"line\">      Empty</span><br><span class=\"line\">    &#123;&#123;~/if~&#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">&#123;&#123;~/each&#125;&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"标签转义\"><a href=\"#标签转义\" class=\"headerlink\" title=\"标签转义\"></a>标签转义</h4><p>使用标签原内容</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 在前边添加 \\ --&gt;</span></span><br><span class=\"line\">\\&#123;&#123;escaped&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--使用4个大括号--&gt;</span></span><br><span class=\"line\">&#123;&#123;&#123;&#123;raw&#125;&#125;&#125;&#125;</span><br><span class=\"line\">  &#123;&#123;escaped&#125;&#125;</span><br><span class=\"line\">&#123;&#123;&#123;&#123;/raw&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"编译模板\"><a href=\"#编译模板\" class=\"headerlink\" title=\"编译模板\"></a>编译模板</h3><h4 id=\"模板字符串\"><a href=\"#模板字符串\" class=\"headerlink\" title=\"模板字符串\"></a>模板字符串</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">id</span>=<span class=\"string\">\"entry-template\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/x-handlebars-template\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">  &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"entry\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;&#123;title&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"javascript\">    &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"body\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#123;&#123;body&#125;&#125;</span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>使用 <code>Handlebars.compile</code>编译模板输出模板函数</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> source   = $(<span class=\"string\">\"#entry-template\"</span>).html();</span><br><span class=\"line\"><span class=\"keyword\">var</span> template = Handlebars.compile(source);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 如果预先生成模板函数了，则可以直接引用runtime库，不必将handlebar全部引入</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"命令行工具\"><a href=\"#命令行工具\" class=\"headerlink\" title=\"命令行工具\"></a>命令行工具</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install handlebars -g</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 语法 </span></span><br><span class=\"line\">handlebars &lt;input&gt; -f &lt;output&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看更多使用方法</span></span><br><span class=\"line\">handlebars --<span class=\"built_in\">help</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#如果输入文件是 person.handlebars，Handlebar会将文件内容作为compile方法的第一个参数，生成一个模板方法，插入到 Handlebars.templates.person上，之后可直接使用 Handlebars.templates.person(context,options)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 若预编译，直接使用runtime库 &lt;script src=\"/libs/handlebars.runtime.js\"&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"高级使用\"><a href=\"#高级使用\" class=\"headerlink\" title=\"高级使用\"></a>高级使用</h3><h4 id=\"complile-函数\"><a href=\"#complile-函数\" class=\"headerlink\" title=\"complile 函数\"></a>complile 函数</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">模板函数接收第二个可选参数，传以下参数:</span><br><span class=\"line\">data:传入私有变量 @variable </span><br><span class=\"line\">helpers:传入局部helper，而不是全局定义，重名会覆盖全局。</span><br><span class=\"line\">partials: 自定义模板片段partials，与helper类似</span><br></pre></td></tr></table></figure>\n<h4 id=\"块级表达式\"><a href=\"#块级表达式\" class=\"headerlink\" title=\"块级表达式\"></a>块级表达式</h4><p>块级表达式可以改变模板局部context，块级helper以#开口，结尾以/开发，如`{{#hi}} {{/hi}}`</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"entry\"</span>&gt;</span><br><span class=\"line\">  &lt;h1&gt;&#123;&#123;title&#125;&#125;&lt;<span class=\"regexp\">/h1&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;div class=\"body\"&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &#123;&#123;#bold&#125;&#125;&#123;&#123;body&#125;&#125;&#123;&#123;/</span>bold&#125;&#125;</span><br><span class=\"line\">    &#123;&#123;#noop&#125;&#125; hello &#123;&#123;/noop&#125;&#125;</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">Handlebars.registerHelper(<span class=\"string\">'noop'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">options</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> options.fn(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 其中this执行当前上下文 options.fn 就像普通的模板函数一样，如果块级helper含有else部分，和fn类似的还有一个 options.reverse 渲染else里的模板。</span></span><br><span class=\"line\"></span><br><span class=\"line\">Handlebars.registerHelper(<span class=\"string\">'bold'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">options</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Handlebars.SafeString(</span><br><span class=\"line\">      <span class=\"string\">'&lt;div class=\"mybold\"&gt;'</span></span><br><span class=\"line\">      + options.fn(<span class=\"keyword\">this</span>)</span><br><span class=\"line\">      + <span class=\"string\">'&lt;/div&gt;'</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- <span class=\"keyword\">with</span> 会改变当前上下文 --&gt;</span><br><span class=\"line\">&#123;&#123;#with story&#125;&#125;</span><br><span class=\"line\">&lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"intro\"</span>&gt;&#123;&#123;&#123;intro&#125;&#125;&#125;&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;div class=\"body\"&gt;&#123;&#123;&#123;body&#125;&#125;&#125;&lt;/</span>div&gt;</span><br><span class=\"line\">&#123;&#123;/<span class=\"keyword\">with</span>&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- 使用each 迭代 --&gt;</span><br><span class=\"line\">&#123;&#123;#each comments&#125;&#125;</span><br><span class=\"line\">&lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"comment\"</span>&gt;</span><br><span class=\"line\">  &lt;h2&gt;&#123;&#123;subject&#125;&#125;&lt;<span class=\"regexp\">/h2&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &#123;&#123;&#123;body&#125;&#125;&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>div&gt;</span><br><span class=\"line\">&#123;&#123;/each&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// each 原理</span></span><br><span class=\"line\">Handlebars.registerHelper(<span class=\"string\">'each'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">context, options</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> ret = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>, j=context.length; i&lt;j; i++) &#123;</span><br><span class=\"line\">    ret = ret + options.fn(context[i]);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- 条件渲染 --&gt;</span><br><span class=\"line\">&#123;&#123;#if isActive&#125;&#125;</span><br><span class=\"line\">  &lt;img src=<span class=\"string\">\"star.gif\"</span> alt=<span class=\"string\">\"Active\"</span>&gt;</span><br><span class=\"line\">&#123;&#123;<span class=\"keyword\">else</span>&#125;&#125;</span><br><span class=\"line\">  &lt;img src=<span class=\"string\">\"cry.gif\"</span> alt=<span class=\"string\">\"Inactive\"</span>&gt;</span><br><span class=\"line\">&#123;&#123;/<span class=\"keyword\">if</span>&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Handlebars.registerHelper(<span class=\"string\">'if'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">conditional, options</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(conditional) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> options.fn(<span class=\"keyword\">this</span>);  </span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> options.inverse(<span class=\"keyword\">this</span>);  <span class=\"comment\">// 使用else里边的模板</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- hash 参数 --&gt;</span><br><span class=\"line\">&#123;&#123;#list nav id=\"nav-bar\" class=\"top\"&#125;&#125;</span><br><span class=\"line\">  &lt;a href=<span class=\"string\">\"&#123;&#123;url&#125;&#125;\"</span>&gt;&#123;&#123;title&#125;&#125;&lt;<span class=\"regexp\">/a&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&#123;&#123;/</span>list&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Handlebars.registerHelper(<span class=\"string\">'list'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">context, options</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> attrs = Em.keys(options.hash).map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">key</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> key + <span class=\"string\">'=\"'</span> + options.hash[key] + <span class=\"string\">'\"'</span>;</span><br><span class=\"line\">  &#125;).join(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">\"&lt;ul \"</span> + attrs + <span class=\"string\">\"&gt;\"</span> + context.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">\"&lt;li&gt;\"</span> + options.fn(item) + <span class=\"string\">\"&lt;/li&gt;\"</span>;</span><br><span class=\"line\">  &#125;).join(<span class=\"string\">\"\\n\"</span>) + <span class=\"string\">\"&lt;/ul&gt;\"</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- block helper 支持向子模板里注入自己的私有变量，如@index --&gt;</span><br><span class=\"line\">&#123;&#123;#list array&#125;&#125;</span><br><span class=\"line\">  &#123;&#123;@index&#125;&#125;. &#123;&#123;title&#125;&#125;</span><br><span class=\"line\">&#123;&#123;/list&#125;&#125;</span><br><span class=\"line\">Handlebars.registerHelper(<span class=\"string\">'list'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">context, options</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> out = <span class=\"string\">\"&lt;ul&gt;\"</span>, data;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (options.data) &#123;</span><br><span class=\"line\">    data = Handlebars.createFrame(options.data);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>; i&lt;context.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (data) &#123;</span><br><span class=\"line\">      data.index = i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    out += <span class=\"string\">\"&lt;li&gt;\"</span> + options.fn(context[i], &#123; <span class=\"attr\">data</span>: data &#125;) + <span class=\"string\">\"&lt;/li&gt;\"</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  out += <span class=\"string\">\"&lt;/ul&gt;\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> out;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 访问父作用域中的index 可以使用 @../index</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Handlebars 3.0 部分内置helper 支持命名参数  user为当前this,userId为index</span></span><br><span class=\"line\">&#123;&#123;#each users as |user userId|&#125;&#125;</span><br><span class=\"line\">  Id: &#123;&#123;userId&#125;&#125; Name: &#123;&#123;user.name&#125;&#125;</span><br><span class=\"line\">&#123;&#123;/each&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Handlebars.registerHelper(<span class=\"string\">'block-params'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> args = [],</span><br><span class=\"line\">      options = <span class=\"built_in\">arguments</span>[<span class=\"built_in\">arguments</span>.length - <span class=\"number\">1</span>];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"built_in\">arguments</span>.length - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">    args.push(<span class=\"built_in\">arguments</span>[i]);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> options.fn(<span class=\"keyword\">this</span>, &#123;<span class=\"attr\">data</span>: options.data, <span class=\"attr\">blockParams</span>: args&#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&#123;&#123;#block-params 1 2 3 as |foo bar baz|&#125;&#125;</span><br><span class=\"line\">  &#123;&#123;foo&#125;&#125; &#123;&#123;bar&#125;&#125; &#123;&#123;baz&#125;&#125;</span><br><span class=\"line\">&#123;&#123;/block-params&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- 纯渲染，不做任何处理 --&gt;</span><br><span class=\"line\">&#123;&#123;&#123;&#123;raw-helper&#125;&#125;&#125;&#125;</span><br><span class=\"line\">  &#123;&#123;bar&#125;&#125;</span><br><span class=\"line\">&#123;&#123;&#123;&#123;/raw-helper&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"路径查找\"><a href=\"#路径查找\" class=\"headerlink\" title=\"路径查找\"></a>路径查找</h4><p>可以通过 `../name` 或者`{{./name}} or {{this/name}} or {{this.name}}`</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;permalink&#125;&#125;</span><br><span class=\"line\">&#123;&#123;#each comments&#125;&#125;</span><br><span class=\"line\">  &#123;&#123;../permalink&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#123;&#123;#if title&#125;&#125;</span><br><span class=\"line\">    &#123;&#123;../permalink&#125;&#125;</span><br><span class=\"line\">  &#123;&#123;/if&#125;&#125;</span><br><span class=\"line\">&#123;&#123;/each&#125;&#125;</span><br><span class=\"line\"><span class=\"comment\">&lt;!-- permalink 查找上级作用域中的Permalink属性 --&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"模板注释\"><a href=\"#模板注释\" class=\"headerlink\" title=\"模板注释\"></a>模板注释</h4><p>使用`{{!-- --}} or {{! }}`注释内容</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;!-- This comment will not be in the output --&#125;&#125; </span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&#123;! This comment will not be in the output &#125;&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"Helper\"><a href=\"#Helper\" class=\"headerlink\" title=\"Helper\"></a>Helper</h4><p>使用 <code>Handlebars.registerHelper</code>注册模板助手</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Handlebars.registerHelper(<span class=\"string\">'fullName'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">person</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> person.firstName + <span class=\"string\">\" \"</span> + person.lastName;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">Handlebars.registerHelper(<span class=\"string\">'agree_button'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> emotion = Handlebars.escapeExpression(<span class=\"keyword\">this</span>.emotion),</span><br><span class=\"line\">      name = Handlebars.escapeExpression(<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 如果不需要转义内容，使用Handlebars.SafeString </span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Handlebars.SafeString(</span><br><span class=\"line\">    <span class=\"string\">\"&lt;button&gt;I agree. I \"</span> + emotion + <span class=\"string\">\" \"</span> + name + <span class=\"string\">\"&lt;/button&gt;\"</span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">Handlebars.registerHelper(<span class=\"string\">'if'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">conditional, options</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(conditional) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> options.fn(<span class=\"keyword\">this</span>);  </span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> options.inverse(<span class=\"keyword\">this</span>);  <span class=\"comment\">// 使用else里边的模板</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"模板片段Partials\"><a href=\"#模板片段Partials\" class=\"headerlink\" title=\"模板片段Partials\"></a>模板片段Partials</h4><p>使用 <code>Handlebars.registerPartial</code>注册模板片段</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Handlebars.registerPartial(<span class=\"string\">'myPartial'</span>, <span class=\"string\">'&#123;&#123;name&#125;&#125;'</span>)</span><br></pre></td></tr></table></figure>\n<p>使用`{{> myPartial }}`调用</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"post\"</span>&gt;</span></span><br><span class=\"line\">  &#123;&#123;&gt; userMessage tagName=\"h1\" &#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Comments<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 动态模板片段 --&gt;</span></span><br><span class=\"line\">&#123;&#123;&gt; (whichPartial) &#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 更改上下文 --&gt;</span></span><br><span class=\"line\">&#123;&#123;&gt; myPartial myOtherContext &#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- hash 参数，模板中可直接使用该参数--&gt;</span></span><br><span class=\"line\">&#123;&#123;&gt; myPartial parameter=value &#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- Partial Blocks  如果partial 没有注册就直接调用，就会抛出异常，使用块级helper可解决 --&gt;</span></span><br><span class=\"line\">&#123;&#123;#&gt; myPartial &#125;&#125;</span><br><span class=\"line\">  Failover content    &#123;&#123;! myPartial 没有注册时才渲染 &#125;&#125;</span><br><span class=\"line\">&#123;&#123;/myPartial&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 可以通过@partial-block拿到默认内容 --&gt;</span></span><br><span class=\"line\">&#123;&#123;#&gt; layout &#125;&#125;</span><br><span class=\"line\">  My Content</span><br><span class=\"line\">&#123;&#123;/layout&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Site Content</span><br><span class=\"line\">&#123;&#123;&gt; @partial-block &#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 模板内声明partial，当前block和子模板中可用 --&gt;</span></span><br><span class=\"line\">&#123;&#123;#*inline \"myPartial\"&#125;&#125;</span><br><span class=\"line\">  My Content</span><br><span class=\"line\">&#123;&#123;/inline&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;&#123;#each children&#125;&#125;</span><br><span class=\"line\">  &#123;&#123;&gt; myPartial&#125;&#125;</span><br><span class=\"line\">&#123;&#123;/each&#125;&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"内置Helper\"><a href=\"#内置Helper\" class=\"headerlink\" title=\"内置Helper\"></a>内置Helper</h4><p><code>if</code> 如果值为 <code>false, undefined, null, &quot;&quot;, 0, or []</code> 就会渲染else部分</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"entry\"</span>&gt;</span></span><br><span class=\"line\">  &#123;&#123;#if author&#125;&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;&#123;firstName&#125;&#125; &#123;&#123;lastName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  &#123;&#123;else&#125;&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Unknown Author<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  &#123;&#123;/if&#125;&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><code>unless</code> 相当于<code>if</code>的else情况</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;#unless license&#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h3</span> <span class=\"attr\">class</span>=<span class=\"string\">\"warning\"</span>&gt;</span>WARNING: This entry does not have a license!<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">&#123;&#123;/unless&#125;&#125;</span><br></pre></td></tr></table></figure>\n<p><code>each</code>遍历数组，会改变当前context，执行遍历的元素</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"people_list\"</span>&gt;</span></span><br><span class=\"line\">  &#123;&#123;#each people&#125;&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>&#123;&#123;this&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">  &#123;&#123;else&#125;&#125;</span><br><span class=\"line\">    暂无数据</span><br><span class=\"line\">  &#123;&#123;/each&#125;&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p> 遍历对象，相当于变量的key;遍历数组，为array的index</p>\n</blockquote>\n<p><code>with</code> 会改变当前context</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"entry\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;&#123;title&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  &#123;&#123;#with author&#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>By &#123;&#123;firstName&#125;&#125; &#123;&#123;lastName&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">  &#123;&#123;else&#125;&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">\"empty\"</span>&gt;</span>No content<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  &#123;&#123;/with&#125;&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">``` </span><br><span class=\"line\"></span><br><span class=\"line\">`log` 渲染时打印日志</span><br><span class=\"line\"></span><br><span class=\"line\">```html</span><br><span class=\"line\">&#123;&#123;log \"Look at me!\"&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- level 支持的值为 debug, info, warn, and error --&gt;</span></span><br><span class=\"line\">&#123;&#123;log \"Log!\" level=\"error\"&#125;&#125;</span><br></pre></td></tr></table></figure>\n<p>处理helper异常<br>如果调用一个不存在的helper，就会异常，<code>options.name</code>会自动注入为helper名称</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Handlebars.registerHelper(<span class=\"string\">'helperMissing'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"><span class=\"regexp\">/* [args, ] options */</span></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> options = <span class=\"built_in\">arguments</span>[<span class=\"built_in\">arguments</span>.length - <span class=\"number\">1</span>];</span><br><span class=\"line\">  <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Handlebars.Exception(<span class=\"string\">'Unknown field: '</span> + options.name);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 注册 partial</span></span><br><span class=\"line\">Handlebars.registerPartial(<span class=\"string\">'foo'</span>, partial);</span><br><span class=\"line\"></span><br><span class=\"line\">Handlebars.registerPartial(&#123;</span><br><span class=\"line\">  foo: partial,</span><br><span class=\"line\">  bar: partial</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 注销 partial</span></span><br><span class=\"line\">Handlebars.unregisterPartial(<span class=\"string\">'foo'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 注册 helper</span></span><br><span class=\"line\">Handlebars.registerHelper(<span class=\"string\">'foo'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">Handlebars.registerHelper(&#123;</span><br><span class=\"line\">  foo: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  bar: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 注销helper</span></span><br><span class=\"line\">Handlebars.unregisterHelper(<span class=\"string\">'foo'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建块级作用域 child data</span></span><br><span class=\"line\">Handlebars.createFrame(data)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 顶级对象</span></span><br><span class=\"line\">@root </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 数组第一个元素</span></span><br><span class=\"line\">@first</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 数组最后一个元素</span></span><br><span class=\"line\">@last</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 对象的key</span></span><br><span class=\"line\">@key</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 数组的index</span></span><br><span class=\"line\">@index</span><br></pre></td></tr></table></figure>\n<p><a href=\"http://handlebarsjs.com/reference.html\" target=\"_blank\" rel=\"noopener\">API更多请参考</a></p>\n"},{"title":"[RN]修改包服务器端口","date":"2017-09-10T16:38:23.000Z","_content":"\n开发React Native时，启动包服务器的默认端口是`8081`，如果跟现有服务器端口冲突的话，可以修改成想要的端口，修改内容如下：\n\n### 修改包服务器端口号\n包服务器启动监听端口，在项目的`node_modules/react-native/local-cli/server/server.js中`\n\n``` js\noptions: [{\n    command: '--port [number]',\n    default: 8081,\n    parse: (val) => Number(val),\n  },\n\n  ...\n  ]\n```\n\n由此可见我可以在运行时`react-native start --port=8082`动态指定端口\n\n### 修改应用程序启动时，读取逻辑代码的的地址\n在`ios/Demo01/AppDelegate.m`中找到下面代码\n\n```\n// 修改后代码\n  jsCodeLocation = [NSURL URLWithString:@\"http://localhost:8081/index.ios.bundle\"];\n// jsCodeLocation = [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@\"index.ios\" fallbackResource:nil];\n```\n\n\n### 修改websocket监听端口\n在项目的`node_modules/react-native/Libraries/WebSocket/RCTWebSocketExecutor`中修改下端口。\n\n```\n- (void)setUp\n{\n  if (!_url) {\n    NSInteger port = [[[_bridge bundleURL] port] integerValue] ?: 8081;\n    NSString *host = [[_bridge bundleURL] host] ?: @\"localhost\";\n    NSString *URLString = [NSString stringWithFormat:@\"http://%@:%zd/debugger-proxy?role=client\", host, port];\n    _url = [RCTConvert NSURL:URLString];\n  }\n```\n","source":"_posts/RN-修改包服务器端口.md","raw":"---\ntitle: '[RN]修改包服务器端口'\ndate: 2017-09-11 00:38:23\ntags:\n    - js\n    - react native\n\ncategory: \n    - js\n    - react native\n---\n\n开发React Native时，启动包服务器的默认端口是`8081`，如果跟现有服务器端口冲突的话，可以修改成想要的端口，修改内容如下：\n\n### 修改包服务器端口号\n包服务器启动监听端口，在项目的`node_modules/react-native/local-cli/server/server.js中`\n\n``` js\noptions: [{\n    command: '--port [number]',\n    default: 8081,\n    parse: (val) => Number(val),\n  },\n\n  ...\n  ]\n```\n\n由此可见我可以在运行时`react-native start --port=8082`动态指定端口\n\n### 修改应用程序启动时，读取逻辑代码的的地址\n在`ios/Demo01/AppDelegate.m`中找到下面代码\n\n```\n// 修改后代码\n  jsCodeLocation = [NSURL URLWithString:@\"http://localhost:8081/index.ios.bundle\"];\n// jsCodeLocation = [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@\"index.ios\" fallbackResource:nil];\n```\n\n\n### 修改websocket监听端口\n在项目的`node_modules/react-native/Libraries/WebSocket/RCTWebSocketExecutor`中修改下端口。\n\n```\n- (void)setUp\n{\n  if (!_url) {\n    NSInteger port = [[[_bridge bundleURL] port] integerValue] ?: 8081;\n    NSString *host = [[_bridge bundleURL] host] ?: @\"localhost\";\n    NSString *URLString = [NSString stringWithFormat:@\"http://%@:%zd/debugger-proxy?role=client\", host, port];\n    _url = [RCTConvert NSURL:URLString];\n  }\n```\n","slug":"RN-修改包服务器端口","published":1,"updated":"2018-01-19T07:29:27.198Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjd332dzq0002c2mj04v37ntu","content":"<p>开发React Native时，启动包服务器的默认端口是<code>8081</code>，如果跟现有服务器端口冲突的话，可以修改成想要的端口，修改内容如下：</p>\n<h3 id=\"修改包服务器端口号\"><a href=\"#修改包服务器端口号\" class=\"headerlink\" title=\"修改包服务器端口号\"></a>修改包服务器端口号</h3><p>包服务器启动监听端口，在项目的<code>node_modules/react-native/local-cli/server/server.js中</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">options: [&#123;</span><br><span class=\"line\">    command: <span class=\"string\">'--port [number]'</span>,</span><br><span class=\"line\">    <span class=\"keyword\">default</span>: <span class=\"number\">8081</span>,</span><br><span class=\"line\">    parse: <span class=\"function\">(<span class=\"params\">val</span>) =&gt;</span> <span class=\"built_in\">Number</span>(val),</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  ...</span><br><span class=\"line\">  ]</span><br></pre></td></tr></table></figure>\n<p>由此可见我可以在运行时<code>react-native start --port=8082</code>动态指定端口</p>\n<h3 id=\"修改应用程序启动时，读取逻辑代码的的地址\"><a href=\"#修改应用程序启动时，读取逻辑代码的的地址\" class=\"headerlink\" title=\"修改应用程序启动时，读取逻辑代码的的地址\"></a>修改应用程序启动时，读取逻辑代码的的地址</h3><p>在<code>ios/Demo01/AppDelegate.m</code>中找到下面代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 修改后代码</span><br><span class=\"line\">  jsCodeLocation = [NSURL URLWithString:@&quot;http://localhost:8081/index.ios.bundle&quot;];</span><br><span class=\"line\">// jsCodeLocation = [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@&quot;index.ios&quot; fallbackResource:nil];</span><br></pre></td></tr></table></figure>\n<h3 id=\"修改websocket监听端口\"><a href=\"#修改websocket监听端口\" class=\"headerlink\" title=\"修改websocket监听端口\"></a>修改websocket监听端口</h3><p>在项目的<code>node_modules/react-native/Libraries/WebSocket/RCTWebSocketExecutor</code>中修改下端口。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- (void)setUp</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  if (!_url) &#123;</span><br><span class=\"line\">    NSInteger port = [[[_bridge bundleURL] port] integerValue] ?: 8081;</span><br><span class=\"line\">    NSString *host = [[_bridge bundleURL] host] ?: @&quot;localhost&quot;;</span><br><span class=\"line\">    NSString *URLString = [NSString stringWithFormat:@&quot;http://%@:%zd/debugger-proxy?role=client&quot;, host, port];</span><br><span class=\"line\">    _url = [RCTConvert NSURL:URLString];</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>开发React Native时，启动包服务器的默认端口是<code>8081</code>，如果跟现有服务器端口冲突的话，可以修改成想要的端口，修改内容如下：</p>\n<h3 id=\"修改包服务器端口号\"><a href=\"#修改包服务器端口号\" class=\"headerlink\" title=\"修改包服务器端口号\"></a>修改包服务器端口号</h3><p>包服务器启动监听端口，在项目的<code>node_modules/react-native/local-cli/server/server.js中</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">options: [&#123;</span><br><span class=\"line\">    command: <span class=\"string\">'--port [number]'</span>,</span><br><span class=\"line\">    <span class=\"keyword\">default</span>: <span class=\"number\">8081</span>,</span><br><span class=\"line\">    parse: <span class=\"function\">(<span class=\"params\">val</span>) =&gt;</span> <span class=\"built_in\">Number</span>(val),</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  ...</span><br><span class=\"line\">  ]</span><br></pre></td></tr></table></figure>\n<p>由此可见我可以在运行时<code>react-native start --port=8082</code>动态指定端口</p>\n<h3 id=\"修改应用程序启动时，读取逻辑代码的的地址\"><a href=\"#修改应用程序启动时，读取逻辑代码的的地址\" class=\"headerlink\" title=\"修改应用程序启动时，读取逻辑代码的的地址\"></a>修改应用程序启动时，读取逻辑代码的的地址</h3><p>在<code>ios/Demo01/AppDelegate.m</code>中找到下面代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 修改后代码</span><br><span class=\"line\">  jsCodeLocation = [NSURL URLWithString:@&quot;http://localhost:8081/index.ios.bundle&quot;];</span><br><span class=\"line\">// jsCodeLocation = [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@&quot;index.ios&quot; fallbackResource:nil];</span><br></pre></td></tr></table></figure>\n<h3 id=\"修改websocket监听端口\"><a href=\"#修改websocket监听端口\" class=\"headerlink\" title=\"修改websocket监听端口\"></a>修改websocket监听端口</h3><p>在项目的<code>node_modules/react-native/Libraries/WebSocket/RCTWebSocketExecutor</code>中修改下端口。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- (void)setUp</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  if (!_url) &#123;</span><br><span class=\"line\">    NSInteger port = [[[_bridge bundleURL] port] integerValue] ?: 8081;</span><br><span class=\"line\">    NSString *host = [[_bridge bundleURL] host] ?: @&quot;localhost&quot;;</span><br><span class=\"line\">    NSString *URLString = [NSString stringWithFormat:@&quot;http://%@:%zd/debugger-proxy?role=client&quot;, host, port];</span><br><span class=\"line\">    _url = [RCTConvert NSURL:URLString];</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"Hexo插入媒体资源","date":"2017-08-14T16:59:44.000Z","_content":"\n通常我们会在Hexo文章中插入媒体资源如图片，音频，视频，那么让我们来看看如何插入\n\n### 插入图片\n\n#### 本地图片\n在/hexo/source目录下新建文件夹，命名为images或其他\n\n```markdown\n![图片描述](/images/图片名字.png)  \n```\n\n#### 使用远程图片\n这种是大家常用的方法\n```markdown\n![图片描述](http://ouonaooa5.bkt.clouddn.com/demo.jpg)  \n```\n\n>可使用七牛存储自己的图片资源\n\n### 插入音频\n\n#### 插入网易云音乐\n\n```html\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86   \n    src=\"//music.163.com/outchain/player?type=2&id=25706282&auto=0&height=66\">  \n</iframe> \n```\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86   \n    src=\"//music.163.com/outchain/player?type=2&id=25706282&auto=0&height=66\">  \n</iframe> \n\n\n#### 插入喜马拉雅\n\n```html\n<iframe height=\"36\" width=\"260\" src=\"//www.ximalaya.com/swf/sound/red.swf?id=36371956\" frameborder=0 allowfullscreen></iframe>\n```\n\n\n<object type=\"application/x-shockwave-flash\" id=\"ximalaya_player\" data=\"//www.ximalaya.com/swf/sound/red.swf?id=36371956\" width=\"260\" height=\"36\"></object>\n\n\n### 插入视频\n\n```html\n<iframe class=\"ql-video ql-align-center\" frameborder=\"0\" allowfullscreen=\"true\" src=\"https://www.youtube.com/embed/QHH3iSeDBLo?showinfo=0\" height=\"238\" width=\"560\"></iframe>\n```\n\n<iframe class=\"ql-video ql-align-center\" frameborder=\"0\" allowfullscreen=\"true\" src=\"https://www.youtube.com/embed/QHH3iSeDBLo?showinfo=0\" height=\"238\" width=\"560\"></iframe>\n\n\n\n\n\n","source":"_posts/Hexo插入媒体资源.md","raw":"---\ntitle: Hexo插入媒体资源\ndate: 2017-08-15 00:59:44\ntags:\n    - hexo\n\n---\n\n通常我们会在Hexo文章中插入媒体资源如图片，音频，视频，那么让我们来看看如何插入\n\n### 插入图片\n\n#### 本地图片\n在/hexo/source目录下新建文件夹，命名为images或其他\n\n```markdown\n![图片描述](/images/图片名字.png)  \n```\n\n#### 使用远程图片\n这种是大家常用的方法\n```markdown\n![图片描述](http://ouonaooa5.bkt.clouddn.com/demo.jpg)  \n```\n\n>可使用七牛存储自己的图片资源\n\n### 插入音频\n\n#### 插入网易云音乐\n\n```html\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86   \n    src=\"//music.163.com/outchain/player?type=2&id=25706282&auto=0&height=66\">  \n</iframe> \n```\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86   \n    src=\"//music.163.com/outchain/player?type=2&id=25706282&auto=0&height=66\">  \n</iframe> \n\n\n#### 插入喜马拉雅\n\n```html\n<iframe height=\"36\" width=\"260\" src=\"//www.ximalaya.com/swf/sound/red.swf?id=36371956\" frameborder=0 allowfullscreen></iframe>\n```\n\n\n<object type=\"application/x-shockwave-flash\" id=\"ximalaya_player\" data=\"//www.ximalaya.com/swf/sound/red.swf?id=36371956\" width=\"260\" height=\"36\"></object>\n\n\n### 插入视频\n\n```html\n<iframe class=\"ql-video ql-align-center\" frameborder=\"0\" allowfullscreen=\"true\" src=\"https://www.youtube.com/embed/QHH3iSeDBLo?showinfo=0\" height=\"238\" width=\"560\"></iframe>\n```\n\n<iframe class=\"ql-video ql-align-center\" frameborder=\"0\" allowfullscreen=\"true\" src=\"https://www.youtube.com/embed/QHH3iSeDBLo?showinfo=0\" height=\"238\" width=\"560\"></iframe>\n\n\n\n\n\n","slug":"Hexo插入媒体资源","published":1,"updated":"2018-01-19T07:29:27.197Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjd332dzt0005c2mj1qghhaan","content":"<p>通常我们会在Hexo文章中插入媒体资源如图片，音频，视频，那么让我们来看看如何插入</p>\n<h3 id=\"插入图片\"><a href=\"#插入图片\" class=\"headerlink\" title=\"插入图片\"></a>插入图片</h3><h4 id=\"本地图片\"><a href=\"#本地图片\" class=\"headerlink\" title=\"本地图片\"></a>本地图片</h4><p>在/hexo/source目录下新建文件夹，命名为images或其他</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![<span class=\"string\">图片描述</span>](<span class=\"link\">/images/图片名字.png</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"使用远程图片\"><a href=\"#使用远程图片\" class=\"headerlink\" title=\"使用远程图片\"></a>使用远程图片</h4><p>这种是大家常用的方法<br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![<span class=\"string\">图片描述</span>](<span class=\"link\">http://ouonaooa5.bkt.clouddn.com/demo.jpg</span>)</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>可使用七牛存储自己的图片资源</p>\n</blockquote>\n<h3 id=\"插入音频\"><a href=\"#插入音频\" class=\"headerlink\" title=\"插入音频\"></a>插入音频</h3><h4 id=\"插入网易云音乐\"><a href=\"#插入网易云音乐\" class=\"headerlink\" title=\"插入网易云音乐\"></a>插入网易云音乐</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">frameborder</span>=<span class=\"string\">\"no\"</span> <span class=\"attr\">border</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">marginwidth</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">marginheight</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">width</span>=<span class=\"string\">330</span> <span class=\"attr\">height</span>=<span class=\"string\">86</span>   </span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">src</span>=<span class=\"string\">\"//music.163.com/outchain/player?type=2&amp;id=25706282&amp;auto=0&amp;height=66\"</span>&gt;</span>  </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=25706282&auto=0&height=66\"><br></iframe> \n\n\n<h4 id=\"插入喜马拉雅\"><a href=\"#插入喜马拉雅\" class=\"headerlink\" title=\"插入喜马拉雅\"></a>插入喜马拉雅</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">height</span>=<span class=\"string\">\"36\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"260\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"//www.ximalaya.com/swf/sound/red.swf?id=36371956\"</span> <span class=\"attr\">frameborder</span>=<span class=\"string\">0</span> <span class=\"attr\">allowfullscreen</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<object type=\"application/x-shockwave-flash\" id=\"ximalaya_player\" data=\"//www.ximalaya.com/swf/sound/red.swf?id=36371956\" width=\"260\" height=\"36\"></object>\n\n\n<h3 id=\"插入视频\"><a href=\"#插入视频\" class=\"headerlink\" title=\"插入视频\"></a>插入视频</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">class</span>=<span class=\"string\">\"ql-video ql-align-center\"</span> <span class=\"attr\">frameborder</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">allowfullscreen</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://www.youtube.com/embed/QHH3iSeDBLo?showinfo=0\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"238\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"560\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<iframe class=\"ql-video ql-align-center\" frameborder=\"0\" allowfullscreen=\"true\" src=\"https://www.youtube.com/embed/QHH3iSeDBLo?showinfo=0\" height=\"238\" width=\"560\"></iframe>\n\n\n\n\n\n","site":{"data":{}},"excerpt":"","more":"<p>通常我们会在Hexo文章中插入媒体资源如图片，音频，视频，那么让我们来看看如何插入</p>\n<h3 id=\"插入图片\"><a href=\"#插入图片\" class=\"headerlink\" title=\"插入图片\"></a>插入图片</h3><h4 id=\"本地图片\"><a href=\"#本地图片\" class=\"headerlink\" title=\"本地图片\"></a>本地图片</h4><p>在/hexo/source目录下新建文件夹，命名为images或其他</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![<span class=\"string\">图片描述</span>](<span class=\"link\">/images/图片名字.png</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"使用远程图片\"><a href=\"#使用远程图片\" class=\"headerlink\" title=\"使用远程图片\"></a>使用远程图片</h4><p>这种是大家常用的方法<br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![<span class=\"string\">图片描述</span>](<span class=\"link\">http://ouonaooa5.bkt.clouddn.com/demo.jpg</span>)</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>可使用七牛存储自己的图片资源</p>\n</blockquote>\n<h3 id=\"插入音频\"><a href=\"#插入音频\" class=\"headerlink\" title=\"插入音频\"></a>插入音频</h3><h4 id=\"插入网易云音乐\"><a href=\"#插入网易云音乐\" class=\"headerlink\" title=\"插入网易云音乐\"></a>插入网易云音乐</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">frameborder</span>=<span class=\"string\">\"no\"</span> <span class=\"attr\">border</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">marginwidth</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">marginheight</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">width</span>=<span class=\"string\">330</span> <span class=\"attr\">height</span>=<span class=\"string\">86</span>   </span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">src</span>=<span class=\"string\">\"//music.163.com/outchain/player?type=2&amp;id=25706282&amp;auto=0&amp;height=66\"</span>&gt;</span>  </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=25706282&auto=0&height=66\"><br></iframe> \n\n\n<h4 id=\"插入喜马拉雅\"><a href=\"#插入喜马拉雅\" class=\"headerlink\" title=\"插入喜马拉雅\"></a>插入喜马拉雅</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">height</span>=<span class=\"string\">\"36\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"260\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"//www.ximalaya.com/swf/sound/red.swf?id=36371956\"</span> <span class=\"attr\">frameborder</span>=<span class=\"string\">0</span> <span class=\"attr\">allowfullscreen</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<object type=\"application/x-shockwave-flash\" id=\"ximalaya_player\" data=\"//www.ximalaya.com/swf/sound/red.swf?id=36371956\" width=\"260\" height=\"36\"></object>\n\n\n<h3 id=\"插入视频\"><a href=\"#插入视频\" class=\"headerlink\" title=\"插入视频\"></a>插入视频</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">class</span>=<span class=\"string\">\"ql-video ql-align-center\"</span> <span class=\"attr\">frameborder</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">allowfullscreen</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://www.youtube.com/embed/QHH3iSeDBLo?showinfo=0\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"238\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"560\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<iframe class=\"ql-video ql-align-center\" frameborder=\"0\" allowfullscreen=\"true\" src=\"https://www.youtube.com/embed/QHH3iSeDBLo?showinfo=0\" height=\"238\" width=\"560\"></iframe>\n\n\n\n\n\n"},{"title":"[RN]真机调试及内部发布","date":"2017-09-10T17:15:47.000Z","_content":"\n一般我们开发RN都是在模拟器上调试的，那么真机是如何调试的呢？\n\n### 真机调试\n\n1. 配置好签名证书，并将包环境设置成Debug模式\n2. 将`AppDelegate.m`中的localhost修改成对应的IP地址，将调试真机插在电脑上，Xcode模拟器选择真机。\n3. 运行编译命令，真机摇一摇手机即可调出调试面板\n\n### 内部发布\n内部发布是上App Store之前的一步，开发完RN项目后可供内部人员安装和使用\n\n1. 修改`AppDelegate.m`中jsCodeLocation为 `jsCodeLocation = [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@\"index.ios\" fallbackResource:nil];`\n2. 在项目下运行 `curl http://localhost:8081/index.ios.bundle -o main.jsbundle`\n或者运行`react-native bundle`\n\n此时就是在项目目录下生成`main.jsbundle`文件，这个文件将所有js文件都打包在一起了，然后配置好证书，再编译得到ipa离线包，安装后即可在真机跑起来了。","source":"_posts/RN-真机调试及内部发布.md","raw":"---\ntitle: '[RN]真机调试及内部发布'\ndate: 2017-09-11 01:15:47\ntags:\n    - js\n    - react native\n\ncategory: \n    - js\n    - react native\n---\n\n一般我们开发RN都是在模拟器上调试的，那么真机是如何调试的呢？\n\n### 真机调试\n\n1. 配置好签名证书，并将包环境设置成Debug模式\n2. 将`AppDelegate.m`中的localhost修改成对应的IP地址，将调试真机插在电脑上，Xcode模拟器选择真机。\n3. 运行编译命令，真机摇一摇手机即可调出调试面板\n\n### 内部发布\n内部发布是上App Store之前的一步，开发完RN项目后可供内部人员安装和使用\n\n1. 修改`AppDelegate.m`中jsCodeLocation为 `jsCodeLocation = [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@\"index.ios\" fallbackResource:nil];`\n2. 在项目下运行 `curl http://localhost:8081/index.ios.bundle -o main.jsbundle`\n或者运行`react-native bundle`\n\n此时就是在项目目录下生成`main.jsbundle`文件，这个文件将所有js文件都打包在一起了，然后配置好证书，再编译得到ipa离线包，安装后即可在真机跑起来了。","slug":"RN-真机调试及内部发布","published":1,"updated":"2018-01-19T07:29:27.198Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjd332e4k000ic2mjtpofev9l","content":"<p>一般我们开发RN都是在模拟器上调试的，那么真机是如何调试的呢？</p>\n<h3 id=\"真机调试\"><a href=\"#真机调试\" class=\"headerlink\" title=\"真机调试\"></a>真机调试</h3><ol>\n<li>配置好签名证书，并将包环境设置成Debug模式</li>\n<li>将<code>AppDelegate.m</code>中的localhost修改成对应的IP地址，将调试真机插在电脑上，Xcode模拟器选择真机。</li>\n<li>运行编译命令，真机摇一摇手机即可调出调试面板</li>\n</ol>\n<h3 id=\"内部发布\"><a href=\"#内部发布\" class=\"headerlink\" title=\"内部发布\"></a>内部发布</h3><p>内部发布是上App Store之前的一步，开发完RN项目后可供内部人员安装和使用</p>\n<ol>\n<li>修改<code>AppDelegate.m</code>中jsCodeLocation为 <code>jsCodeLocation = [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@&quot;index.ios&quot; fallbackResource:nil];</code></li>\n<li>在项目下运行 <code>curl http://localhost:8081/index.ios.bundle -o main.jsbundle</code><br>或者运行<code>react-native bundle</code></li>\n</ol>\n<p>此时就是在项目目录下生成<code>main.jsbundle</code>文件，这个文件将所有js文件都打包在一起了，然后配置好证书，再编译得到ipa离线包，安装后即可在真机跑起来了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>一般我们开发RN都是在模拟器上调试的，那么真机是如何调试的呢？</p>\n<h3 id=\"真机调试\"><a href=\"#真机调试\" class=\"headerlink\" title=\"真机调试\"></a>真机调试</h3><ol>\n<li>配置好签名证书，并将包环境设置成Debug模式</li>\n<li>将<code>AppDelegate.m</code>中的localhost修改成对应的IP地址，将调试真机插在电脑上，Xcode模拟器选择真机。</li>\n<li>运行编译命令，真机摇一摇手机即可调出调试面板</li>\n</ol>\n<h3 id=\"内部发布\"><a href=\"#内部发布\" class=\"headerlink\" title=\"内部发布\"></a>内部发布</h3><p>内部发布是上App Store之前的一步，开发完RN项目后可供内部人员安装和使用</p>\n<ol>\n<li>修改<code>AppDelegate.m</code>中jsCodeLocation为 <code>jsCodeLocation = [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@&quot;index.ios&quot; fallbackResource:nil];</code></li>\n<li>在项目下运行 <code>curl http://localhost:8081/index.ios.bundle -o main.jsbundle</code><br>或者运行<code>react-native bundle</code></li>\n</ol>\n<p>此时就是在项目目录下生成<code>main.jsbundle</code>文件，这个文件将所有js文件都打包在一起了，然后配置好证书，再编译得到ipa离线包，安装后即可在真机跑起来了。</p>\n"},{"title":"fabric快速入门","date":"2016-02-14T05:07:01.000Z","_content":"\nFabric是一个Python库，用于简化使用SSH的应用程序部署或系统管理任务。\n\n它提供的操作包括：执行本地或远程shell命令，上传/下载文件，以及其他辅助功能等。\n\n### 安装\n\n[☞点我传送到fabric官网](http://www.fabfile.org/installing.html)\n\n安装fabric库\n\n``` shell\npip install fabric\n```\n>依赖 Paramiko 、PyCrypto库\n\n安装依赖\n\n``` shell\n# 安装 pycrypto 密码库\npip install pycrypto\n\n# 安装 pycrypto 依赖\npip install ecdsa\n```\n\nps:【windows7 x64 ，python2.7 】Windows下pip安装包报错：Microsoft Visual C++ 9.0 is required Unable to find vcvarsall.bat ，可以安装[Micorsoft Visual C++ Compiler for Python 2.7](https://www.microsoft.com/en-us/download/details.aspx?id=44266) 。\n\n\n### fabric使用\n\n新建py脚本：fabfile.py\n\n``` python\ndef hello():\n    print(\"Hello world!\")\n    \ndef hi():\n    print(\"Hello world!\")\n```\n\n执行fab命令:执行hello函数\n\n``` shell\nfab hello\n```\n\n 如果当前模块下没有fabfile.py文件，那么需要指定-f参数.\n \n ``` shell\n fab -f test.py hello\n ```\n\n使用参数\n\n``` python\ndef hello(name, value):\n    print(\"%s = %s!\" % (name, value))\n```\n \n带参执行命令\n \n```shell\nfab hello:name=age,value=20  \n```\n\n执行本地操作\n\n``` python\nfrom fabric.api import local, lcd\n\ndef lsfab():\n　　with lcd('~/tmp/fab'):\n   　　local('ls')\n```\n\n执行远程操作\n\n``` python\ndef setting_ci():\n    local('echo \"add and commit settings in local\"')\n\ndef update_setting_remote():\n     print \"remote update\"\n     with cd('~/temp'):   #cd用于进入某个目录\n         run('ls -l | wc -l')  #远程操作用run \n```\n\n多服务器操作\n\n``` python\n#!/usr/bin/env python\n# encoding: utf-8\n\nfrom fabric.api import *\nenv.roledefs = {\n            'testserver': ['user1@host1:port1',],\n            'productserver': ['user2@host2:port2', ]\n            }            \n\n@roles('testserver')\ndef task1():\n    run('ls -l | wc -l')\n\n@roles('productserver')\ndef task2():\n    run('ls ~/temp/ | wc -l')\n\ndef do():\n    execute(task1)\n    execute(task2) \n```\n\n\n用不同颜色打印\n\n```python\nfrom fabric.colors import *\n\ndef show():\n    print green('success')\n    print red('fail')\n    print yellow('yellow') \n```\n\nfabric 命令行工具\n\n```shell\n装饰器作用？\n    @task   # 定义任务 @task(alias='dwm') fab --list\n    @parallel # 并行处理\n\n    命令行常用： fab --help\n    fab -l             -- 显示可用的task（命令）\n    fab -H             -- 指定host，支持多host逗号分开\n    fab -R             -- 指定role，支持多个\n    fab -P             -- 并发数，默认是串行\n    fab -w             -- warn_only，默认是碰到异常直接abort退出\n    fab -f             -- 指定入口文件，fab默认入口文件是：fabfile/fabfile.py\n```\n\n[☞更多参考官网教程](http://docs.fabfile.org/en/1.13/)\n","source":"_posts/fabric快速入门.md","raw":"---\ntitle: fabric快速入门\ndate: 2016-02-14 13:07:01\ntags:\n    - python\n    - 运维\n\ncategory: \n    - python\n    \n---\n\nFabric是一个Python库，用于简化使用SSH的应用程序部署或系统管理任务。\n\n它提供的操作包括：执行本地或远程shell命令，上传/下载文件，以及其他辅助功能等。\n\n### 安装\n\n[☞点我传送到fabric官网](http://www.fabfile.org/installing.html)\n\n安装fabric库\n\n``` shell\npip install fabric\n```\n>依赖 Paramiko 、PyCrypto库\n\n安装依赖\n\n``` shell\n# 安装 pycrypto 密码库\npip install pycrypto\n\n# 安装 pycrypto 依赖\npip install ecdsa\n```\n\nps:【windows7 x64 ，python2.7 】Windows下pip安装包报错：Microsoft Visual C++ 9.0 is required Unable to find vcvarsall.bat ，可以安装[Micorsoft Visual C++ Compiler for Python 2.7](https://www.microsoft.com/en-us/download/details.aspx?id=44266) 。\n\n\n### fabric使用\n\n新建py脚本：fabfile.py\n\n``` python\ndef hello():\n    print(\"Hello world!\")\n    \ndef hi():\n    print(\"Hello world!\")\n```\n\n执行fab命令:执行hello函数\n\n``` shell\nfab hello\n```\n\n 如果当前模块下没有fabfile.py文件，那么需要指定-f参数.\n \n ``` shell\n fab -f test.py hello\n ```\n\n使用参数\n\n``` python\ndef hello(name, value):\n    print(\"%s = %s!\" % (name, value))\n```\n \n带参执行命令\n \n```shell\nfab hello:name=age,value=20  \n```\n\n执行本地操作\n\n``` python\nfrom fabric.api import local, lcd\n\ndef lsfab():\n　　with lcd('~/tmp/fab'):\n   　　local('ls')\n```\n\n执行远程操作\n\n``` python\ndef setting_ci():\n    local('echo \"add and commit settings in local\"')\n\ndef update_setting_remote():\n     print \"remote update\"\n     with cd('~/temp'):   #cd用于进入某个目录\n         run('ls -l | wc -l')  #远程操作用run \n```\n\n多服务器操作\n\n``` python\n#!/usr/bin/env python\n# encoding: utf-8\n\nfrom fabric.api import *\nenv.roledefs = {\n            'testserver': ['user1@host1:port1',],\n            'productserver': ['user2@host2:port2', ]\n            }            \n\n@roles('testserver')\ndef task1():\n    run('ls -l | wc -l')\n\n@roles('productserver')\ndef task2():\n    run('ls ~/temp/ | wc -l')\n\ndef do():\n    execute(task1)\n    execute(task2) \n```\n\n\n用不同颜色打印\n\n```python\nfrom fabric.colors import *\n\ndef show():\n    print green('success')\n    print red('fail')\n    print yellow('yellow') \n```\n\nfabric 命令行工具\n\n```shell\n装饰器作用？\n    @task   # 定义任务 @task(alias='dwm') fab --list\n    @parallel # 并行处理\n\n    命令行常用： fab --help\n    fab -l             -- 显示可用的task（命令）\n    fab -H             -- 指定host，支持多host逗号分开\n    fab -R             -- 指定role，支持多个\n    fab -P             -- 并发数，默认是串行\n    fab -w             -- warn_only，默认是碰到异常直接abort退出\n    fab -f             -- 指定入口文件，fab默认入口文件是：fabfile/fabfile.py\n```\n\n[☞更多参考官网教程](http://docs.fabfile.org/en/1.13/)\n","slug":"fabric快速入门","published":1,"updated":"2018-01-19T07:29:27.198Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjd332e4m000kc2mjwyaio0lf","content":"<p>Fabric是一个Python库，用于简化使用SSH的应用程序部署或系统管理任务。</p>\n<p>它提供的操作包括：执行本地或远程shell命令，上传/下载文件，以及其他辅助功能等。</p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p><a href=\"http://www.fabfile.org/installing.html\" target=\"_blank\" rel=\"noopener\">☞点我传送到fabric官网</a></p>\n<p>安装fabric库</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install fabric</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>依赖 Paramiko 、PyCrypto库</p>\n</blockquote>\n<p>安装依赖</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 安装 pycrypto 密码库</span></span><br><span class=\"line\">pip install pycrypto</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 安装 pycrypto 依赖</span></span><br><span class=\"line\">pip install ecdsa</span><br></pre></td></tr></table></figure>\n<p>ps:【windows7 x64 ，python2.7 】Windows下pip安装包报错：Microsoft Visual C++ 9.0 is required Unable to find vcvarsall.bat ，可以安装<a href=\"https://www.microsoft.com/en-us/download/details.aspx?id=44266\" target=\"_blank\" rel=\"noopener\">Micorsoft Visual C++ Compiler for Python 2.7</a> 。</p>\n<h3 id=\"fabric使用\"><a href=\"#fabric使用\" class=\"headerlink\" title=\"fabric使用\"></a>fabric使用</h3><p>新建py脚本：fabfile.py</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">hello</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    print(<span class=\"string\">\"Hello world!\"</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">hi</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    print(<span class=\"string\">\"Hello world!\"</span>)</span><br></pre></td></tr></table></figure>\n<p>执行fab命令:执行hello函数</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fab hello</span><br></pre></td></tr></table></figure>\n<p> 如果当前模块下没有fabfile.py文件，那么需要指定-f参数.</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fab -f test.py hello</span><br></pre></td></tr></table></figure>\n<p>使用参数</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">hello</span><span class=\"params\">(name, value)</span>:</span></span><br><span class=\"line\">    print(<span class=\"string\">\"%s = %s!\"</span> % (name, value))</span><br></pre></td></tr></table></figure>\n<p>带参执行命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fab hello:name=age,value=20</span><br></pre></td></tr></table></figure>\n<p>执行本地操作</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> fabric.api <span class=\"keyword\">import</span> local, lcd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">lsfab</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">　　<span class=\"keyword\">with</span> lcd(<span class=\"string\">'~/tmp/fab'</span>):</span><br><span class=\"line\">   　　local(<span class=\"string\">'ls'</span>)</span><br></pre></td></tr></table></figure>\n<p>执行远程操作</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">setting_ci</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    local(<span class=\"string\">'echo \"add and commit settings in local\"'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">update_setting_remote</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">     <span class=\"keyword\">print</span> <span class=\"string\">\"remote update\"</span></span><br><span class=\"line\">     <span class=\"keyword\">with</span> cd(<span class=\"string\">'~/temp'</span>):   <span class=\"comment\">#cd用于进入某个目录</span></span><br><span class=\"line\">         run(<span class=\"string\">'ls -l | wc -l'</span>)  <span class=\"comment\">#远程操作用run</span></span><br></pre></td></tr></table></figure>\n<p>多服务器操作</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># encoding: utf-8</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> fabric.api <span class=\"keyword\">import</span> *</span><br><span class=\"line\">env.roledefs = &#123;</span><br><span class=\"line\">            <span class=\"string\">'testserver'</span>: [<span class=\"string\">'user1@host1:port1'</span>,],</span><br><span class=\"line\">            <span class=\"string\">'productserver'</span>: [<span class=\"string\">'user2@host2:port2'</span>, ]</span><br><span class=\"line\">            &#125;            </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@roles('testserver')</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">task1</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    run(<span class=\"string\">'ls -l | wc -l'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@roles('productserver')</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">task2</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    run(<span class=\"string\">'ls ~/temp/ | wc -l'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">do</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    execute(task1)</span><br><span class=\"line\">    execute(task2)</span><br></pre></td></tr></table></figure>\n<p>用不同颜色打印</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> fabric.colors <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">show</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">print</span> green(<span class=\"string\">'success'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">print</span> red(<span class=\"string\">'fail'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">print</span> yellow(<span class=\"string\">'yellow'</span>)</span><br></pre></td></tr></table></figure>\n<p>fabric 命令行工具</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">装饰器作用？</span><br><span class=\"line\">    @task   # 定义任务 @task(alias='dwm') fab --list</span><br><span class=\"line\">    @parallel # 并行处理</span><br><span class=\"line\"></span><br><span class=\"line\">    命令行常用： fab --help</span><br><span class=\"line\">    fab -l             -- 显示可用的task（命令）</span><br><span class=\"line\">    fab -H             -- 指定host，支持多host逗号分开</span><br><span class=\"line\">    fab -R             -- 指定role，支持多个</span><br><span class=\"line\">    fab -P             -- 并发数，默认是串行</span><br><span class=\"line\">    fab -w             -- warn_only，默认是碰到异常直接abort退出</span><br><span class=\"line\">    fab -f             -- 指定入口文件，fab默认入口文件是：fabfile/fabfile.py</span><br></pre></td></tr></table></figure>\n<p><a href=\"http://docs.fabfile.org/en/1.13/\" target=\"_blank\" rel=\"noopener\">☞更多参考官网教程</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Fabric是一个Python库，用于简化使用SSH的应用程序部署或系统管理任务。</p>\n<p>它提供的操作包括：执行本地或远程shell命令，上传/下载文件，以及其他辅助功能等。</p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p><a href=\"http://www.fabfile.org/installing.html\" target=\"_blank\" rel=\"noopener\">☞点我传送到fabric官网</a></p>\n<p>安装fabric库</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install fabric</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>依赖 Paramiko 、PyCrypto库</p>\n</blockquote>\n<p>安装依赖</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 安装 pycrypto 密码库</span></span><br><span class=\"line\">pip install pycrypto</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 安装 pycrypto 依赖</span></span><br><span class=\"line\">pip install ecdsa</span><br></pre></td></tr></table></figure>\n<p>ps:【windows7 x64 ，python2.7 】Windows下pip安装包报错：Microsoft Visual C++ 9.0 is required Unable to find vcvarsall.bat ，可以安装<a href=\"https://www.microsoft.com/en-us/download/details.aspx?id=44266\" target=\"_blank\" rel=\"noopener\">Micorsoft Visual C++ Compiler for Python 2.7</a> 。</p>\n<h3 id=\"fabric使用\"><a href=\"#fabric使用\" class=\"headerlink\" title=\"fabric使用\"></a>fabric使用</h3><p>新建py脚本：fabfile.py</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">hello</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    print(<span class=\"string\">\"Hello world!\"</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">hi</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    print(<span class=\"string\">\"Hello world!\"</span>)</span><br></pre></td></tr></table></figure>\n<p>执行fab命令:执行hello函数</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fab hello</span><br></pre></td></tr></table></figure>\n<p> 如果当前模块下没有fabfile.py文件，那么需要指定-f参数.</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fab -f test.py hello</span><br></pre></td></tr></table></figure>\n<p>使用参数</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">hello</span><span class=\"params\">(name, value)</span>:</span></span><br><span class=\"line\">    print(<span class=\"string\">\"%s = %s!\"</span> % (name, value))</span><br></pre></td></tr></table></figure>\n<p>带参执行命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fab hello:name=age,value=20</span><br></pre></td></tr></table></figure>\n<p>执行本地操作</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> fabric.api <span class=\"keyword\">import</span> local, lcd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">lsfab</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">　　<span class=\"keyword\">with</span> lcd(<span class=\"string\">'~/tmp/fab'</span>):</span><br><span class=\"line\">   　　local(<span class=\"string\">'ls'</span>)</span><br></pre></td></tr></table></figure>\n<p>执行远程操作</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">setting_ci</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    local(<span class=\"string\">'echo \"add and commit settings in local\"'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">update_setting_remote</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">     <span class=\"keyword\">print</span> <span class=\"string\">\"remote update\"</span></span><br><span class=\"line\">     <span class=\"keyword\">with</span> cd(<span class=\"string\">'~/temp'</span>):   <span class=\"comment\">#cd用于进入某个目录</span></span><br><span class=\"line\">         run(<span class=\"string\">'ls -l | wc -l'</span>)  <span class=\"comment\">#远程操作用run</span></span><br></pre></td></tr></table></figure>\n<p>多服务器操作</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># encoding: utf-8</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> fabric.api <span class=\"keyword\">import</span> *</span><br><span class=\"line\">env.roledefs = &#123;</span><br><span class=\"line\">            <span class=\"string\">'testserver'</span>: [<span class=\"string\">'user1@host1:port1'</span>,],</span><br><span class=\"line\">            <span class=\"string\">'productserver'</span>: [<span class=\"string\">'user2@host2:port2'</span>, ]</span><br><span class=\"line\">            &#125;            </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@roles('testserver')</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">task1</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    run(<span class=\"string\">'ls -l | wc -l'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@roles('productserver')</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">task2</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    run(<span class=\"string\">'ls ~/temp/ | wc -l'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">do</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    execute(task1)</span><br><span class=\"line\">    execute(task2)</span><br></pre></td></tr></table></figure>\n<p>用不同颜色打印</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> fabric.colors <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">show</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">print</span> green(<span class=\"string\">'success'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">print</span> red(<span class=\"string\">'fail'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">print</span> yellow(<span class=\"string\">'yellow'</span>)</span><br></pre></td></tr></table></figure>\n<p>fabric 命令行工具</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">装饰器作用？</span><br><span class=\"line\">    @task   # 定义任务 @task(alias='dwm') fab --list</span><br><span class=\"line\">    @parallel # 并行处理</span><br><span class=\"line\"></span><br><span class=\"line\">    命令行常用： fab --help</span><br><span class=\"line\">    fab -l             -- 显示可用的task（命令）</span><br><span class=\"line\">    fab -H             -- 指定host，支持多host逗号分开</span><br><span class=\"line\">    fab -R             -- 指定role，支持多个</span><br><span class=\"line\">    fab -P             -- 并发数，默认是串行</span><br><span class=\"line\">    fab -w             -- warn_only，默认是碰到异常直接abort退出</span><br><span class=\"line\">    fab -f             -- 指定入口文件，fab默认入口文件是：fabfile/fabfile.py</span><br></pre></td></tr></table></figure>\n<p><a href=\"http://docs.fabfile.org/en/1.13/\" target=\"_blank\" rel=\"noopener\">☞更多参考官网教程</a></p>\n"},{"title":"javascript对象","date":"2016-02-11T10:44:09.000Z","_content":"\n#### 创建对象\n\n```js\n// 使用Object创建对象\nvar p = new Object();\n\np.name = 'jason';\np.sayName = function(){\n    alert(this.name);\n}\n\n//使用字面量的方式创建对象\nvar p = {\n    name:'jason',\n    sayName：function(){\n        alert(this.name);\n    }\n}\n```\n\n#### 属性类型\n\nECMAScript中有两种属性：数据属性，访问属性。\n\n数据属性：是一个包含数据值的位置，有4个描述其行为的特性:\n\n| 名称 |  值  |\n| --- | ---  |\n|configurable | 表示能否通过delete删除属性而重新定义，默认true | \n|enumerable | 表示能否通过for-in循环返回属性，默认true |\n|writable | 表示能否修改属性的值，默认true |\n|value | 包含这个属性的属性值，默认undefined |\n\n\n```js\n/*修改属性的默认特性，使用Object.defineProperty(obj,propertyName,descriptor)方法\n四个属性值：configurable、enumerable、writable、value\n*/\nvar p = {};\nObject.defineProperty(p,'name',{\n    writable:false,\n    enumerable:false,\n    configurable:false,\n    value:'chen'\n});\n\np.name = 'jason';  // 非严格模式下，赋值会被忽略，严格模式，赋值会报错\n\n/*定义多个属性使用Object.definePropertys()方法 */\nObject.definePropertys(p, {\n  'name', {\n      writable: false,\n      enumerable: false,\n      configurable: false,\n      value: 'chen'\n  }, {\n      'age', {\n          writable: false,\n          enumerable: false,\n          configurable: false,\n          value: '18'\n      }\n  });\n```\n\n访问器属性：访问器属性不包含属性值，它们包含getter,setter函数（非必须）\n该访问属性也有4个特性:\n\n| 名称 |  值  |\n| --- | ---  |\n|configurable | 表示能否通过delete删除属性而重新定义，默认true|\n|enumerable | 表示能否通过for-in循环返回属性，默认true |\n|get|读取属性调用的函数，默认undefined|\n|set|设置属性调用的函数，默认undefined|\n\n```js\nvar book = {\n    _year:2016,  // 私有属性常以 '_' 开头\n    edition:1\n};\n\n\nObject.defineProperty(book,'year',{\n    get:function(){\n        return this._year;\n    },\n    set:function(newValue){\n        this._year = newValue;\n        this.edition +=1;\n    }\n});\n\n使用访问器属性的常见方式即设置一个属性值会导致其他属性发生变化\n\n另一种设置方式(遗弃的方法)\nbook.__defineGetter('year',function(){\n    return this._year;\n});\nbook.__defineSetter('year',function(newValue){\n    this._year = newValue;\n});\n\n/* 读取属性的特性 Object.getOwePropertyDescriptor() 方法会返回描述对象 */\nvar descriptor = Object.getOwePropertyDescriptor(book,'year');\n\n/* 返回 descriptor : {\n   value:'jason',\n   configurable:false\n} */\n```\n\n#### 创建对象的几种方式\n\n##### 工厂模式\n\n```js\nfunction createGirlFried(name,job){\n    var o = new Object();\n    o.name = name;\n    o.job = job;\n    return o;\n}\n\nvar girl1 = createGirlFried('shany','Dotor');\nvar girl1 = createGirlFried('kaer','Softwarn Engineer');\n\n//没有解决对象识别的问题（对象的类型）\n```\n\n#####构造函数\n```js\nfunction Person(name,job){\n    this.name = name;\n    this.job = job;\n    this.sayName = function(){\n        alert(this.name);\n    }\n}\n\nvar p1 = new Person('zs','doctor');\nvar p2 = new Person('zs','doctor');\n\nalert(p1.construtor == p2.construtor)  // true\np1 instanceof Person  // true\np1 instanceof Object  // true\n```\n\n使用 new 操作符，调用构造函数创建对象，会经历以下4步\n1. 创建一个新对象\n2. 将构造函数的作用域赋给新对象（this 指向这个新对象）\n3. 执行构造函数中的代码（为这个对象添加新属性）\n4. 返回新对象\n\n```js\n//构造函数 当函数用\nvar p = Person('sy','你猜');\nalert(window.name) // sy\n\n// 构造函数的问题：不同示例上的同名函数是不相等的\nfunction sayName (){\n    alert(this.name);\n}\n\nfunction Person(name,job){\n    this.name = name;\n    this.job = job;\n    this.sayName = sayName;\n}\n// 虽然函数一样，但污染了全局变量\n```\n\n##### 原型模式\n每个函数都有一个prototype属性，这是属性是一个指针，指向一个对象（即原型对象，包含共享的属性和方法）\n\n```js\nfunction Person(name,job){\n    this.name = name;\n    this.job = job;\n}\n\nPerson.prototype.sayName = function(){\n    alert(this.name);\n}\n\nPerson.prototype.name = 'susan';\n\nvar p1 = new Person('san','programmer');\np1._proto_ == Person.prototype // true\n\np1.name == san // true\n```\n虽然可以通过对象访问保存在原型中的值，却不能通过对象实例重写原型中的值，如果添加同名属性将屏蔽原型中的同名属性\n    如果依旧要访问原型的的同名属性，只能`delete obj.propertyName`  (设置null  undefined 无效)\n    \n    \n```js\nPerson.prototype.construtor == Person // true\nPerson.prototype.isPrototypeOf(Person) // true\n\n检查一个属性是否是原型属性还是实例属性\nhasOwnProperty('propName');\np1.hasOwnProperty('name') // true\n\n\n// 遍历对象-两种方式使用in操作符( in / for in )\n'name' in p1\n\nfor (var prop in p1) {\n    console.log(prop)\n}\n\n/* 使用for - in返回所有能通过对象访问的、 可枚举属性（ 包含实例属 获取对象上所有可枚举的实例属性， 可使用ECMAScript5 的 Object.keys() 方法 Object.keys(p) 返回一个数组（ 顺序和for - i 获取对象上所有可枚举的实例属性， 无论是否可枚举 Object.getOwePropertyNames() ps： construtor 是不可枚举的。*/\n\n// 重写原型对象\nPerson.prototype = {\n        construtor: Person, // 虽说修正了 construtor 但此时的 construtor变成可枚举的，原生的construtor是不可枚举的\n        sayName: function() {\n            return this.name;\n        }\n    }\n\n// 修复可枚举特性\nObject.defineProperty(Person.prototype, 'construtor', {\n    enumerable: false\n})\n\n/* 原型的问题： 原型的最大问题是由其共享属性的本性导致的， 原型中的所有属性都是被实例共享， 这种共享对函数非常合适， 对包含基本数据类型的属性也说的过去， 然而对于引用问题就比较突出了 */\n\nPerson.prototype.friends = ['sam', 'shany'];\n// friends 被所有实例共享， 修改某个实例会影响其他实例\n\n```\n##### 组合使用构造函数和原型模式\n```js\nfunction person(name) {\n    this.name = name;\n    this.friends = ['san'];\n}\nPerson.prototype.sayName = function() {\n    alert(this.name);\n}\n```\n\n##### 动态原型模式\n```js\nfunction person(name) {\n    this.name = name;\n    this.friends = ['san'];\n    if (typeof this.sayName != 'function') {\n        Person.prototype.sayName = function() {\n            alert(this.name);\n        }\n    }\n}\n```\n##### 寄生构造函数\n```js\nfunction Person(name, age) {\n    var o = Object();\n    o.name = name;\n    o.age = age;\n    return o;\n}\n\nvar p = new Person('sam', 20);\n// return 语句重写了构造函数的值\n\n// 这个方式可在特殊情况下为对象创建构造函数\n\nfunction MyArray() {\n    var arr = new Array();\n    arr.push.apply(arr, arguments);\n    arr.print = function() {\n        return this.join('-');\n    }\n    return arr;\n}\n\nvar c = new MyArray('a1', 'a2');\nalert(c.print());\n```\n\n##### 稳妥构造函数\n```js\n// 适合在一些安全的环境中， 没有公共属性， 其方法也不应用this\n\nfunction Person(name, age) {\n    var o = new Object();\n    o.sayName = function() {\n        alert(name);\n    }\n}\n```\n\n##### 原型继承\n```js\nfunction SuperType(name) {\n    this.name = name;\n}\n\nfunction SubType(name, age) {\n    SuperType.call(this, name)\n    this.age = age;\n}\n```\n\n##### 组合继承\n```js\n// 常用的继承模式（ 原型继承 父类方法无法继承过来）\n\nfunction SubType(name, age) {\n    SuperType.call(this, name)\n    this.age = age;\n}\n\nSubType.prototype = new SuperType();\n```\n\n##### 原型继承\n```js\n// ECMAScript实现\nfunction object(o) {\n    function F() {}\n    F.prototype = o;\n    return new F();\n}\n\n// ECMAScript中 Object.create(p,{\n    skill: 'js'\n});\n```\n\n\n","source":"_posts/javascript对象.md","raw":"---\ntitle: javascript对象\ndate: 2016-02-11 18:44:09\ntags:\n    - js\n\ncategory: \n    - js\n---\n\n#### 创建对象\n\n```js\n// 使用Object创建对象\nvar p = new Object();\n\np.name = 'jason';\np.sayName = function(){\n    alert(this.name);\n}\n\n//使用字面量的方式创建对象\nvar p = {\n    name:'jason',\n    sayName：function(){\n        alert(this.name);\n    }\n}\n```\n\n#### 属性类型\n\nECMAScript中有两种属性：数据属性，访问属性。\n\n数据属性：是一个包含数据值的位置，有4个描述其行为的特性:\n\n| 名称 |  值  |\n| --- | ---  |\n|configurable | 表示能否通过delete删除属性而重新定义，默认true | \n|enumerable | 表示能否通过for-in循环返回属性，默认true |\n|writable | 表示能否修改属性的值，默认true |\n|value | 包含这个属性的属性值，默认undefined |\n\n\n```js\n/*修改属性的默认特性，使用Object.defineProperty(obj,propertyName,descriptor)方法\n四个属性值：configurable、enumerable、writable、value\n*/\nvar p = {};\nObject.defineProperty(p,'name',{\n    writable:false,\n    enumerable:false,\n    configurable:false,\n    value:'chen'\n});\n\np.name = 'jason';  // 非严格模式下，赋值会被忽略，严格模式，赋值会报错\n\n/*定义多个属性使用Object.definePropertys()方法 */\nObject.definePropertys(p, {\n  'name', {\n      writable: false,\n      enumerable: false,\n      configurable: false,\n      value: 'chen'\n  }, {\n      'age', {\n          writable: false,\n          enumerable: false,\n          configurable: false,\n          value: '18'\n      }\n  });\n```\n\n访问器属性：访问器属性不包含属性值，它们包含getter,setter函数（非必须）\n该访问属性也有4个特性:\n\n| 名称 |  值  |\n| --- | ---  |\n|configurable | 表示能否通过delete删除属性而重新定义，默认true|\n|enumerable | 表示能否通过for-in循环返回属性，默认true |\n|get|读取属性调用的函数，默认undefined|\n|set|设置属性调用的函数，默认undefined|\n\n```js\nvar book = {\n    _year:2016,  // 私有属性常以 '_' 开头\n    edition:1\n};\n\n\nObject.defineProperty(book,'year',{\n    get:function(){\n        return this._year;\n    },\n    set:function(newValue){\n        this._year = newValue;\n        this.edition +=1;\n    }\n});\n\n使用访问器属性的常见方式即设置一个属性值会导致其他属性发生变化\n\n另一种设置方式(遗弃的方法)\nbook.__defineGetter('year',function(){\n    return this._year;\n});\nbook.__defineSetter('year',function(newValue){\n    this._year = newValue;\n});\n\n/* 读取属性的特性 Object.getOwePropertyDescriptor() 方法会返回描述对象 */\nvar descriptor = Object.getOwePropertyDescriptor(book,'year');\n\n/* 返回 descriptor : {\n   value:'jason',\n   configurable:false\n} */\n```\n\n#### 创建对象的几种方式\n\n##### 工厂模式\n\n```js\nfunction createGirlFried(name,job){\n    var o = new Object();\n    o.name = name;\n    o.job = job;\n    return o;\n}\n\nvar girl1 = createGirlFried('shany','Dotor');\nvar girl1 = createGirlFried('kaer','Softwarn Engineer');\n\n//没有解决对象识别的问题（对象的类型）\n```\n\n#####构造函数\n```js\nfunction Person(name,job){\n    this.name = name;\n    this.job = job;\n    this.sayName = function(){\n        alert(this.name);\n    }\n}\n\nvar p1 = new Person('zs','doctor');\nvar p2 = new Person('zs','doctor');\n\nalert(p1.construtor == p2.construtor)  // true\np1 instanceof Person  // true\np1 instanceof Object  // true\n```\n\n使用 new 操作符，调用构造函数创建对象，会经历以下4步\n1. 创建一个新对象\n2. 将构造函数的作用域赋给新对象（this 指向这个新对象）\n3. 执行构造函数中的代码（为这个对象添加新属性）\n4. 返回新对象\n\n```js\n//构造函数 当函数用\nvar p = Person('sy','你猜');\nalert(window.name) // sy\n\n// 构造函数的问题：不同示例上的同名函数是不相等的\nfunction sayName (){\n    alert(this.name);\n}\n\nfunction Person(name,job){\n    this.name = name;\n    this.job = job;\n    this.sayName = sayName;\n}\n// 虽然函数一样，但污染了全局变量\n```\n\n##### 原型模式\n每个函数都有一个prototype属性，这是属性是一个指针，指向一个对象（即原型对象，包含共享的属性和方法）\n\n```js\nfunction Person(name,job){\n    this.name = name;\n    this.job = job;\n}\n\nPerson.prototype.sayName = function(){\n    alert(this.name);\n}\n\nPerson.prototype.name = 'susan';\n\nvar p1 = new Person('san','programmer');\np1._proto_ == Person.prototype // true\n\np1.name == san // true\n```\n虽然可以通过对象访问保存在原型中的值，却不能通过对象实例重写原型中的值，如果添加同名属性将屏蔽原型中的同名属性\n    如果依旧要访问原型的的同名属性，只能`delete obj.propertyName`  (设置null  undefined 无效)\n    \n    \n```js\nPerson.prototype.construtor == Person // true\nPerson.prototype.isPrototypeOf(Person) // true\n\n检查一个属性是否是原型属性还是实例属性\nhasOwnProperty('propName');\np1.hasOwnProperty('name') // true\n\n\n// 遍历对象-两种方式使用in操作符( in / for in )\n'name' in p1\n\nfor (var prop in p1) {\n    console.log(prop)\n}\n\n/* 使用for - in返回所有能通过对象访问的、 可枚举属性（ 包含实例属 获取对象上所有可枚举的实例属性， 可使用ECMAScript5 的 Object.keys() 方法 Object.keys(p) 返回一个数组（ 顺序和for - i 获取对象上所有可枚举的实例属性， 无论是否可枚举 Object.getOwePropertyNames() ps： construtor 是不可枚举的。*/\n\n// 重写原型对象\nPerson.prototype = {\n        construtor: Person, // 虽说修正了 construtor 但此时的 construtor变成可枚举的，原生的construtor是不可枚举的\n        sayName: function() {\n            return this.name;\n        }\n    }\n\n// 修复可枚举特性\nObject.defineProperty(Person.prototype, 'construtor', {\n    enumerable: false\n})\n\n/* 原型的问题： 原型的最大问题是由其共享属性的本性导致的， 原型中的所有属性都是被实例共享， 这种共享对函数非常合适， 对包含基本数据类型的属性也说的过去， 然而对于引用问题就比较突出了 */\n\nPerson.prototype.friends = ['sam', 'shany'];\n// friends 被所有实例共享， 修改某个实例会影响其他实例\n\n```\n##### 组合使用构造函数和原型模式\n```js\nfunction person(name) {\n    this.name = name;\n    this.friends = ['san'];\n}\nPerson.prototype.sayName = function() {\n    alert(this.name);\n}\n```\n\n##### 动态原型模式\n```js\nfunction person(name) {\n    this.name = name;\n    this.friends = ['san'];\n    if (typeof this.sayName != 'function') {\n        Person.prototype.sayName = function() {\n            alert(this.name);\n        }\n    }\n}\n```\n##### 寄生构造函数\n```js\nfunction Person(name, age) {\n    var o = Object();\n    o.name = name;\n    o.age = age;\n    return o;\n}\n\nvar p = new Person('sam', 20);\n// return 语句重写了构造函数的值\n\n// 这个方式可在特殊情况下为对象创建构造函数\n\nfunction MyArray() {\n    var arr = new Array();\n    arr.push.apply(arr, arguments);\n    arr.print = function() {\n        return this.join('-');\n    }\n    return arr;\n}\n\nvar c = new MyArray('a1', 'a2');\nalert(c.print());\n```\n\n##### 稳妥构造函数\n```js\n// 适合在一些安全的环境中， 没有公共属性， 其方法也不应用this\n\nfunction Person(name, age) {\n    var o = new Object();\n    o.sayName = function() {\n        alert(name);\n    }\n}\n```\n\n##### 原型继承\n```js\nfunction SuperType(name) {\n    this.name = name;\n}\n\nfunction SubType(name, age) {\n    SuperType.call(this, name)\n    this.age = age;\n}\n```\n\n##### 组合继承\n```js\n// 常用的继承模式（ 原型继承 父类方法无法继承过来）\n\nfunction SubType(name, age) {\n    SuperType.call(this, name)\n    this.age = age;\n}\n\nSubType.prototype = new SuperType();\n```\n\n##### 原型继承\n```js\n// ECMAScript实现\nfunction object(o) {\n    function F() {}\n    F.prototype = o;\n    return new F();\n}\n\n// ECMAScript中 Object.create(p,{\n    skill: 'js'\n});\n```\n\n\n","slug":"javascript对象","published":1,"updated":"2018-01-19T07:29:27.202Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjd332e4o000mc2mjg6ym5gqz","content":"<h4 id=\"创建对象\"><a href=\"#创建对象\" class=\"headerlink\" title=\"创建对象\"></a>创建对象</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 使用Object创建对象</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> p = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">p.name = <span class=\"string\">'jason'</span>;</span><br><span class=\"line\">p.sayName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    alert(<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//使用字面量的方式创建对象</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> p = &#123;</span><br><span class=\"line\">    name:<span class=\"string\">'jason'</span>,</span><br><span class=\"line\">    sayName：<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        alert(<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"属性类型\"><a href=\"#属性类型\" class=\"headerlink\" title=\"属性类型\"></a>属性类型</h4><p>ECMAScript中有两种属性：数据属性，访问属性。</p>\n<p>数据属性：是一个包含数据值的位置，有4个描述其行为的特性:</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>configurable</td>\n<td>表示能否通过delete删除属性而重新定义，默认true</td>\n</tr>\n<tr>\n<td>enumerable</td>\n<td>表示能否通过for-in循环返回属性，默认true</td>\n</tr>\n<tr>\n<td>writable</td>\n<td>表示能否修改属性的值，默认true</td>\n</tr>\n<tr>\n<td>value</td>\n<td>包含这个属性的属性值，默认undefined</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*修改属性的默认特性，使用Object.defineProperty(obj,propertyName,descriptor)方法</span></span><br><span class=\"line\"><span class=\"comment\">四个属性值：configurable、enumerable、writable、value</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> p = &#123;&#125;;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(p,<span class=\"string\">'name'</span>,&#123;</span><br><span class=\"line\">    writable:<span class=\"literal\">false</span>,</span><br><span class=\"line\">    enumerable:<span class=\"literal\">false</span>,</span><br><span class=\"line\">    configurable:<span class=\"literal\">false</span>,</span><br><span class=\"line\">    value:<span class=\"string\">'chen'</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">p.name = <span class=\"string\">'jason'</span>;  <span class=\"comment\">// 非严格模式下，赋值会被忽略，严格模式，赋值会报错</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*定义多个属性使用Object.definePropertys()方法 */</span></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.definePropertys(p, &#123;</span><br><span class=\"line\">  <span class=\"string\">'name'</span>, &#123;</span><br><span class=\"line\">      writable: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      enumerable: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      configurable: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      value: <span class=\"string\">'chen'</span></span><br><span class=\"line\">  &#125;, &#123;</span><br><span class=\"line\">      <span class=\"string\">'age'</span>, &#123;</span><br><span class=\"line\">          writable: <span class=\"literal\">false</span>,</span><br><span class=\"line\">          enumerable: <span class=\"literal\">false</span>,</span><br><span class=\"line\">          configurable: <span class=\"literal\">false</span>,</span><br><span class=\"line\">          value: <span class=\"string\">'18'</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n<p>访问器属性：访问器属性不包含属性值，它们包含getter,setter函数（非必须）<br>该访问属性也有4个特性:</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>configurable</td>\n<td>表示能否通过delete删除属性而重新定义，默认true</td>\n</tr>\n<tr>\n<td>enumerable</td>\n<td>表示能否通过for-in循环返回属性，默认true</td>\n</tr>\n<tr>\n<td>get</td>\n<td>读取属性调用的函数，默认undefined</td>\n</tr>\n<tr>\n<td>set</td>\n<td>设置属性调用的函数，默认undefined</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> book = &#123;</span><br><span class=\"line\">    _year:<span class=\"number\">2016</span>,  <span class=\"comment\">// 私有属性常以 '_' 开头</span></span><br><span class=\"line\">    edition:<span class=\"number\">1</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(book,<span class=\"string\">'year'</span>,&#123;</span><br><span class=\"line\">    get:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>._year;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    set:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">newValue</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>._year = newValue;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.edition +=<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">使用访问器属性的常见方式即设置一个属性值会导致其他属性发生变化</span><br><span class=\"line\"></span><br><span class=\"line\">另一种设置方式(遗弃的方法)</span><br><span class=\"line\">book.__defineGetter(<span class=\"string\">'year'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>._year;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">book.__defineSetter(<span class=\"string\">'year'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">newValue</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>._year = newValue;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 读取属性的特性 Object.getOwePropertyDescriptor() 方法会返回描述对象 */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> descriptor = <span class=\"built_in\">Object</span>.getOwePropertyDescriptor(book,<span class=\"string\">'year'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 返回 descriptor : &#123;</span></span><br><span class=\"line\"><span class=\"comment\">   value:'jason',</span></span><br><span class=\"line\"><span class=\"comment\">   configurable:false</span></span><br><span class=\"line\"><span class=\"comment\">&#125; */</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"创建对象的几种方式\"><a href=\"#创建对象的几种方式\" class=\"headerlink\" title=\"创建对象的几种方式\"></a>创建对象的几种方式</h4><h5 id=\"工厂模式\"><a href=\"#工厂模式\" class=\"headerlink\" title=\"工厂模式\"></a>工厂模式</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createGirlFried</span>(<span class=\"params\">name,job</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> o = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\">    o.name = name;</span><br><span class=\"line\">    o.job = job;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> o;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> girl1 = createGirlFried(<span class=\"string\">'shany'</span>,<span class=\"string\">'Dotor'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> girl1 = createGirlFried(<span class=\"string\">'kaer'</span>,<span class=\"string\">'Softwarn Engineer'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//没有解决对象识别的问题（对象的类型）</span></span><br></pre></td></tr></table></figure>\n<p>#####构造函数<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name,job</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.job = job;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.sayName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        alert(<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> p1 = <span class=\"keyword\">new</span> Person(<span class=\"string\">'zs'</span>,<span class=\"string\">'doctor'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> p2 = <span class=\"keyword\">new</span> Person(<span class=\"string\">'zs'</span>,<span class=\"string\">'doctor'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">alert(p1.construtor == p2.construtor)  <span class=\"comment\">// true</span></span><br><span class=\"line\">p1 <span class=\"keyword\">instanceof</span> Person  <span class=\"comment\">// true</span></span><br><span class=\"line\">p1 <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Object</span>  <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure></p>\n<p>使用 new 操作符，调用构造函数创建对象，会经历以下4步</p>\n<ol>\n<li>创建一个新对象</li>\n<li>将构造函数的作用域赋给新对象（this 指向这个新对象）</li>\n<li>执行构造函数中的代码（为这个对象添加新属性）</li>\n<li>返回新对象</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//构造函数 当函数用</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> p = Person(<span class=\"string\">'sy'</span>,<span class=\"string\">'你猜'</span>);</span><br><span class=\"line\">alert(<span class=\"built_in\">window</span>.name) <span class=\"comment\">// sy</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 构造函数的问题：不同示例上的同名函数是不相等的</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sayName</span> (<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    alert(<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name,job</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.job = job;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.sayName = sayName;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 虽然函数一样，但污染了全局变量</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"原型模式\"><a href=\"#原型模式\" class=\"headerlink\" title=\"原型模式\"></a>原型模式</h5><p>每个函数都有一个prototype属性，这是属性是一个指针，指向一个对象（即原型对象，包含共享的属性和方法）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name,job</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.job = job;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Person.prototype.sayName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    alert(<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Person.prototype.name = <span class=\"string\">'susan'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> p1 = <span class=\"keyword\">new</span> Person(<span class=\"string\">'san'</span>,<span class=\"string\">'programmer'</span>);</span><br><span class=\"line\">p1._proto_ == Person.prototype <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\">p1.name == san <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<p>虽然可以通过对象访问保存在原型中的值，却不能通过对象实例重写原型中的值，如果添加同名属性将屏蔽原型中的同名属性<br>    如果依旧要访问原型的的同名属性，只能<code>delete obj.propertyName</code>  (设置null  undefined 无效)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Person.prototype.construtor == Person <span class=\"comment\">// true</span></span><br><span class=\"line\">Person.prototype.isPrototypeOf(Person) <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\">检查一个属性是否是原型属性还是实例属性</span><br><span class=\"line\">hasOwnProperty(<span class=\"string\">'propName'</span>);</span><br><span class=\"line\">p1.hasOwnProperty(<span class=\"string\">'name'</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 遍历对象-两种方式使用in操作符( in / for in )</span></span><br><span class=\"line\"><span class=\"string\">'name'</span> <span class=\"keyword\">in</span> p1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> prop <span class=\"keyword\">in</span> p1) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(prop)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 使用for - in返回所有能通过对象访问的、 可枚举属性（ 包含实例属 获取对象上所有可枚举的实例属性， 可使用ECMAScript5 的 Object.keys() 方法 Object.keys(p) 返回一个数组（ 顺序和for - i 获取对象上所有可枚举的实例属性， 无论是否可枚举 Object.getOwePropertyNames() ps： construtor 是不可枚举的。*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 重写原型对象</span></span><br><span class=\"line\">Person.prototype = &#123;</span><br><span class=\"line\">        construtor: Person, <span class=\"comment\">// 虽说修正了 construtor 但此时的 construtor变成可枚举的，原生的construtor是不可枚举的</span></span><br><span class=\"line\">        sayName: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.name;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 修复可枚举特性</span></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(Person.prototype, <span class=\"string\">'construtor'</span>, &#123;</span><br><span class=\"line\">    enumerable: <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 原型的问题： 原型的最大问题是由其共享属性的本性导致的， 原型中的所有属性都是被实例共享， 这种共享对函数非常合适， 对包含基本数据类型的属性也说的过去， 然而对于引用问题就比较突出了 */</span></span><br><span class=\"line\"></span><br><span class=\"line\">Person.prototype.friends = [<span class=\"string\">'sam'</span>, <span class=\"string\">'shany'</span>];</span><br><span class=\"line\"><span class=\"comment\">// friends 被所有实例共享， 修改某个实例会影响其他实例</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"组合使用构造函数和原型模式\"><a href=\"#组合使用构造函数和原型模式\" class=\"headerlink\" title=\"组合使用构造函数和原型模式\"></a>组合使用构造函数和原型模式</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">person</span>(<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.friends = [<span class=\"string\">'san'</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Person.prototype.sayName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"动态原型模式\"><a href=\"#动态原型模式\" class=\"headerlink\" title=\"动态原型模式\"></a>动态原型模式</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">person</span>(<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.friends = [<span class=\"string\">'san'</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"keyword\">this</span>.sayName != <span class=\"string\">'function'</span>) &#123;</span><br><span class=\"line\">        Person.prototype.sayName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            alert(<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"寄生构造函数\"><a href=\"#寄生构造函数\" class=\"headerlink\" title=\"寄生构造函数\"></a>寄生构造函数</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name, age</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> o = <span class=\"built_in\">Object</span>();</span><br><span class=\"line\">    o.name = name;</span><br><span class=\"line\">    o.age = age;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> o;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> p = <span class=\"keyword\">new</span> Person(<span class=\"string\">'sam'</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\"><span class=\"comment\">// return 语句重写了构造函数的值</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 这个方式可在特殊情况下为对象创建构造函数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">MyArray</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> arr = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</span><br><span class=\"line\">    arr.push.apply(arr, <span class=\"built_in\">arguments</span>);</span><br><span class=\"line\">    arr.print = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.join(<span class=\"string\">'-'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"keyword\">new</span> MyArray(<span class=\"string\">'a1'</span>, <span class=\"string\">'a2'</span>);</span><br><span class=\"line\">alert(c.print());</span><br></pre></td></tr></table></figure>\n<h5 id=\"稳妥构造函数\"><a href=\"#稳妥构造函数\" class=\"headerlink\" title=\"稳妥构造函数\"></a>稳妥构造函数</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 适合在一些安全的环境中， 没有公共属性， 其方法也不应用this</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name, age</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> o = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\">    o.sayName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        alert(name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"原型继承\"><a href=\"#原型继承\" class=\"headerlink\" title=\"原型继承\"></a>原型继承</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SuperType</span>(<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SubType</span>(<span class=\"params\">name, age</span>) </span>&#123;</span><br><span class=\"line\">    SuperType.call(<span class=\"keyword\">this</span>, name)</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"组合继承\"><a href=\"#组合继承\" class=\"headerlink\" title=\"组合继承\"></a>组合继承</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 常用的继承模式（ 原型继承 父类方法无法继承过来）</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SubType</span>(<span class=\"params\">name, age</span>) </span>&#123;</span><br><span class=\"line\">    SuperType.call(<span class=\"keyword\">this</span>, name)</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">SubType.prototype = <span class=\"keyword\">new</span> SuperType();</span><br></pre></td></tr></table></figure>\n<h5 id=\"原型继承-1\"><a href=\"#原型继承-1\" class=\"headerlink\" title=\"原型继承\"></a>原型继承</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ECMAScript实现</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">object</span>(<span class=\"params\">o</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">F</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\">    F.prototype = o;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> F();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ECMAScript中 Object.create(p,&#123;</span></span><br><span class=\"line\">    skill: <span class=\"string\">'js'</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"创建对象\"><a href=\"#创建对象\" class=\"headerlink\" title=\"创建对象\"></a>创建对象</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 使用Object创建对象</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> p = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">p.name = <span class=\"string\">'jason'</span>;</span><br><span class=\"line\">p.sayName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    alert(<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//使用字面量的方式创建对象</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> p = &#123;</span><br><span class=\"line\">    name:<span class=\"string\">'jason'</span>,</span><br><span class=\"line\">    sayName：<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        alert(<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"属性类型\"><a href=\"#属性类型\" class=\"headerlink\" title=\"属性类型\"></a>属性类型</h4><p>ECMAScript中有两种属性：数据属性，访问属性。</p>\n<p>数据属性：是一个包含数据值的位置，有4个描述其行为的特性:</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>configurable</td>\n<td>表示能否通过delete删除属性而重新定义，默认true</td>\n</tr>\n<tr>\n<td>enumerable</td>\n<td>表示能否通过for-in循环返回属性，默认true</td>\n</tr>\n<tr>\n<td>writable</td>\n<td>表示能否修改属性的值，默认true</td>\n</tr>\n<tr>\n<td>value</td>\n<td>包含这个属性的属性值，默认undefined</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*修改属性的默认特性，使用Object.defineProperty(obj,propertyName,descriptor)方法</span></span><br><span class=\"line\"><span class=\"comment\">四个属性值：configurable、enumerable、writable、value</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> p = &#123;&#125;;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(p,<span class=\"string\">'name'</span>,&#123;</span><br><span class=\"line\">    writable:<span class=\"literal\">false</span>,</span><br><span class=\"line\">    enumerable:<span class=\"literal\">false</span>,</span><br><span class=\"line\">    configurable:<span class=\"literal\">false</span>,</span><br><span class=\"line\">    value:<span class=\"string\">'chen'</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">p.name = <span class=\"string\">'jason'</span>;  <span class=\"comment\">// 非严格模式下，赋值会被忽略，严格模式，赋值会报错</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*定义多个属性使用Object.definePropertys()方法 */</span></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.definePropertys(p, &#123;</span><br><span class=\"line\">  <span class=\"string\">'name'</span>, &#123;</span><br><span class=\"line\">      writable: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      enumerable: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      configurable: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      value: <span class=\"string\">'chen'</span></span><br><span class=\"line\">  &#125;, &#123;</span><br><span class=\"line\">      <span class=\"string\">'age'</span>, &#123;</span><br><span class=\"line\">          writable: <span class=\"literal\">false</span>,</span><br><span class=\"line\">          enumerable: <span class=\"literal\">false</span>,</span><br><span class=\"line\">          configurable: <span class=\"literal\">false</span>,</span><br><span class=\"line\">          value: <span class=\"string\">'18'</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n<p>访问器属性：访问器属性不包含属性值，它们包含getter,setter函数（非必须）<br>该访问属性也有4个特性:</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>configurable</td>\n<td>表示能否通过delete删除属性而重新定义，默认true</td>\n</tr>\n<tr>\n<td>enumerable</td>\n<td>表示能否通过for-in循环返回属性，默认true</td>\n</tr>\n<tr>\n<td>get</td>\n<td>读取属性调用的函数，默认undefined</td>\n</tr>\n<tr>\n<td>set</td>\n<td>设置属性调用的函数，默认undefined</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> book = &#123;</span><br><span class=\"line\">    _year:<span class=\"number\">2016</span>,  <span class=\"comment\">// 私有属性常以 '_' 开头</span></span><br><span class=\"line\">    edition:<span class=\"number\">1</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(book,<span class=\"string\">'year'</span>,&#123;</span><br><span class=\"line\">    get:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>._year;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    set:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">newValue</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>._year = newValue;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.edition +=<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">使用访问器属性的常见方式即设置一个属性值会导致其他属性发生变化</span><br><span class=\"line\"></span><br><span class=\"line\">另一种设置方式(遗弃的方法)</span><br><span class=\"line\">book.__defineGetter(<span class=\"string\">'year'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>._year;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">book.__defineSetter(<span class=\"string\">'year'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">newValue</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>._year = newValue;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 读取属性的特性 Object.getOwePropertyDescriptor() 方法会返回描述对象 */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> descriptor = <span class=\"built_in\">Object</span>.getOwePropertyDescriptor(book,<span class=\"string\">'year'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 返回 descriptor : &#123;</span></span><br><span class=\"line\"><span class=\"comment\">   value:'jason',</span></span><br><span class=\"line\"><span class=\"comment\">   configurable:false</span></span><br><span class=\"line\"><span class=\"comment\">&#125; */</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"创建对象的几种方式\"><a href=\"#创建对象的几种方式\" class=\"headerlink\" title=\"创建对象的几种方式\"></a>创建对象的几种方式</h4><h5 id=\"工厂模式\"><a href=\"#工厂模式\" class=\"headerlink\" title=\"工厂模式\"></a>工厂模式</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createGirlFried</span>(<span class=\"params\">name,job</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> o = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\">    o.name = name;</span><br><span class=\"line\">    o.job = job;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> o;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> girl1 = createGirlFried(<span class=\"string\">'shany'</span>,<span class=\"string\">'Dotor'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> girl1 = createGirlFried(<span class=\"string\">'kaer'</span>,<span class=\"string\">'Softwarn Engineer'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//没有解决对象识别的问题（对象的类型）</span></span><br></pre></td></tr></table></figure>\n<p>#####构造函数<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name,job</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.job = job;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.sayName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        alert(<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> p1 = <span class=\"keyword\">new</span> Person(<span class=\"string\">'zs'</span>,<span class=\"string\">'doctor'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> p2 = <span class=\"keyword\">new</span> Person(<span class=\"string\">'zs'</span>,<span class=\"string\">'doctor'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">alert(p1.construtor == p2.construtor)  <span class=\"comment\">// true</span></span><br><span class=\"line\">p1 <span class=\"keyword\">instanceof</span> Person  <span class=\"comment\">// true</span></span><br><span class=\"line\">p1 <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Object</span>  <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure></p>\n<p>使用 new 操作符，调用构造函数创建对象，会经历以下4步</p>\n<ol>\n<li>创建一个新对象</li>\n<li>将构造函数的作用域赋给新对象（this 指向这个新对象）</li>\n<li>执行构造函数中的代码（为这个对象添加新属性）</li>\n<li>返回新对象</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//构造函数 当函数用</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> p = Person(<span class=\"string\">'sy'</span>,<span class=\"string\">'你猜'</span>);</span><br><span class=\"line\">alert(<span class=\"built_in\">window</span>.name) <span class=\"comment\">// sy</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 构造函数的问题：不同示例上的同名函数是不相等的</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sayName</span> (<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    alert(<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name,job</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.job = job;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.sayName = sayName;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 虽然函数一样，但污染了全局变量</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"原型模式\"><a href=\"#原型模式\" class=\"headerlink\" title=\"原型模式\"></a>原型模式</h5><p>每个函数都有一个prototype属性，这是属性是一个指针，指向一个对象（即原型对象，包含共享的属性和方法）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name,job</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.job = job;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Person.prototype.sayName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    alert(<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Person.prototype.name = <span class=\"string\">'susan'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> p1 = <span class=\"keyword\">new</span> Person(<span class=\"string\">'san'</span>,<span class=\"string\">'programmer'</span>);</span><br><span class=\"line\">p1._proto_ == Person.prototype <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\">p1.name == san <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<p>虽然可以通过对象访问保存在原型中的值，却不能通过对象实例重写原型中的值，如果添加同名属性将屏蔽原型中的同名属性<br>    如果依旧要访问原型的的同名属性，只能<code>delete obj.propertyName</code>  (设置null  undefined 无效)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Person.prototype.construtor == Person <span class=\"comment\">// true</span></span><br><span class=\"line\">Person.prototype.isPrototypeOf(Person) <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\">检查一个属性是否是原型属性还是实例属性</span><br><span class=\"line\">hasOwnProperty(<span class=\"string\">'propName'</span>);</span><br><span class=\"line\">p1.hasOwnProperty(<span class=\"string\">'name'</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 遍历对象-两种方式使用in操作符( in / for in )</span></span><br><span class=\"line\"><span class=\"string\">'name'</span> <span class=\"keyword\">in</span> p1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> prop <span class=\"keyword\">in</span> p1) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(prop)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 使用for - in返回所有能通过对象访问的、 可枚举属性（ 包含实例属 获取对象上所有可枚举的实例属性， 可使用ECMAScript5 的 Object.keys() 方法 Object.keys(p) 返回一个数组（ 顺序和for - i 获取对象上所有可枚举的实例属性， 无论是否可枚举 Object.getOwePropertyNames() ps： construtor 是不可枚举的。*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 重写原型对象</span></span><br><span class=\"line\">Person.prototype = &#123;</span><br><span class=\"line\">        construtor: Person, <span class=\"comment\">// 虽说修正了 construtor 但此时的 construtor变成可枚举的，原生的construtor是不可枚举的</span></span><br><span class=\"line\">        sayName: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.name;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 修复可枚举特性</span></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(Person.prototype, <span class=\"string\">'construtor'</span>, &#123;</span><br><span class=\"line\">    enumerable: <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 原型的问题： 原型的最大问题是由其共享属性的本性导致的， 原型中的所有属性都是被实例共享， 这种共享对函数非常合适， 对包含基本数据类型的属性也说的过去， 然而对于引用问题就比较突出了 */</span></span><br><span class=\"line\"></span><br><span class=\"line\">Person.prototype.friends = [<span class=\"string\">'sam'</span>, <span class=\"string\">'shany'</span>];</span><br><span class=\"line\"><span class=\"comment\">// friends 被所有实例共享， 修改某个实例会影响其他实例</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"组合使用构造函数和原型模式\"><a href=\"#组合使用构造函数和原型模式\" class=\"headerlink\" title=\"组合使用构造函数和原型模式\"></a>组合使用构造函数和原型模式</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">person</span>(<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.friends = [<span class=\"string\">'san'</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Person.prototype.sayName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"动态原型模式\"><a href=\"#动态原型模式\" class=\"headerlink\" title=\"动态原型模式\"></a>动态原型模式</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">person</span>(<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.friends = [<span class=\"string\">'san'</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> <span class=\"keyword\">this</span>.sayName != <span class=\"string\">'function'</span>) &#123;</span><br><span class=\"line\">        Person.prototype.sayName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            alert(<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"寄生构造函数\"><a href=\"#寄生构造函数\" class=\"headerlink\" title=\"寄生构造函数\"></a>寄生构造函数</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name, age</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> o = <span class=\"built_in\">Object</span>();</span><br><span class=\"line\">    o.name = name;</span><br><span class=\"line\">    o.age = age;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> o;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> p = <span class=\"keyword\">new</span> Person(<span class=\"string\">'sam'</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\"><span class=\"comment\">// return 语句重写了构造函数的值</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 这个方式可在特殊情况下为对象创建构造函数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">MyArray</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> arr = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</span><br><span class=\"line\">    arr.push.apply(arr, <span class=\"built_in\">arguments</span>);</span><br><span class=\"line\">    arr.print = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.join(<span class=\"string\">'-'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"keyword\">new</span> MyArray(<span class=\"string\">'a1'</span>, <span class=\"string\">'a2'</span>);</span><br><span class=\"line\">alert(c.print());</span><br></pre></td></tr></table></figure>\n<h5 id=\"稳妥构造函数\"><a href=\"#稳妥构造函数\" class=\"headerlink\" title=\"稳妥构造函数\"></a>稳妥构造函数</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 适合在一些安全的环境中， 没有公共属性， 其方法也不应用this</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person</span>(<span class=\"params\">name, age</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> o = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\">    o.sayName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        alert(name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"原型继承\"><a href=\"#原型继承\" class=\"headerlink\" title=\"原型继承\"></a>原型继承</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SuperType</span>(<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SubType</span>(<span class=\"params\">name, age</span>) </span>&#123;</span><br><span class=\"line\">    SuperType.call(<span class=\"keyword\">this</span>, name)</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"组合继承\"><a href=\"#组合继承\" class=\"headerlink\" title=\"组合继承\"></a>组合继承</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 常用的继承模式（ 原型继承 父类方法无法继承过来）</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SubType</span>(<span class=\"params\">name, age</span>) </span>&#123;</span><br><span class=\"line\">    SuperType.call(<span class=\"keyword\">this</span>, name)</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">SubType.prototype = <span class=\"keyword\">new</span> SuperType();</span><br></pre></td></tr></table></figure>\n<h5 id=\"原型继承-1\"><a href=\"#原型继承-1\" class=\"headerlink\" title=\"原型继承\"></a>原型继承</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ECMAScript实现</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">object</span>(<span class=\"params\">o</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">F</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\">    F.prototype = o;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> F();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ECMAScript中 Object.create(p,&#123;</span></span><br><span class=\"line\">    skill: <span class=\"string\">'js'</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n"},{"title":"pm2的使用","date":"2018-01-31T12:52:26.000Z","_content":"\npm2是一个高级node进程管理工具，通过它不仅可以管理node应用，也可以管理Python等其他语言的应用；本文是看完官网后做的笔录，适合快速入门pm2命令行工具的使用，具体细节可参考[官网介绍](http://pm2.keymetrics.io/docs/usage/quick-start/)\n\n### pm2使用\n\n#### 快速使用\n安装\n\n```\nnpm install pm2@latest -g\n```\n\n使用\n\n```\npm2 start app.js\n```\n\n通过配置文件管理多个应用\n\n```\n# 创建 process.yml内容如下：\napps:\n  - script   : app.js\n    instances: 4\n    exec_mode: cluster\n  - script : worker.js\n    watch  : true\n    env    :\n      NODE_ENV: development\n    env_production:\n      NODE_ENV: production\n      \n      \n# 运行应用\npm2 start process.yml\n\n# 随系统启动\npm2 startup\n```\n与`pm2`相关的所有配置位于`$HOME/.pm2`下\n\n* logs 应用log\n* pids 应用pid\n* sock 套接字文件\n* conf.js 配置文件\n\n\n更新\n\n```\n# 全局安装\nnpm install pm2@latest -g\n\n# 内存更新\npm2 update\n```\n\n\n\n命令清单\n\n```\n# Fork mode\npm2 start app.js --name my-api # Name process\n\n# Cluster mode\npm2 start app.js -i 0        # Will start maximum processes with LB depending on available CPUs\npm2 start app.js -i max      # Same as above, but deprecated.\n\n# Listing\n\npm2 list\n# Or\npm2 [list|ls|l|status]\n\n# 显示进程详情\npm2 show 0\n\npm2 list               # Display all processes status\npm2 jlist              # Print process list in raw JSON\npm2 prettylist         # Print process list in beautified JSON\n\npm2 describe 0         # Display all informations about a specific process\n\npm2 monit              # Monitor all processes\n\n# Logs\n\npm2 logs [--raw]       # Display all processes logs in streaming\npm2 flush              # Empty all log files\npm2 reloadLogs         # Reload all logs\n\n# Actions\n\npm2 stop all           # Stop all processes\npm2 restart all        # Restart all processes\n\npm2 reload all         # Will 0s downtime reload (for NETWORKED apps)\n\npm2 stop 0             # Stop specific process id\npm2 restart 0          # Restart specific process id\n\n# 重启服务\npm2 restart myapp          # Restart specific process id\n\n# 根据应用名称删除\npm2 delete myapp          \npm2 delete 0           # Will remove process from pm2 list\npm2 delete all         # Will remove all processes from pm2 list\n\n# Misc\n\npm2 reset <process>    # Reset meta data (restarted time...)\npm2 updatePM2          # Update in memory pm2\npm2 ping               # Ensure pm2 daemon has been launched\npm2 sendSignal SIGUSR2 my-app # Send system signal to script\npm2 start app.js --no-daemon\npm2 start app.js --no-vizion\npm2 start app.js --no-autorestart\n\n# 给应用传递参数\npm2 start app.js -- -a 23  # Pass arguments '-a 23' argument to app.js script\npm2 start app.js --node-args=\"--debug=7001\" # --node-args to pass options to node V8\n\npm2 start app.js --log-date-format \"YYYY-MM-DD HH:mm Z\"    # Log will be prefixed with custom time format\n\n# 以json文件方式启动\npm2 start app.json                # Start processes with options declared in app.json\n\n# 指定多应用中的具体应用\npm2 reload process.json --only api  \n       \n# 自定义日志文件                                    \npm2 start app.js -e err.log -o out.log  # Start and specify error and out log\n\n# PM2 2.4.0后 可以通过正则批量操作\npm2 restart/delete/stop/reload  /http-[1,2]/\n\n```\n\n启动其他语言应用\n\n```\n# 启动其他语言的进程\npm2 start echo.php\npm2 start echo.py\npm2 start echo.sh\n\n# 映射关系 - 解释器\n{\n  \".sh\": \"bash\",\n  \".py\": \"python\",\n  \".rb\": \"ruby\",\n  \".coffee\" : \"coffee\",\n  \".php\": \"php\",\n  \".pl\" : \"perl\",\n  \".js\" : \"node\"\n}\n# 通过配置文件的方式启动，非js应用必须指定exec_mode: 'fork_mode' and exec_interpreter至对应的解释器\n{\n  \"apps\" : [{\n    \"name\"       : \"bash-worker\",\n    \"script\"     : \"./a-bash-script\",\n    \"exec_interpreter\": \"bash\",   \n    \"exec_mode\"  : \"fork_mode\"\n  }, {\n    \"name\"       : \"ruby-worker\",\n    \"script\"     : \"./some-ruby-script\",\n    \"exec_interpreter\": \"ruby\",\n    \"exec_mode\"  : \"fork_mode\"\n  }]\n}\n\n```\n\n控制应用内存大小\n\n```\n# 启动应用 显示内存大小\npm2 start big-array.js --max-memory-restart 20M\n\n# JSON\n{\n  \"name\"   : \"max_mem\",\n  \"script\" : \"big-array.js\",\n  \"max_memory_restart\" : \"20M\"\n}\n\n# 使用脚本方式控制内存大小\npm2.start({\n  name               : \"max_mem\",\n  script             : \"big-array.js\",\n  max_memory_restart : \"20M\"\n}, function(err, proc) {\n  // Processing\n});\n\n# 单位  K(ilobyte), M(egabyte), G(igabyte)\n50M\n50K\n1G\n\n```\n\n### 集群模式\n根据cpus个数生成多个应用实例，提高应用的性能及可靠性\n\n```\npm2 start app.js -i max\n# max:pm2自动检测cpus个数\n\n# 通过配置 js/yaml/json file\n{\n  \"apps\" : [{\n    \"script\"    : \"api.js\",\n    \"instances\" : \"max\",\n    \"exec_mode\" : \"cluster\"   \n  }]\n}\npm2默认不会负载均衡，需要制定 exec_mode为 cluster\n\n-i 参数项\n0/max: = CPUs\n-1 : CPUs - 1\nnumber: <= CPUS\n\n```\n\n应用平滑关闭\n\n```\nprocess.on('SIGINT', function() {\n   db.stop(function(err) {\n     process.exit(err ? 1 : 0);\n   });\n});\n```\n\n### 启动配置文件\n\n配置文件格式\n\n* javascript\n* json\n* yaml\n\n生成配置文件\n\n```\n# 生成 ecosystem.config.js\npm2 ecosystem\n\n# 生成文件不带注释\npm2 ecosystem simple\n\n```\n\nJavaScript格式\n\n```\nmodule.exports = {\n  apps : [{\n    name        : \"worker\",\n    script      : \"./worker.js\",\n    watch       : true,\n    env: {\n      \"NODE_ENV\": \"development\",\n    },\n    env_production : {\n       \"NODE_ENV\": \"production\"\n    }\n  },{\n    name       : \"api-app\",\n    script     : \"./api.js\",\n    instances  : 4,\n    exec_mode  : \"cluster\"\n  }]\n}\n```\n\njson格式\n\n```\n{\n  \"apps\" : [{\n    \"name\"        : \"worker\",\n    \"script\"      : \"./worker.js\",\n    \"watch\"       : true,\n    \"env\": {\n      \"NODE_ENV\": \"development\"\n    },\n    \"env_production\" : {\n       \"NODE_ENV\": \"production\"\n    }\n  },{\n    \"name\"       : \"api-app\",\n    \"script\"     : \"./api.js\",\n    \"instances\"  : 4,\n    \"exec_mode\"  : \"cluster\"\n  }]\n}\n```\nyaml格式\n\n```\napps:\n  - script   : ./api.js\n    name     : 'api-app'\n    instances: 4\n    exec_mode: cluster\n  - script : ./worker.js\n    name   : 'worker'\n    watch  : true\n    env    :\n      NODE_ENV: development\n    env_production:\n      NODE_ENV: production\n```\n根据配置文件管理应用\n\n```\npm2 start ecosystem.config.js\n\n# 启动配置文件中具体某个应用\npm2 start ecosystem.config.js --only worker-app\n\n# 停止配置文件中指定的所有应用\npm2 stop ecosystem.config.js\n\n# 重启所有应用\npm2 start   ecosystem.config.js\n## Or\npm2 restart ecosystem.config.js\n\n# 重新加载所有应用\npm2 reload ecosystem.config.js\n\n# 删除所有应用\npm2 delete ecosystem.config.js\n\n```\n更新环境变量信息\n\n```\n\npm2 restart ecosystem.config.js --update-env\npm2 startOrReload ecosystem.config.js --update-env\n\n# 根据参数自动注入环境变量  env_<name>\npm2 start process.json --env production\n```\n\n配置参数列表\n---\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: left\">Field</th>\n      <th style=\"text-align: center\">Type</th>\n      <th style=\"text-align: center\">Example</th>\n      <th style=\"text-align: left\">Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: left\">name</td>\n      <td style=\"text-align: center\">(string)</td>\n      <td style=\"text-align: center\">“my-api”</td>\n      <td style=\"text-align: left\">application name (default to script filename without extension)</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">script</td>\n      <td style=\"text-align: center\">(string)</td>\n      <td style=\"text-align: center\">”./api/app.js”</td>\n      <td style=\"text-align: left\">script path relative to pm2 start</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">cwd</td>\n      <td style=\"text-align: center\">(string)</td>\n      <td style=\"text-align: center\">“/var/www/”</td>\n      <td style=\"text-align: left\">the directory from which your app will be launched</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">args</td>\n      <td style=\"text-align: center\">(string)</td>\n      <td style=\"text-align: center\">“-a 13 -b 12”</td>\n      <td style=\"text-align: left\">string containing all arguments passed via CLI to script</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">interpreter</td>\n      <td style=\"text-align: center\">(string)</td>\n      <td style=\"text-align: center\">“/usr/bin/python”</td>\n      <td style=\"text-align: left\">interpreter absolute path (default to node)</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">interpreter_args</td>\n      <td style=\"text-align: center\">(string)</td>\n      <td style=\"text-align: center\">”–harmony”</td>\n      <td style=\"text-align: left\">option to pass to the interpreter</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">node_args</td>\n      <td style=\"text-align: center\">(string)</td>\n      <td style=\"text-align: center\">&nbsp;</td>\n      <td style=\"text-align: left\">alias to interpreter_args</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td style=\"text-align: left\">instances</td>\n      <td style=\"text-align: center\">number</td>\n      <td style=\"text-align: center\">-1</td>\n      <td style=\"text-align: left\">number of app instance to be launched</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">exec_mode</td>\n      <td style=\"text-align: center\">string</td>\n      <td style=\"text-align: center\">“cluster”</td>\n      <td style=\"text-align: left\">mode to start your app, can be “cluster” or “fork”, default fork</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">watch</td>\n      <td style=\"text-align: center\">boolean or []</td>\n      <td style=\"text-align: center\">true</td>\n      <td style=\"text-align: left\">enable watch &amp; restart feature, if a file change in the folder or subfolder, your app will get reloaded</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">ignore_watch</td>\n      <td style=\"text-align: center\">list</td>\n      <td style=\"text-align: center\">[”[\\/\\\\]\\./”, “node_modules”]</td>\n      <td style=\"text-align: left\">list of regex to ignore some file or folder names by the watch feature</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">max_memory_restart</td>\n      <td style=\"text-align: center\">string</td>\n      <td style=\"text-align: center\">“150M”</td>\n      <td style=\"text-align: left\">your app will be restarted if it exceeds the amount of memory specified. human-friendly format : it can be “10M”, “100K”, “2G” and so on…</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">env</td>\n      <td style=\"text-align: center\">object</td>\n      <td style=\"text-align: center\">{“NODE_ENV”: “development”, “ID”: “42”}</td>\n      <td style=\"text-align: left\">env variables which will appear in your app</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">env_<env_name></env_name></td>\n      <td style=\"text-align: center\">object</td>\n      <td style=\"text-align: center\">{“NODE_ENV”: “production”, “ID”: “89”}</td>\n      <td style=\"text-align: left\">inject <env_name> when doing pm2 restart app.yml --env <env_name></env_name></env_name></td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">source_map_support</td>\n      <td style=\"text-align: center\">boolean</td>\n      <td style=\"text-align: center\">true</td>\n      <td style=\"text-align: left\">default to true, [enable/disable source map file]</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">instance_var</td>\n      <td style=\"text-align: center\">string</td>\n      <td style=\"text-align: center\">“NODE_APP_INSTANCE”</td>\n      <td style=\"text-align: left\"><a href=\"http://pm2.keymetrics.io/docs/usage/environment/#specific-environment-variables\">see documentation</a></td>\n    </tr>\n  </tbody>\n  \n  <tbody>\n    <tr>\n      <td style=\"text-align: left\">log_date_format</td>\n      <td style=\"text-align: center\">(string)</td>\n      <td style=\"text-align: center\">“YYYY-MM-DD HH:mm Z”</td>\n      <td style=\"text-align: left\">log date format (see log section)</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">error_file</td>\n      <td style=\"text-align: center\">(string)</td>\n      <td style=\"text-align: center\">&nbsp;</td>\n      <td style=\"text-align: left\">error file path (default to $HOME/.pm2/logs/XXXerr.log)</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">out_file</td>\n      <td style=\"text-align: center\">(string)</td>\n      <td style=\"text-align: center\">&nbsp;</td>\n      <td style=\"text-align: left\">output file path (default to $HOME/.pm2/logs/XXXout.log)</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">combine_logs</td>\n      <td style=\"text-align: center\">boolean</td>\n      <td style=\"text-align: center\">true</td>\n      <td style=\"text-align: left\">if set to true, avoid to suffix logs file with the process id</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">merge_logs</td>\n      <td style=\"text-align: center\">boolean</td>\n      <td style=\"text-align: center\">true</td>\n      <td style=\"text-align: left\">alias to combine_logs</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">pid_file</td>\n      <td style=\"text-align: center\">(string)</td>\n      <td style=\"text-align: center\">&nbsp;</td>\n      <td style=\"text-align: left\">pid file path (default to $HOME/.pm2/pid/app-pm_id.pid)</td>\n    </tr>\n  </tbody>\n  \n  <tbody>\n    <tr>\n      <td style=\"text-align: left\">min_uptime</td>\n      <td style=\"text-align: center\">(string)</td>\n      <td style=\"text-align: center\">&nbsp;</td>\n      <td style=\"text-align: left\">min uptime of the app to be considered started</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">listen_timeout</td>\n      <td style=\"text-align: center\">number</td>\n      <td style=\"text-align: center\">8000</td>\n      <td style=\"text-align: left\">time in ms before forcing a reload if app not listening</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">kill_timeout</td>\n      <td style=\"text-align: center\">number</td>\n      <td style=\"text-align: center\">1600</td>\n      <td style=\"text-align: left\">time in milliseconds before sending <a href=\"http://pm2.keymetrics.io/docs/usage/signals-clean-restart/#cleaning-states-and-jobs\">a final SIGKILL</a></td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">wait_ready</td>\n      <td style=\"text-align: center\">boolean</td>\n      <td style=\"text-align: center\">false</td>\n      <td style=\"text-align: left\">Instead of reload waiting for listen event, wait for process.send(‘ready’)</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">max_restarts</td>\n      <td style=\"text-align: center\">number</td>\n      <td style=\"text-align: center\">10</td>\n      <td style=\"text-align: left\">number of consecutive unstable restarts (less than 1sec interval or custom time via min_uptime) before your app is considered errored and stop being restarted</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">restart_delay</td>\n      <td style=\"text-align: center\">number</td>\n      <td style=\"text-align: center\">4000</td>\n      <td style=\"text-align: left\">time to wait before restarting a crashed app (in milliseconds). defaults to 0.</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">autorestart</td>\n      <td style=\"text-align: center\">boolean</td>\n      <td style=\"text-align: center\">false</td>\n      <td style=\"text-align: left\">true by default. if false, PM2 will not restart your app if it crashes or ends peacefully</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">cron_restart</td>\n      <td style=\"text-align: center\">string</td>\n      <td style=\"text-align: center\">“1 0 * * *”</td>\n      <td style=\"text-align: left\">a cron pattern to restart your app. Application must be running for cron feature to work</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">vizion</td>\n      <td style=\"text-align: center\">boolean</td>\n      <td style=\"text-align: center\">false</td>\n      <td style=\"text-align: left\">true by default. if false, PM2 will start without vizion features (versioning control metadatas)</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">post_update</td>\n      <td style=\"text-align: center\">list</td>\n      <td style=\"text-align: center\">[“npm install”, “echo launching the app”]</td>\n      <td style=\"text-align: left\">a list of commands which will be executed after you perform a Pull/Upgrade operation from Keymetrics dashboard</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">force</td>\n      <td style=\"text-align: center\">boolean</td>\n      <td style=\"text-align: center\">true</td>\n      <td style=\"text-align: left\">defaults to false. if true, you can start the same script several times which is usually not allowed by PM2</td>\n    </tr>\n  </tbody>\n  \n</table>\n\n> 使用json配置文件的方式，命令行可选参数会无效,\n\n\n日志文件\n\n```\n# 不保存日志 \n设置 /dev/null to error_file or out_file  不保存日志文件.\n\n# 同一应用 日志内容放一起\n使用 merge_logs: true 禁止日志文件自动加上进程id后缀 (e.g. app-name-ID.log) \n```\n\n\n### 状态管理\n\n#### 平滑停止\n\n```\n# Graceful restart/reload/stop\nprocess.on('SIGINT', function() {\n   db.stop(function(err) {\n     process.exit(err ? 1 : 0);\n   });\n});\n\n# 延时 3000ms\npm2 start app.js --kill-timeout 3000\n\n{\n  \"apps\" : [{\n    \"name\"         : \"api\",\n    \"script\"       : \"app.js\",\n    \"kill_timeout\" : 3000\n  }]\n}\n```\n\n#### 平滑启动\n某些应用运行需要等待DB或者workers建立好链接\n\n```\n# 应用发出ready正式更新状态\npm2 start app.js --wait-ready\n\n# 应用链接处理完毕发送ready消息\nvar http = require('http');\nvar app = http.createServer(function(req, res) {\n  res.writeHead(200);\n  res.end('hey');\n})\nvar listener = app.listen(0, function() {\n  console.log('Listening on port ' + listener.address().port);\n  // Here we send the ready signal to PM2\n  process.send('ready');\n});\n\n# 默认超时时间为 3000ms\npm2 start app.js --wait-ready --listen-timeout 3000\n\n# json方式指定\n{\n  \"apps\" : [{\n    \"name\"         : \"api\",\n    \"script\"       : \"app.js\",\n    \"listen_timeout\" : 3000\n  }]\n}\n\n```\n\n### 环境变量\n\n```\n# 1.PM2 默认注入当前shell的环境变量\n# 2.PM2注入配置文件中声明的环境变量，重名则覆盖\n\nmodule.exports = {\n  apps : [\n      {\n        name: \"myapp\",\n        script: \"./app.js\",\n        watch: true,\n        env: {\n            \"PORT\": 3000,\n            \"NODE_ENV\": \"development\"\n        },\n        env_production: {\n            \"PORT\": 80,\n            \"NODE_ENV\": \"production\",\n        }\n      }\n  ]\n}\n\n# 根据运行环境，选择不同的环境变量\necosystem.config.js --env production\n\n# 默认  restarting or reloading 不会更新环境变量，如果需要更新可以使用如下方式\npm2 reload ecosystem.json --update-env\n\n# 指定实例个数的环境变量\nNODE_APP_INSTANCE \n\n# 修改环境变量的名称\ninstance_var: 'INSTANCE_ID',\n\n```\n\n\n\n### 应用日志管理\nPM2日志可以合并，也可以存放不同的日志文件中。\n\n#### 实时显示日志\n\n```\n# 查看logs命令帮助\npm2 logs -h\n\n# 显示所有应用日志\npm2 logs\n\n# 指定正则匹配的应用的日志\npm2 logs /api/\n\npm2 logs /server_[12]/\n\n# 显示应用api的日志\npm2 logs api\n\n# 显示应用api日志的 X 行\npm2 logs big-api --lines 1000\n\n# 格式化日志显示\npm2 logs --json pm2 logs --format\n\n# 应用启动指定显示方式 \npm2 start --log-type json app.json\npm2 start echo.js --merge-logs --log-date-format=\"YYYY-MM-DD HH:mm Z\"\n\n# 或者配置文件中中指定 \"log_type\": \"json\"\n\n# 清除日志 （或者使用 pm2 install pm2-logrotate ）\npm2 flush\n\n# 不记录日志信息\n{\n  \"out_file\": \"/dev/null\",\n  \"error_file\": \"/dev/null\"\n}\n\n# 指定日志类型\npm2 logs main\n```\n\n### 更新PM2\n\n```\n# 保存当前进程信息\npm2 save\n\n# 安装最新版pm2\nnpm install pm2 -g\n\n# 在内存中更新pm2\npm2 update\n```\n\n### 部署\n本地我们可以直接通过 `pm2 start/stop`管理本地应用，通过deploy命令，在本地可以很轻松的将本地的应用部署远程服务器上。\n\n```\n{\n   \"apps\" : [{\n      \"name\" : \"HTTP-API\",\n      \"script\" : \"http.js\"\n   }],\n   \"deploy\" : {\n     // \"production\" is the environment name\n     \"production\" : {\n        // 已授权的公钥路径\n        \"key\"  : \"/path/to/some.pem\",           // 用户名\n       \"user\" : \"ubuntu\",\n       // 主机\n       \"host\" : [\"212.83.163.1\", \"212.83.163.2\", \"212.83.163.3\"],\n       // 分支\n       \"ref\"  : \"origin/master\",\n       // 代码库\n       \"repo\" : \"git@github.com:Username/repository.git\",\n       // 远程服务器存放应用的路径\n       \"path\" : \"/var/www/my-repository\",\n       // ssh 配置项 可以是字符串或者数组字符串\n       \"ssh_options\": \"StrictHostKeyChecking=no\",\n       // 安装依赖，可以是命令，多个命令用分号;分割，也可以用本地脚本文件的路径\n       \"pre-setup\" : \"apt-get install git\",\n       // 代码库克隆完成执行 使用方式和 pre-setup一样\n       \"post-setup\": \"ls -la\",\n       // 本地要执行的代码\n       \"pre-deploy-local\" : \"echo 'This is a local executed command'\"\n       // 代码库克隆完成,远程执行\n       \"post-deploy\" : \"npm install; grunt dist\"\n      },\n      \"dev\" : {\n       \"user\" : \"ubuntu_dev\",\n       \"host\" : [\"192.168.0.12\"],\n       \"ref\"  : \"origin/master\",\n       \"repo\" : \"git@github.com:Username/repository.git\",\n       \"path\" : \"/var/www/my-repository\",\n       \"post-deploy\" : \"npm install; grunt dist\"\n      }\n   }\n}\n\n# 本地生成公钥\nssh-keygen -t rsa\nssh-copy-id node@myserver.com\n\n# 远程部署，初始化应用目录\npm2 deploy production setup\n\n# 更新远程版本\npm2 deploy production update\n\n# 版本回退 Revert to -1 deployment\npm2 deploy production revert 1\n\n# 远程执行命令\npm2 deploy production exec \"pm2 reload all\"\n\npm2 startOrRestart all.json  \n\n```\n\n[Docker部署](http://pm2.keymetrics.io/docs/usage/docker-pm2-nodejs/)\n\n### 将pm2设置成系统服务\n\n* systemd: Ubuntu >= 16, CentOS >= 7, Arch, Debian >= 7\n* upstart: Ubuntu <= 14\n* launchd: Darwin, MacOSx\n* openrc: Gentoo Linux, Arch Linux\n* rcd: FreeBSD\n* systemv: Centos 6, Amazon Linux\n\n```\npm2 startup\n\n# 指定具体平台,不加参数会自动检测\npm2 startup [ubuntu | ubuntu14 | ubuntu12 | centos | centos6 | arch | oracle | amazon | macos | darwin | freebsd | systemd | systemv | upstart | launchd | rcd | openrc]\n\n# disable 自动启动\npm2 unstartup\n\n# 保存当前进程列表\npm2 save\n\n# 恢复之前保存的进程列表\npm2 resurrect\n\n```\n\n检测自启服务是否设置好\n\n```\n# Check if pm2-<USER> service has been added\n$ systemctl list-units\n# Check logs\n$ journalctl -u pm2-<USER>\n# Cat systemd configuration file\n$ systemctl cat pm2-<USER>\n# Analyze startup\n$ systemd-analyze plot > output.svg\n```\n\n### 自动重启服务\n\n```\n# 当前目录或子目录文件改动自动重启服务\npm2 start app.js --watch\n\n# 不会停止检测文件改动\npm2 stop 0 \n\n# 停止检测文件改动\npm2 stop --watch 0 \n\n# 配置文件 详细配置检测文件路径\n{\n  \"watch\": [\"server\", \"client\"],\n  \"ignore_watch\" : [\"node_modules\", \"client/img\"],\n  \"watch_options\": {\n    \"followSymlinks\": false\n  }\n}\n\n# 监测cpu及memory\npm2 monit\n```\n\n### sourcemap\n当使用babeljs,typescript时，有了sourcemap，异常了可以找到具体错误信息。\n\n```\n# 命令行指定 \npm2 start app.js --source-map-support\npm2 start app.js --disable-source-map\n\n# 配置文件指定\n{\n  \"apps\" : [{\n    \"name\"              : \"my-app\",\n    \"script\"            : \"script.js\",\n    \"source_map_support\": true\n  }]\n}\n```\n\n### 静态服务\npm2 2.4.0 后可使用静态服务命令\n\n```\n# 命令行方式\npm2 serve <path> <port>\n\n# 或者配置文件\n{\n  \"script\": \"serve\",\n  \"env\": {\n    \"PM2_SERVE_PATH\": '.',\n    \"PM2_SERVE_PORT\": 8080\n  }\n}\n```\n\n### 其他\n* [进程性能指标](http://pm2.keymetrics.io/docs/usage/process-metrics/#counter-sequential-value-change)\n* [非root使用authbind绑定80端口](http://pm2.keymetrics.io/docs/usage/specifics/)\n* [pm2 api](http://pm2.keymetrics.io/docs/usage/pm2-api/)\n* [云服务使用pm2](http://pm2.keymetrics.io/docs/usage/use-pm2-with-cloud-providers/)\n* [pm2模块](http://pm2.keymetrics.io/docs/advanced/pm2-module-system/)","source":"_posts/pm2的使用.md","raw":"---\ntitle: pm2的使用\ndate: 2018-01-31 20:52:26\n\ntags:\n    - node\n    - js\n\ncategory: \n    - js\n---\n\npm2是一个高级node进程管理工具，通过它不仅可以管理node应用，也可以管理Python等其他语言的应用；本文是看完官网后做的笔录，适合快速入门pm2命令行工具的使用，具体细节可参考[官网介绍](http://pm2.keymetrics.io/docs/usage/quick-start/)\n\n### pm2使用\n\n#### 快速使用\n安装\n\n```\nnpm install pm2@latest -g\n```\n\n使用\n\n```\npm2 start app.js\n```\n\n通过配置文件管理多个应用\n\n```\n# 创建 process.yml内容如下：\napps:\n  - script   : app.js\n    instances: 4\n    exec_mode: cluster\n  - script : worker.js\n    watch  : true\n    env    :\n      NODE_ENV: development\n    env_production:\n      NODE_ENV: production\n      \n      \n# 运行应用\npm2 start process.yml\n\n# 随系统启动\npm2 startup\n```\n与`pm2`相关的所有配置位于`$HOME/.pm2`下\n\n* logs 应用log\n* pids 应用pid\n* sock 套接字文件\n* conf.js 配置文件\n\n\n更新\n\n```\n# 全局安装\nnpm install pm2@latest -g\n\n# 内存更新\npm2 update\n```\n\n\n\n命令清单\n\n```\n# Fork mode\npm2 start app.js --name my-api # Name process\n\n# Cluster mode\npm2 start app.js -i 0        # Will start maximum processes with LB depending on available CPUs\npm2 start app.js -i max      # Same as above, but deprecated.\n\n# Listing\n\npm2 list\n# Or\npm2 [list|ls|l|status]\n\n# 显示进程详情\npm2 show 0\n\npm2 list               # Display all processes status\npm2 jlist              # Print process list in raw JSON\npm2 prettylist         # Print process list in beautified JSON\n\npm2 describe 0         # Display all informations about a specific process\n\npm2 monit              # Monitor all processes\n\n# Logs\n\npm2 logs [--raw]       # Display all processes logs in streaming\npm2 flush              # Empty all log files\npm2 reloadLogs         # Reload all logs\n\n# Actions\n\npm2 stop all           # Stop all processes\npm2 restart all        # Restart all processes\n\npm2 reload all         # Will 0s downtime reload (for NETWORKED apps)\n\npm2 stop 0             # Stop specific process id\npm2 restart 0          # Restart specific process id\n\n# 重启服务\npm2 restart myapp          # Restart specific process id\n\n# 根据应用名称删除\npm2 delete myapp          \npm2 delete 0           # Will remove process from pm2 list\npm2 delete all         # Will remove all processes from pm2 list\n\n# Misc\n\npm2 reset <process>    # Reset meta data (restarted time...)\npm2 updatePM2          # Update in memory pm2\npm2 ping               # Ensure pm2 daemon has been launched\npm2 sendSignal SIGUSR2 my-app # Send system signal to script\npm2 start app.js --no-daemon\npm2 start app.js --no-vizion\npm2 start app.js --no-autorestart\n\n# 给应用传递参数\npm2 start app.js -- -a 23  # Pass arguments '-a 23' argument to app.js script\npm2 start app.js --node-args=\"--debug=7001\" # --node-args to pass options to node V8\n\npm2 start app.js --log-date-format \"YYYY-MM-DD HH:mm Z\"    # Log will be prefixed with custom time format\n\n# 以json文件方式启动\npm2 start app.json                # Start processes with options declared in app.json\n\n# 指定多应用中的具体应用\npm2 reload process.json --only api  \n       \n# 自定义日志文件                                    \npm2 start app.js -e err.log -o out.log  # Start and specify error and out log\n\n# PM2 2.4.0后 可以通过正则批量操作\npm2 restart/delete/stop/reload  /http-[1,2]/\n\n```\n\n启动其他语言应用\n\n```\n# 启动其他语言的进程\npm2 start echo.php\npm2 start echo.py\npm2 start echo.sh\n\n# 映射关系 - 解释器\n{\n  \".sh\": \"bash\",\n  \".py\": \"python\",\n  \".rb\": \"ruby\",\n  \".coffee\" : \"coffee\",\n  \".php\": \"php\",\n  \".pl\" : \"perl\",\n  \".js\" : \"node\"\n}\n# 通过配置文件的方式启动，非js应用必须指定exec_mode: 'fork_mode' and exec_interpreter至对应的解释器\n{\n  \"apps\" : [{\n    \"name\"       : \"bash-worker\",\n    \"script\"     : \"./a-bash-script\",\n    \"exec_interpreter\": \"bash\",   \n    \"exec_mode\"  : \"fork_mode\"\n  }, {\n    \"name\"       : \"ruby-worker\",\n    \"script\"     : \"./some-ruby-script\",\n    \"exec_interpreter\": \"ruby\",\n    \"exec_mode\"  : \"fork_mode\"\n  }]\n}\n\n```\n\n控制应用内存大小\n\n```\n# 启动应用 显示内存大小\npm2 start big-array.js --max-memory-restart 20M\n\n# JSON\n{\n  \"name\"   : \"max_mem\",\n  \"script\" : \"big-array.js\",\n  \"max_memory_restart\" : \"20M\"\n}\n\n# 使用脚本方式控制内存大小\npm2.start({\n  name               : \"max_mem\",\n  script             : \"big-array.js\",\n  max_memory_restart : \"20M\"\n}, function(err, proc) {\n  // Processing\n});\n\n# 单位  K(ilobyte), M(egabyte), G(igabyte)\n50M\n50K\n1G\n\n```\n\n### 集群模式\n根据cpus个数生成多个应用实例，提高应用的性能及可靠性\n\n```\npm2 start app.js -i max\n# max:pm2自动检测cpus个数\n\n# 通过配置 js/yaml/json file\n{\n  \"apps\" : [{\n    \"script\"    : \"api.js\",\n    \"instances\" : \"max\",\n    \"exec_mode\" : \"cluster\"   \n  }]\n}\npm2默认不会负载均衡，需要制定 exec_mode为 cluster\n\n-i 参数项\n0/max: = CPUs\n-1 : CPUs - 1\nnumber: <= CPUS\n\n```\n\n应用平滑关闭\n\n```\nprocess.on('SIGINT', function() {\n   db.stop(function(err) {\n     process.exit(err ? 1 : 0);\n   });\n});\n```\n\n### 启动配置文件\n\n配置文件格式\n\n* javascript\n* json\n* yaml\n\n生成配置文件\n\n```\n# 生成 ecosystem.config.js\npm2 ecosystem\n\n# 生成文件不带注释\npm2 ecosystem simple\n\n```\n\nJavaScript格式\n\n```\nmodule.exports = {\n  apps : [{\n    name        : \"worker\",\n    script      : \"./worker.js\",\n    watch       : true,\n    env: {\n      \"NODE_ENV\": \"development\",\n    },\n    env_production : {\n       \"NODE_ENV\": \"production\"\n    }\n  },{\n    name       : \"api-app\",\n    script     : \"./api.js\",\n    instances  : 4,\n    exec_mode  : \"cluster\"\n  }]\n}\n```\n\njson格式\n\n```\n{\n  \"apps\" : [{\n    \"name\"        : \"worker\",\n    \"script\"      : \"./worker.js\",\n    \"watch\"       : true,\n    \"env\": {\n      \"NODE_ENV\": \"development\"\n    },\n    \"env_production\" : {\n       \"NODE_ENV\": \"production\"\n    }\n  },{\n    \"name\"       : \"api-app\",\n    \"script\"     : \"./api.js\",\n    \"instances\"  : 4,\n    \"exec_mode\"  : \"cluster\"\n  }]\n}\n```\nyaml格式\n\n```\napps:\n  - script   : ./api.js\n    name     : 'api-app'\n    instances: 4\n    exec_mode: cluster\n  - script : ./worker.js\n    name   : 'worker'\n    watch  : true\n    env    :\n      NODE_ENV: development\n    env_production:\n      NODE_ENV: production\n```\n根据配置文件管理应用\n\n```\npm2 start ecosystem.config.js\n\n# 启动配置文件中具体某个应用\npm2 start ecosystem.config.js --only worker-app\n\n# 停止配置文件中指定的所有应用\npm2 stop ecosystem.config.js\n\n# 重启所有应用\npm2 start   ecosystem.config.js\n## Or\npm2 restart ecosystem.config.js\n\n# 重新加载所有应用\npm2 reload ecosystem.config.js\n\n# 删除所有应用\npm2 delete ecosystem.config.js\n\n```\n更新环境变量信息\n\n```\n\npm2 restart ecosystem.config.js --update-env\npm2 startOrReload ecosystem.config.js --update-env\n\n# 根据参数自动注入环境变量  env_<name>\npm2 start process.json --env production\n```\n\n配置参数列表\n---\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: left\">Field</th>\n      <th style=\"text-align: center\">Type</th>\n      <th style=\"text-align: center\">Example</th>\n      <th style=\"text-align: left\">Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: left\">name</td>\n      <td style=\"text-align: center\">(string)</td>\n      <td style=\"text-align: center\">“my-api”</td>\n      <td style=\"text-align: left\">application name (default to script filename without extension)</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">script</td>\n      <td style=\"text-align: center\">(string)</td>\n      <td style=\"text-align: center\">”./api/app.js”</td>\n      <td style=\"text-align: left\">script path relative to pm2 start</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">cwd</td>\n      <td style=\"text-align: center\">(string)</td>\n      <td style=\"text-align: center\">“/var/www/”</td>\n      <td style=\"text-align: left\">the directory from which your app will be launched</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">args</td>\n      <td style=\"text-align: center\">(string)</td>\n      <td style=\"text-align: center\">“-a 13 -b 12”</td>\n      <td style=\"text-align: left\">string containing all arguments passed via CLI to script</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">interpreter</td>\n      <td style=\"text-align: center\">(string)</td>\n      <td style=\"text-align: center\">“/usr/bin/python”</td>\n      <td style=\"text-align: left\">interpreter absolute path (default to node)</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">interpreter_args</td>\n      <td style=\"text-align: center\">(string)</td>\n      <td style=\"text-align: center\">”–harmony”</td>\n      <td style=\"text-align: left\">option to pass to the interpreter</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">node_args</td>\n      <td style=\"text-align: center\">(string)</td>\n      <td style=\"text-align: center\">&nbsp;</td>\n      <td style=\"text-align: left\">alias to interpreter_args</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td style=\"text-align: left\">instances</td>\n      <td style=\"text-align: center\">number</td>\n      <td style=\"text-align: center\">-1</td>\n      <td style=\"text-align: left\">number of app instance to be launched</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">exec_mode</td>\n      <td style=\"text-align: center\">string</td>\n      <td style=\"text-align: center\">“cluster”</td>\n      <td style=\"text-align: left\">mode to start your app, can be “cluster” or “fork”, default fork</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">watch</td>\n      <td style=\"text-align: center\">boolean or []</td>\n      <td style=\"text-align: center\">true</td>\n      <td style=\"text-align: left\">enable watch &amp; restart feature, if a file change in the folder or subfolder, your app will get reloaded</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">ignore_watch</td>\n      <td style=\"text-align: center\">list</td>\n      <td style=\"text-align: center\">[”[\\/\\\\]\\./”, “node_modules”]</td>\n      <td style=\"text-align: left\">list of regex to ignore some file or folder names by the watch feature</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">max_memory_restart</td>\n      <td style=\"text-align: center\">string</td>\n      <td style=\"text-align: center\">“150M”</td>\n      <td style=\"text-align: left\">your app will be restarted if it exceeds the amount of memory specified. human-friendly format : it can be “10M”, “100K”, “2G” and so on…</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">env</td>\n      <td style=\"text-align: center\">object</td>\n      <td style=\"text-align: center\">{“NODE_ENV”: “development”, “ID”: “42”}</td>\n      <td style=\"text-align: left\">env variables which will appear in your app</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">env_<env_name></env_name></td>\n      <td style=\"text-align: center\">object</td>\n      <td style=\"text-align: center\">{“NODE_ENV”: “production”, “ID”: “89”}</td>\n      <td style=\"text-align: left\">inject <env_name> when doing pm2 restart app.yml --env <env_name></env_name></env_name></td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">source_map_support</td>\n      <td style=\"text-align: center\">boolean</td>\n      <td style=\"text-align: center\">true</td>\n      <td style=\"text-align: left\">default to true, [enable/disable source map file]</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">instance_var</td>\n      <td style=\"text-align: center\">string</td>\n      <td style=\"text-align: center\">“NODE_APP_INSTANCE”</td>\n      <td style=\"text-align: left\"><a href=\"http://pm2.keymetrics.io/docs/usage/environment/#specific-environment-variables\">see documentation</a></td>\n    </tr>\n  </tbody>\n  \n  <tbody>\n    <tr>\n      <td style=\"text-align: left\">log_date_format</td>\n      <td style=\"text-align: center\">(string)</td>\n      <td style=\"text-align: center\">“YYYY-MM-DD HH:mm Z”</td>\n      <td style=\"text-align: left\">log date format (see log section)</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">error_file</td>\n      <td style=\"text-align: center\">(string)</td>\n      <td style=\"text-align: center\">&nbsp;</td>\n      <td style=\"text-align: left\">error file path (default to $HOME/.pm2/logs/XXXerr.log)</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">out_file</td>\n      <td style=\"text-align: center\">(string)</td>\n      <td style=\"text-align: center\">&nbsp;</td>\n      <td style=\"text-align: left\">output file path (default to $HOME/.pm2/logs/XXXout.log)</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">combine_logs</td>\n      <td style=\"text-align: center\">boolean</td>\n      <td style=\"text-align: center\">true</td>\n      <td style=\"text-align: left\">if set to true, avoid to suffix logs file with the process id</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">merge_logs</td>\n      <td style=\"text-align: center\">boolean</td>\n      <td style=\"text-align: center\">true</td>\n      <td style=\"text-align: left\">alias to combine_logs</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">pid_file</td>\n      <td style=\"text-align: center\">(string)</td>\n      <td style=\"text-align: center\">&nbsp;</td>\n      <td style=\"text-align: left\">pid file path (default to $HOME/.pm2/pid/app-pm_id.pid)</td>\n    </tr>\n  </tbody>\n  \n  <tbody>\n    <tr>\n      <td style=\"text-align: left\">min_uptime</td>\n      <td style=\"text-align: center\">(string)</td>\n      <td style=\"text-align: center\">&nbsp;</td>\n      <td style=\"text-align: left\">min uptime of the app to be considered started</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">listen_timeout</td>\n      <td style=\"text-align: center\">number</td>\n      <td style=\"text-align: center\">8000</td>\n      <td style=\"text-align: left\">time in ms before forcing a reload if app not listening</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">kill_timeout</td>\n      <td style=\"text-align: center\">number</td>\n      <td style=\"text-align: center\">1600</td>\n      <td style=\"text-align: left\">time in milliseconds before sending <a href=\"http://pm2.keymetrics.io/docs/usage/signals-clean-restart/#cleaning-states-and-jobs\">a final SIGKILL</a></td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">wait_ready</td>\n      <td style=\"text-align: center\">boolean</td>\n      <td style=\"text-align: center\">false</td>\n      <td style=\"text-align: left\">Instead of reload waiting for listen event, wait for process.send(‘ready’)</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">max_restarts</td>\n      <td style=\"text-align: center\">number</td>\n      <td style=\"text-align: center\">10</td>\n      <td style=\"text-align: left\">number of consecutive unstable restarts (less than 1sec interval or custom time via min_uptime) before your app is considered errored and stop being restarted</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">restart_delay</td>\n      <td style=\"text-align: center\">number</td>\n      <td style=\"text-align: center\">4000</td>\n      <td style=\"text-align: left\">time to wait before restarting a crashed app (in milliseconds). defaults to 0.</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">autorestart</td>\n      <td style=\"text-align: center\">boolean</td>\n      <td style=\"text-align: center\">false</td>\n      <td style=\"text-align: left\">true by default. if false, PM2 will not restart your app if it crashes or ends peacefully</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">cron_restart</td>\n      <td style=\"text-align: center\">string</td>\n      <td style=\"text-align: center\">“1 0 * * *”</td>\n      <td style=\"text-align: left\">a cron pattern to restart your app. Application must be running for cron feature to work</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">vizion</td>\n      <td style=\"text-align: center\">boolean</td>\n      <td style=\"text-align: center\">false</td>\n      <td style=\"text-align: left\">true by default. if false, PM2 will start without vizion features (versioning control metadatas)</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">post_update</td>\n      <td style=\"text-align: center\">list</td>\n      <td style=\"text-align: center\">[“npm install”, “echo launching the app”]</td>\n      <td style=\"text-align: left\">a list of commands which will be executed after you perform a Pull/Upgrade operation from Keymetrics dashboard</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: left\">force</td>\n      <td style=\"text-align: center\">boolean</td>\n      <td style=\"text-align: center\">true</td>\n      <td style=\"text-align: left\">defaults to false. if true, you can start the same script several times which is usually not allowed by PM2</td>\n    </tr>\n  </tbody>\n  \n</table>\n\n> 使用json配置文件的方式，命令行可选参数会无效,\n\n\n日志文件\n\n```\n# 不保存日志 \n设置 /dev/null to error_file or out_file  不保存日志文件.\n\n# 同一应用 日志内容放一起\n使用 merge_logs: true 禁止日志文件自动加上进程id后缀 (e.g. app-name-ID.log) \n```\n\n\n### 状态管理\n\n#### 平滑停止\n\n```\n# Graceful restart/reload/stop\nprocess.on('SIGINT', function() {\n   db.stop(function(err) {\n     process.exit(err ? 1 : 0);\n   });\n});\n\n# 延时 3000ms\npm2 start app.js --kill-timeout 3000\n\n{\n  \"apps\" : [{\n    \"name\"         : \"api\",\n    \"script\"       : \"app.js\",\n    \"kill_timeout\" : 3000\n  }]\n}\n```\n\n#### 平滑启动\n某些应用运行需要等待DB或者workers建立好链接\n\n```\n# 应用发出ready正式更新状态\npm2 start app.js --wait-ready\n\n# 应用链接处理完毕发送ready消息\nvar http = require('http');\nvar app = http.createServer(function(req, res) {\n  res.writeHead(200);\n  res.end('hey');\n})\nvar listener = app.listen(0, function() {\n  console.log('Listening on port ' + listener.address().port);\n  // Here we send the ready signal to PM2\n  process.send('ready');\n});\n\n# 默认超时时间为 3000ms\npm2 start app.js --wait-ready --listen-timeout 3000\n\n# json方式指定\n{\n  \"apps\" : [{\n    \"name\"         : \"api\",\n    \"script\"       : \"app.js\",\n    \"listen_timeout\" : 3000\n  }]\n}\n\n```\n\n### 环境变量\n\n```\n# 1.PM2 默认注入当前shell的环境变量\n# 2.PM2注入配置文件中声明的环境变量，重名则覆盖\n\nmodule.exports = {\n  apps : [\n      {\n        name: \"myapp\",\n        script: \"./app.js\",\n        watch: true,\n        env: {\n            \"PORT\": 3000,\n            \"NODE_ENV\": \"development\"\n        },\n        env_production: {\n            \"PORT\": 80,\n            \"NODE_ENV\": \"production\",\n        }\n      }\n  ]\n}\n\n# 根据运行环境，选择不同的环境变量\necosystem.config.js --env production\n\n# 默认  restarting or reloading 不会更新环境变量，如果需要更新可以使用如下方式\npm2 reload ecosystem.json --update-env\n\n# 指定实例个数的环境变量\nNODE_APP_INSTANCE \n\n# 修改环境变量的名称\ninstance_var: 'INSTANCE_ID',\n\n```\n\n\n\n### 应用日志管理\nPM2日志可以合并，也可以存放不同的日志文件中。\n\n#### 实时显示日志\n\n```\n# 查看logs命令帮助\npm2 logs -h\n\n# 显示所有应用日志\npm2 logs\n\n# 指定正则匹配的应用的日志\npm2 logs /api/\n\npm2 logs /server_[12]/\n\n# 显示应用api的日志\npm2 logs api\n\n# 显示应用api日志的 X 行\npm2 logs big-api --lines 1000\n\n# 格式化日志显示\npm2 logs --json pm2 logs --format\n\n# 应用启动指定显示方式 \npm2 start --log-type json app.json\npm2 start echo.js --merge-logs --log-date-format=\"YYYY-MM-DD HH:mm Z\"\n\n# 或者配置文件中中指定 \"log_type\": \"json\"\n\n# 清除日志 （或者使用 pm2 install pm2-logrotate ）\npm2 flush\n\n# 不记录日志信息\n{\n  \"out_file\": \"/dev/null\",\n  \"error_file\": \"/dev/null\"\n}\n\n# 指定日志类型\npm2 logs main\n```\n\n### 更新PM2\n\n```\n# 保存当前进程信息\npm2 save\n\n# 安装最新版pm2\nnpm install pm2 -g\n\n# 在内存中更新pm2\npm2 update\n```\n\n### 部署\n本地我们可以直接通过 `pm2 start/stop`管理本地应用，通过deploy命令，在本地可以很轻松的将本地的应用部署远程服务器上。\n\n```\n{\n   \"apps\" : [{\n      \"name\" : \"HTTP-API\",\n      \"script\" : \"http.js\"\n   }],\n   \"deploy\" : {\n     // \"production\" is the environment name\n     \"production\" : {\n        // 已授权的公钥路径\n        \"key\"  : \"/path/to/some.pem\",           // 用户名\n       \"user\" : \"ubuntu\",\n       // 主机\n       \"host\" : [\"212.83.163.1\", \"212.83.163.2\", \"212.83.163.3\"],\n       // 分支\n       \"ref\"  : \"origin/master\",\n       // 代码库\n       \"repo\" : \"git@github.com:Username/repository.git\",\n       // 远程服务器存放应用的路径\n       \"path\" : \"/var/www/my-repository\",\n       // ssh 配置项 可以是字符串或者数组字符串\n       \"ssh_options\": \"StrictHostKeyChecking=no\",\n       // 安装依赖，可以是命令，多个命令用分号;分割，也可以用本地脚本文件的路径\n       \"pre-setup\" : \"apt-get install git\",\n       // 代码库克隆完成执行 使用方式和 pre-setup一样\n       \"post-setup\": \"ls -la\",\n       // 本地要执行的代码\n       \"pre-deploy-local\" : \"echo 'This is a local executed command'\"\n       // 代码库克隆完成,远程执行\n       \"post-deploy\" : \"npm install; grunt dist\"\n      },\n      \"dev\" : {\n       \"user\" : \"ubuntu_dev\",\n       \"host\" : [\"192.168.0.12\"],\n       \"ref\"  : \"origin/master\",\n       \"repo\" : \"git@github.com:Username/repository.git\",\n       \"path\" : \"/var/www/my-repository\",\n       \"post-deploy\" : \"npm install; grunt dist\"\n      }\n   }\n}\n\n# 本地生成公钥\nssh-keygen -t rsa\nssh-copy-id node@myserver.com\n\n# 远程部署，初始化应用目录\npm2 deploy production setup\n\n# 更新远程版本\npm2 deploy production update\n\n# 版本回退 Revert to -1 deployment\npm2 deploy production revert 1\n\n# 远程执行命令\npm2 deploy production exec \"pm2 reload all\"\n\npm2 startOrRestart all.json  \n\n```\n\n[Docker部署](http://pm2.keymetrics.io/docs/usage/docker-pm2-nodejs/)\n\n### 将pm2设置成系统服务\n\n* systemd: Ubuntu >= 16, CentOS >= 7, Arch, Debian >= 7\n* upstart: Ubuntu <= 14\n* launchd: Darwin, MacOSx\n* openrc: Gentoo Linux, Arch Linux\n* rcd: FreeBSD\n* systemv: Centos 6, Amazon Linux\n\n```\npm2 startup\n\n# 指定具体平台,不加参数会自动检测\npm2 startup [ubuntu | ubuntu14 | ubuntu12 | centos | centos6 | arch | oracle | amazon | macos | darwin | freebsd | systemd | systemv | upstart | launchd | rcd | openrc]\n\n# disable 自动启动\npm2 unstartup\n\n# 保存当前进程列表\npm2 save\n\n# 恢复之前保存的进程列表\npm2 resurrect\n\n```\n\n检测自启服务是否设置好\n\n```\n# Check if pm2-<USER> service has been added\n$ systemctl list-units\n# Check logs\n$ journalctl -u pm2-<USER>\n# Cat systemd configuration file\n$ systemctl cat pm2-<USER>\n# Analyze startup\n$ systemd-analyze plot > output.svg\n```\n\n### 自动重启服务\n\n```\n# 当前目录或子目录文件改动自动重启服务\npm2 start app.js --watch\n\n# 不会停止检测文件改动\npm2 stop 0 \n\n# 停止检测文件改动\npm2 stop --watch 0 \n\n# 配置文件 详细配置检测文件路径\n{\n  \"watch\": [\"server\", \"client\"],\n  \"ignore_watch\" : [\"node_modules\", \"client/img\"],\n  \"watch_options\": {\n    \"followSymlinks\": false\n  }\n}\n\n# 监测cpu及memory\npm2 monit\n```\n\n### sourcemap\n当使用babeljs,typescript时，有了sourcemap，异常了可以找到具体错误信息。\n\n```\n# 命令行指定 \npm2 start app.js --source-map-support\npm2 start app.js --disable-source-map\n\n# 配置文件指定\n{\n  \"apps\" : [{\n    \"name\"              : \"my-app\",\n    \"script\"            : \"script.js\",\n    \"source_map_support\": true\n  }]\n}\n```\n\n### 静态服务\npm2 2.4.0 后可使用静态服务命令\n\n```\n# 命令行方式\npm2 serve <path> <port>\n\n# 或者配置文件\n{\n  \"script\": \"serve\",\n  \"env\": {\n    \"PM2_SERVE_PATH\": '.',\n    \"PM2_SERVE_PORT\": 8080\n  }\n}\n```\n\n### 其他\n* [进程性能指标](http://pm2.keymetrics.io/docs/usage/process-metrics/#counter-sequential-value-change)\n* [非root使用authbind绑定80端口](http://pm2.keymetrics.io/docs/usage/specifics/)\n* [pm2 api](http://pm2.keymetrics.io/docs/usage/pm2-api/)\n* [云服务使用pm2](http://pm2.keymetrics.io/docs/usage/use-pm2-with-cloud-providers/)\n* [pm2模块](http://pm2.keymetrics.io/docs/advanced/pm2-module-system/)","slug":"pm2的使用","published":1,"updated":"2018-01-31T13:03:35.227Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjd332e4q000qc2mjtfd7oqe2","content":"<p>pm2是一个高级node进程管理工具，通过它不仅可以管理node应用，也可以管理Python等其他语言的应用；本文是看完官网后做的笔录，适合快速入门pm2命令行工具的使用，具体细节可参考<a href=\"http://pm2.keymetrics.io/docs/usage/quick-start/\" target=\"_blank\" rel=\"noopener\">官网介绍</a></p>\n<h3 id=\"pm2使用\"><a href=\"#pm2使用\" class=\"headerlink\" title=\"pm2使用\"></a>pm2使用</h3><h4 id=\"快速使用\"><a href=\"#快速使用\" class=\"headerlink\" title=\"快速使用\"></a>快速使用</h4><p>安装</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install pm2@latest -g</span><br></pre></td></tr></table></figure>\n<p>使用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pm2 start app.js</span><br></pre></td></tr></table></figure>\n<p>通过配置文件管理多个应用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 创建 process.yml内容如下：</span><br><span class=\"line\">apps:</span><br><span class=\"line\">  - script   : app.js</span><br><span class=\"line\">    instances: 4</span><br><span class=\"line\">    exec_mode: cluster</span><br><span class=\"line\">  - script : worker.js</span><br><span class=\"line\">    watch  : true</span><br><span class=\"line\">    env    :</span><br><span class=\"line\">      NODE_ENV: development</span><br><span class=\"line\">    env_production:</span><br><span class=\"line\">      NODE_ENV: production</span><br><span class=\"line\">      </span><br><span class=\"line\">      </span><br><span class=\"line\"># 运行应用</span><br><span class=\"line\">pm2 start process.yml</span><br><span class=\"line\"></span><br><span class=\"line\"># 随系统启动</span><br><span class=\"line\">pm2 startup</span><br></pre></td></tr></table></figure>\n<p>与<code>pm2</code>相关的所有配置位于<code>$HOME/.pm2</code>下</p>\n<ul>\n<li>logs 应用log</li>\n<li>pids 应用pid</li>\n<li>sock 套接字文件</li>\n<li>conf.js 配置文件</li>\n</ul>\n<p>更新</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 全局安装</span><br><span class=\"line\">npm install pm2@latest -g</span><br><span class=\"line\"></span><br><span class=\"line\"># 内存更新</span><br><span class=\"line\">pm2 update</span><br></pre></td></tr></table></figure>\n<p>命令清单</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Fork mode</span><br><span class=\"line\">pm2 start app.js --name my-api # Name process</span><br><span class=\"line\"></span><br><span class=\"line\"># Cluster mode</span><br><span class=\"line\">pm2 start app.js -i 0        # Will start maximum processes with LB depending on available CPUs</span><br><span class=\"line\">pm2 start app.js -i max      # Same as above, but deprecated.</span><br><span class=\"line\"></span><br><span class=\"line\"># Listing</span><br><span class=\"line\"></span><br><span class=\"line\">pm2 list</span><br><span class=\"line\"># Or</span><br><span class=\"line\">pm2 [list|ls|l|status]</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示进程详情</span><br><span class=\"line\">pm2 show 0</span><br><span class=\"line\"></span><br><span class=\"line\">pm2 list               # Display all processes status</span><br><span class=\"line\">pm2 jlist              # Print process list in raw JSON</span><br><span class=\"line\">pm2 prettylist         # Print process list in beautified JSON</span><br><span class=\"line\"></span><br><span class=\"line\">pm2 describe 0         # Display all informations about a specific process</span><br><span class=\"line\"></span><br><span class=\"line\">pm2 monit              # Monitor all processes</span><br><span class=\"line\"></span><br><span class=\"line\"># Logs</span><br><span class=\"line\"></span><br><span class=\"line\">pm2 logs [--raw]       # Display all processes logs in streaming</span><br><span class=\"line\">pm2 flush              # Empty all log files</span><br><span class=\"line\">pm2 reloadLogs         # Reload all logs</span><br><span class=\"line\"></span><br><span class=\"line\"># Actions</span><br><span class=\"line\"></span><br><span class=\"line\">pm2 stop all           # Stop all processes</span><br><span class=\"line\">pm2 restart all        # Restart all processes</span><br><span class=\"line\"></span><br><span class=\"line\">pm2 reload all         # Will 0s downtime reload (for NETWORKED apps)</span><br><span class=\"line\"></span><br><span class=\"line\">pm2 stop 0             # Stop specific process id</span><br><span class=\"line\">pm2 restart 0          # Restart specific process id</span><br><span class=\"line\"></span><br><span class=\"line\"># 重启服务</span><br><span class=\"line\">pm2 restart myapp          # Restart specific process id</span><br><span class=\"line\"></span><br><span class=\"line\"># 根据应用名称删除</span><br><span class=\"line\">pm2 delete myapp          </span><br><span class=\"line\">pm2 delete 0           # Will remove process from pm2 list</span><br><span class=\"line\">pm2 delete all         # Will remove all processes from pm2 list</span><br><span class=\"line\"></span><br><span class=\"line\"># Misc</span><br><span class=\"line\"></span><br><span class=\"line\">pm2 reset &lt;process&gt;    # Reset meta data (restarted time...)</span><br><span class=\"line\">pm2 updatePM2          # Update in memory pm2</span><br><span class=\"line\">pm2 ping               # Ensure pm2 daemon has been launched</span><br><span class=\"line\">pm2 sendSignal SIGUSR2 my-app # Send system signal to script</span><br><span class=\"line\">pm2 start app.js --no-daemon</span><br><span class=\"line\">pm2 start app.js --no-vizion</span><br><span class=\"line\">pm2 start app.js --no-autorestart</span><br><span class=\"line\"></span><br><span class=\"line\"># 给应用传递参数</span><br><span class=\"line\">pm2 start app.js -- -a 23  # Pass arguments &apos;-a 23&apos; argument to app.js script</span><br><span class=\"line\">pm2 start app.js --node-args=&quot;--debug=7001&quot; # --node-args to pass options to node V8</span><br><span class=\"line\"></span><br><span class=\"line\">pm2 start app.js --log-date-format &quot;YYYY-MM-DD HH:mm Z&quot;    # Log will be prefixed with custom time format</span><br><span class=\"line\"></span><br><span class=\"line\"># 以json文件方式启动</span><br><span class=\"line\">pm2 start app.json                # Start processes with options declared in app.json</span><br><span class=\"line\"></span><br><span class=\"line\"># 指定多应用中的具体应用</span><br><span class=\"line\">pm2 reload process.json --only api  </span><br><span class=\"line\">       </span><br><span class=\"line\"># 自定义日志文件                                    </span><br><span class=\"line\">pm2 start app.js -e err.log -o out.log  # Start and specify error and out log</span><br><span class=\"line\"></span><br><span class=\"line\"># PM2 2.4.0后 可以通过正则批量操作</span><br><span class=\"line\">pm2 restart/delete/stop/reload  /http-[1,2]/</span><br></pre></td></tr></table></figure>\n<p>启动其他语言应用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 启动其他语言的进程</span><br><span class=\"line\">pm2 start echo.php</span><br><span class=\"line\">pm2 start echo.py</span><br><span class=\"line\">pm2 start echo.sh</span><br><span class=\"line\"></span><br><span class=\"line\"># 映射关系 - 解释器</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;.sh&quot;: &quot;bash&quot;,</span><br><span class=\"line\">  &quot;.py&quot;: &quot;python&quot;,</span><br><span class=\"line\">  &quot;.rb&quot;: &quot;ruby&quot;,</span><br><span class=\"line\">  &quot;.coffee&quot; : &quot;coffee&quot;,</span><br><span class=\"line\">  &quot;.php&quot;: &quot;php&quot;,</span><br><span class=\"line\">  &quot;.pl&quot; : &quot;perl&quot;,</span><br><span class=\"line\">  &quot;.js&quot; : &quot;node&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"># 通过配置文件的方式启动，非js应用必须指定exec_mode: &apos;fork_mode&apos; and exec_interpreter至对应的解释器</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;apps&quot; : [&#123;</span><br><span class=\"line\">    &quot;name&quot;       : &quot;bash-worker&quot;,</span><br><span class=\"line\">    &quot;script&quot;     : &quot;./a-bash-script&quot;,</span><br><span class=\"line\">    &quot;exec_interpreter&quot;: &quot;bash&quot;,   </span><br><span class=\"line\">    &quot;exec_mode&quot;  : &quot;fork_mode&quot;</span><br><span class=\"line\">  &#125;, &#123;</span><br><span class=\"line\">    &quot;name&quot;       : &quot;ruby-worker&quot;,</span><br><span class=\"line\">    &quot;script&quot;     : &quot;./some-ruby-script&quot;,</span><br><span class=\"line\">    &quot;exec_interpreter&quot;: &quot;ruby&quot;,</span><br><span class=\"line\">    &quot;exec_mode&quot;  : &quot;fork_mode&quot;</span><br><span class=\"line\">  &#125;]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>控制应用内存大小</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 启动应用 显示内存大小</span><br><span class=\"line\">pm2 start big-array.js --max-memory-restart 20M</span><br><span class=\"line\"></span><br><span class=\"line\"># JSON</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;name&quot;   : &quot;max_mem&quot;,</span><br><span class=\"line\">  &quot;script&quot; : &quot;big-array.js&quot;,</span><br><span class=\"line\">  &quot;max_memory_restart&quot; : &quot;20M&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># 使用脚本方式控制内存大小</span><br><span class=\"line\">pm2.start(&#123;</span><br><span class=\"line\">  name               : &quot;max_mem&quot;,</span><br><span class=\"line\">  script             : &quot;big-array.js&quot;,</span><br><span class=\"line\">  max_memory_restart : &quot;20M&quot;</span><br><span class=\"line\">&#125;, function(err, proc) &#123;</span><br><span class=\"line\">  // Processing</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"># 单位  K(ilobyte), M(egabyte), G(igabyte)</span><br><span class=\"line\">50M</span><br><span class=\"line\">50K</span><br><span class=\"line\">1G</span><br></pre></td></tr></table></figure>\n<h3 id=\"集群模式\"><a href=\"#集群模式\" class=\"headerlink\" title=\"集群模式\"></a>集群模式</h3><p>根据cpus个数生成多个应用实例，提高应用的性能及可靠性</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pm2 start app.js -i max</span><br><span class=\"line\"># max:pm2自动检测cpus个数</span><br><span class=\"line\"></span><br><span class=\"line\"># 通过配置 js/yaml/json file</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;apps&quot; : [&#123;</span><br><span class=\"line\">    &quot;script&quot;    : &quot;api.js&quot;,</span><br><span class=\"line\">    &quot;instances&quot; : &quot;max&quot;,</span><br><span class=\"line\">    &quot;exec_mode&quot; : &quot;cluster&quot;   </span><br><span class=\"line\">  &#125;]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">pm2默认不会负载均衡，需要制定 exec_mode为 cluster</span><br><span class=\"line\"></span><br><span class=\"line\">-i 参数项</span><br><span class=\"line\">0/max: = CPUs</span><br><span class=\"line\">-1 : CPUs - 1</span><br><span class=\"line\">number: &lt;= CPUS</span><br></pre></td></tr></table></figure>\n<p>应用平滑关闭</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">process.on(&apos;SIGINT&apos;, function() &#123;</span><br><span class=\"line\">   db.stop(function(err) &#123;</span><br><span class=\"line\">     process.exit(err ? 1 : 0);</span><br><span class=\"line\">   &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"启动配置文件\"><a href=\"#启动配置文件\" class=\"headerlink\" title=\"启动配置文件\"></a>启动配置文件</h3><p>配置文件格式</p>\n<ul>\n<li>javascript</li>\n<li>json</li>\n<li>yaml</li>\n</ul>\n<p>生成配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 生成 ecosystem.config.js</span><br><span class=\"line\">pm2 ecosystem</span><br><span class=\"line\"></span><br><span class=\"line\"># 生成文件不带注释</span><br><span class=\"line\">pm2 ecosystem simple</span><br></pre></td></tr></table></figure>\n<p>JavaScript格式</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">  apps : [&#123;</span><br><span class=\"line\">    name        : &quot;worker&quot;,</span><br><span class=\"line\">    script      : &quot;./worker.js&quot;,</span><br><span class=\"line\">    watch       : true,</span><br><span class=\"line\">    env: &#123;</span><br><span class=\"line\">      &quot;NODE_ENV&quot;: &quot;development&quot;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    env_production : &#123;</span><br><span class=\"line\">       &quot;NODE_ENV&quot;: &quot;production&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,&#123;</span><br><span class=\"line\">    name       : &quot;api-app&quot;,</span><br><span class=\"line\">    script     : &quot;./api.js&quot;,</span><br><span class=\"line\">    instances  : 4,</span><br><span class=\"line\">    exec_mode  : &quot;cluster&quot;</span><br><span class=\"line\">  &#125;]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>json格式</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;apps&quot; : [&#123;</span><br><span class=\"line\">    &quot;name&quot;        : &quot;worker&quot;,</span><br><span class=\"line\">    &quot;script&quot;      : &quot;./worker.js&quot;,</span><br><span class=\"line\">    &quot;watch&quot;       : true,</span><br><span class=\"line\">    &quot;env&quot;: &#123;</span><br><span class=\"line\">      &quot;NODE_ENV&quot;: &quot;development&quot;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &quot;env_production&quot; : &#123;</span><br><span class=\"line\">       &quot;NODE_ENV&quot;: &quot;production&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,&#123;</span><br><span class=\"line\">    &quot;name&quot;       : &quot;api-app&quot;,</span><br><span class=\"line\">    &quot;script&quot;     : &quot;./api.js&quot;,</span><br><span class=\"line\">    &quot;instances&quot;  : 4,</span><br><span class=\"line\">    &quot;exec_mode&quot;  : &quot;cluster&quot;</span><br><span class=\"line\">  &#125;]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>yaml格式</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apps:</span><br><span class=\"line\">  - script   : ./api.js</span><br><span class=\"line\">    name     : &apos;api-app&apos;</span><br><span class=\"line\">    instances: 4</span><br><span class=\"line\">    exec_mode: cluster</span><br><span class=\"line\">  - script : ./worker.js</span><br><span class=\"line\">    name   : &apos;worker&apos;</span><br><span class=\"line\">    watch  : true</span><br><span class=\"line\">    env    :</span><br><span class=\"line\">      NODE_ENV: development</span><br><span class=\"line\">    env_production:</span><br><span class=\"line\">      NODE_ENV: production</span><br></pre></td></tr></table></figure>\n<p>根据配置文件管理应用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pm2 start ecosystem.config.js</span><br><span class=\"line\"></span><br><span class=\"line\"># 启动配置文件中具体某个应用</span><br><span class=\"line\">pm2 start ecosystem.config.js --only worker-app</span><br><span class=\"line\"></span><br><span class=\"line\"># 停止配置文件中指定的所有应用</span><br><span class=\"line\">pm2 stop ecosystem.config.js</span><br><span class=\"line\"></span><br><span class=\"line\"># 重启所有应用</span><br><span class=\"line\">pm2 start   ecosystem.config.js</span><br><span class=\"line\">## Or</span><br><span class=\"line\">pm2 restart ecosystem.config.js</span><br><span class=\"line\"></span><br><span class=\"line\"># 重新加载所有应用</span><br><span class=\"line\">pm2 reload ecosystem.config.js</span><br><span class=\"line\"></span><br><span class=\"line\"># 删除所有应用</span><br><span class=\"line\">pm2 delete ecosystem.config.js</span><br></pre></td></tr></table></figure>\n<p>更新环境变量信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">pm2 restart ecosystem.config.js --update-env</span><br><span class=\"line\">pm2 startOrReload ecosystem.config.js --update-env</span><br><span class=\"line\"></span><br><span class=\"line\"># 根据参数自动注入环境变量  env_&lt;name&gt;</span><br><span class=\"line\">pm2 start process.json --env production</span><br></pre></td></tr></table></figure>\n<h2 id=\"配置参数列表\"><a href=\"#配置参数列表\" class=\"headerlink\" title=\"配置参数列表\"></a>配置参数列表</h2><table><br>  <thead><br>    <tr><br>      <th style=\"text-align: left\">Field</th><br>      <th style=\"text-align: center\">Type</th><br>      <th style=\"text-align: center\">Example</th><br>      <th style=\"text-align: left\">Description</th><br>    </tr><br>  </thead><br>  <tbody><br>    <tr><br>      <td style=\"text-align: left\">name</td><br>      <td style=\"text-align: center\">(string)</td><br>      <td style=\"text-align: center\">“my-api”</td><br>      <td style=\"text-align: left\">application name (default to script filename without extension)</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">script</td><br>      <td style=\"text-align: center\">(string)</td><br>      <td style=\"text-align: center\">”./api/app.js”</td><br>      <td style=\"text-align: left\">script path relative to pm2 start</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">cwd</td><br>      <td style=\"text-align: center\">(string)</td><br>      <td style=\"text-align: center\">“/var/www/”</td><br>      <td style=\"text-align: left\">the directory from which your app will be launched</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">args</td><br>      <td style=\"text-align: center\">(string)</td><br>      <td style=\"text-align: center\">“-a 13 -b 12”</td><br>      <td style=\"text-align: left\">string containing all arguments passed via CLI to script</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">interpreter</td><br>      <td style=\"text-align: center\">(string)</td><br>      <td style=\"text-align: center\">“/usr/bin/python”</td><br>      <td style=\"text-align: left\">interpreter absolute path (default to node)</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">interpreter_args</td><br>      <td style=\"text-align: center\">(string)</td><br>      <td style=\"text-align: center\">”–harmony”</td><br>      <td style=\"text-align: left\">option to pass to the interpreter</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">node_args</td><br>      <td style=\"text-align: center\">(string)</td><br>      <td style=\"text-align: center\">&nbsp;</td><br>      <td style=\"text-align: left\">alias to interpreter_args</td><br>    </tr><br>  </tbody><br>  <tbody><br>    <tr><br>      <td style=\"text-align: left\">instances</td><br>      <td style=\"text-align: center\">number</td><br>      <td style=\"text-align: center\">-1</td><br>      <td style=\"text-align: left\">number of app instance to be launched</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">exec_mode</td><br>      <td style=\"text-align: center\">string</td><br>      <td style=\"text-align: center\">“cluster”</td><br>      <td style=\"text-align: left\">mode to start your app, can be “cluster” or “fork”, default fork</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">watch</td><br>      <td style=\"text-align: center\">boolean or []</td><br>      <td style=\"text-align: center\">true</td><br>      <td style=\"text-align: left\">enable watch &amp; restart feature, if a file change in the folder or subfolder, your app will get reloaded</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">ignore_watch</td><br>      <td style=\"text-align: center\">list</td><br>      <td style=\"text-align: center\">[”[\\/\\]./”, “node_modules”]</td><br>      <td style=\"text-align: left\">list of regex to ignore some file or folder names by the watch feature</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">max_memory_restart</td><br>      <td style=\"text-align: center\">string</td><br>      <td style=\"text-align: center\">“150M”</td><br>      <td style=\"text-align: left\">your app will be restarted if it exceeds the amount of memory specified. human-friendly format : it can be “10M”, “100K”, “2G” and so on…</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">env</td><br>      <td style=\"text-align: center\">object</td><br>      <td style=\"text-align: center\">{“NODE<em>ENV”: “development”, “ID”: “42”}</em></td><br>      <td style=\"text-align: left\">env variables which will appear in your app</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">env<env_name></env_name></td><br>      <td style=\"text-align: center\">object</td><br>      <td style=\"text-align: center\">{“NODE_ENV”: “production”, “ID”: “89”}</td><br>      <td style=\"text-align: left\">inject <env_name> when doing pm2 restart app.yml –env <env_name></env_name></env_name></td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">source_map_support</td><br>      <td style=\"text-align: center\">boolean</td><br>      <td style=\"text-align: center\">true</td><br>      <td style=\"text-align: left\">default to true, [enable/disable source map file]</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">instance_var</td><br>      <td style=\"text-align: center\">string</td><br>      <td style=\"text-align: center\">“NODE_APP_INSTANCE”</td><br>      <td style=\"text-align: left\"><a href=\"http://pm2.keymetrics.io/docs/usage/environment/#specific-environment-variables\" target=\"_blank\" rel=\"noopener\">see documentation</a></td><br>    </tr><br>  </tbody><br><br>  <tbody><br>    <tr><br>      <td style=\"text-align: left\">log_date_format</td><br>      <td style=\"text-align: center\">(string)</td><br>      <td style=\"text-align: center\">“YYYY-MM-DD HH:mm Z”</td><br>      <td style=\"text-align: left\">log date format (see log section)</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">error_file</td><br>      <td style=\"text-align: center\">(string)</td><br>      <td style=\"text-align: center\">&nbsp;</td><br>      <td style=\"text-align: left\">error file path (default to $HOME/.pm2/logs/XXXerr.log)</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">out_file</td><br>      <td style=\"text-align: center\">(string)</td><br>      <td style=\"text-align: center\">&nbsp;</td><br>      <td style=\"text-align: left\">output file path (default to $HOME/.pm2/logs/XXXout.log)</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">combine_logs</td><br>      <td style=\"text-align: center\">boolean</td><br>      <td style=\"text-align: center\">true</td><br>      <td style=\"text-align: left\">if set to true, avoid to suffix logs file with the process id</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">merge_logs</td><br>      <td style=\"text-align: center\">boolean</td><br>      <td style=\"text-align: center\">true</td><br>      <td style=\"text-align: left\">alias to combine_logs</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">pid_file</td><br>      <td style=\"text-align: center\">(string)</td><br>      <td style=\"text-align: center\">&nbsp;</td><br>      <td style=\"text-align: left\">pid file path (default to $HOME/.pm2/pid/app-pm_id.pid)</td><br>    </tr><br>  </tbody><br><br>  <tbody><br>    <tr><br>      <td style=\"text-align: left\">min_uptime</td><br>      <td style=\"text-align: center\">(string)</td><br>      <td style=\"text-align: center\">&nbsp;</td><br>      <td style=\"text-align: left\">min uptime of the app to be considered started</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">listen_timeout</td><br>      <td style=\"text-align: center\">number</td><br>      <td style=\"text-align: center\">8000</td><br>      <td style=\"text-align: left\">time in ms before forcing a reload if app not listening</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">kill_timeout</td><br>      <td style=\"text-align: center\">number</td><br>      <td style=\"text-align: center\">1600</td><br>      <td style=\"text-align: left\">time in milliseconds before sending <a href=\"http://pm2.keymetrics.io/docs/usage/signals-clean-restart/#cleaning-states-and-jobs\" target=\"_blank\" rel=\"noopener\">a final SIGKILL</a></td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">wait_ready</td><br>      <td style=\"text-align: center\">boolean</td><br>      <td style=\"text-align: center\">false</td><br>      <td style=\"text-align: left\">Instead of reload waiting for listen event, wait for process.send(‘ready’)</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">max_restarts</td><br>      <td style=\"text-align: center\">number</td><br>      <td style=\"text-align: center\">10</td><br>      <td style=\"text-align: left\">number of consecutive unstable restarts (less than 1sec interval or custom time via min_uptime) before your app is considered errored and stop being restarted</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">restart_delay</td><br>      <td style=\"text-align: center\">number</td><br>      <td style=\"text-align: center\">4000</td><br>      <td style=\"text-align: left\">time to wait before restarting a crashed app (in milliseconds). defaults to 0.</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">autorestart</td><br>      <td style=\"text-align: center\">boolean</td><br>      <td style=\"text-align: center\">false</td><br>      <td style=\"text-align: left\">true by default. if false, PM2 will not restart your app if it crashes or ends peacefully</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">cron_restart</td><br>      <td style=\"text-align: center\">string</td><br>      <td style=\"text-align: center\">“1 0 <em> </em> *”</td><br>      <td style=\"text-align: left\">a cron pattern to restart your app. Application must be running for cron feature to work</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">vizion</td><br>      <td style=\"text-align: center\">boolean</td><br>      <td style=\"text-align: center\">false</td><br>      <td style=\"text-align: left\">true by default. if false, PM2 will start without vizion features (versioning control metadatas)</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">post_update</td><br>      <td style=\"text-align: center\">list</td><br>      <td style=\"text-align: center\">[“npm install”, “echo launching the app”]</td><br>      <td style=\"text-align: left\">a list of commands which will be executed after you perform a Pull/Upgrade operation from Keymetrics dashboard</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">force</td><br>      <td style=\"text-align: center\">boolean</td><br>      <td style=\"text-align: center\">true</td><br>      <td style=\"text-align: left\">defaults to false. if true, you can start the same script several times which is usually not allowed by PM2</td><br>    </tr><br>  </tbody><br><br></table>\n\n<blockquote>\n<p>使用json配置文件的方式，命令行可选参数会无效,</p>\n</blockquote>\n<p>日志文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 不保存日志 </span><br><span class=\"line\">设置 /dev/null to error_file or out_file  不保存日志文件.</span><br><span class=\"line\"></span><br><span class=\"line\"># 同一应用 日志内容放一起</span><br><span class=\"line\">使用 merge_logs: true 禁止日志文件自动加上进程id后缀 (e.g. app-name-ID.log)</span><br></pre></td></tr></table></figure>\n<h3 id=\"状态管理\"><a href=\"#状态管理\" class=\"headerlink\" title=\"状态管理\"></a>状态管理</h3><h4 id=\"平滑停止\"><a href=\"#平滑停止\" class=\"headerlink\" title=\"平滑停止\"></a>平滑停止</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Graceful restart/reload/stop</span><br><span class=\"line\">process.on(&apos;SIGINT&apos;, function() &#123;</span><br><span class=\"line\">   db.stop(function(err) &#123;</span><br><span class=\"line\">     process.exit(err ? 1 : 0);</span><br><span class=\"line\">   &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"># 延时 3000ms</span><br><span class=\"line\">pm2 start app.js --kill-timeout 3000</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;apps&quot; : [&#123;</span><br><span class=\"line\">    &quot;name&quot;         : &quot;api&quot;,</span><br><span class=\"line\">    &quot;script&quot;       : &quot;app.js&quot;,</span><br><span class=\"line\">    &quot;kill_timeout&quot; : 3000</span><br><span class=\"line\">  &#125;]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"平滑启动\"><a href=\"#平滑启动\" class=\"headerlink\" title=\"平滑启动\"></a>平滑启动</h4><p>某些应用运行需要等待DB或者workers建立好链接</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 应用发出ready正式更新状态</span><br><span class=\"line\">pm2 start app.js --wait-ready</span><br><span class=\"line\"></span><br><span class=\"line\"># 应用链接处理完毕发送ready消息</span><br><span class=\"line\">var http = require(&apos;http&apos;);</span><br><span class=\"line\">var app = http.createServer(function(req, res) &#123;</span><br><span class=\"line\">  res.writeHead(200);</span><br><span class=\"line\">  res.end(&apos;hey&apos;);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">var listener = app.listen(0, function() &#123;</span><br><span class=\"line\">  console.log(&apos;Listening on port &apos; + listener.address().port);</span><br><span class=\"line\">  // Here we send the ready signal to PM2</span><br><span class=\"line\">  process.send(&apos;ready&apos;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"># 默认超时时间为 3000ms</span><br><span class=\"line\">pm2 start app.js --wait-ready --listen-timeout 3000</span><br><span class=\"line\"></span><br><span class=\"line\"># json方式指定</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;apps&quot; : [&#123;</span><br><span class=\"line\">    &quot;name&quot;         : &quot;api&quot;,</span><br><span class=\"line\">    &quot;script&quot;       : &quot;app.js&quot;,</span><br><span class=\"line\">    &quot;listen_timeout&quot; : 3000</span><br><span class=\"line\">  &#125;]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"环境变量\"><a href=\"#环境变量\" class=\"headerlink\" title=\"环境变量\"></a>环境变量</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 1.PM2 默认注入当前shell的环境变量</span><br><span class=\"line\"># 2.PM2注入配置文件中声明的环境变量，重名则覆盖</span><br><span class=\"line\"></span><br><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">  apps : [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        name: &quot;myapp&quot;,</span><br><span class=\"line\">        script: &quot;./app.js&quot;,</span><br><span class=\"line\">        watch: true,</span><br><span class=\"line\">        env: &#123;</span><br><span class=\"line\">            &quot;PORT&quot;: 3000,</span><br><span class=\"line\">            &quot;NODE_ENV&quot;: &quot;development&quot;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        env_production: &#123;</span><br><span class=\"line\">            &quot;PORT&quot;: 80,</span><br><span class=\"line\">            &quot;NODE_ENV&quot;: &quot;production&quot;,</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># 根据运行环境，选择不同的环境变量</span><br><span class=\"line\">ecosystem.config.js --env production</span><br><span class=\"line\"></span><br><span class=\"line\"># 默认  restarting or reloading 不会更新环境变量，如果需要更新可以使用如下方式</span><br><span class=\"line\">pm2 reload ecosystem.json --update-env</span><br><span class=\"line\"></span><br><span class=\"line\"># 指定实例个数的环境变量</span><br><span class=\"line\">NODE_APP_INSTANCE </span><br><span class=\"line\"></span><br><span class=\"line\"># 修改环境变量的名称</span><br><span class=\"line\">instance_var: &apos;INSTANCE_ID&apos;,</span><br></pre></td></tr></table></figure>\n<h3 id=\"应用日志管理\"><a href=\"#应用日志管理\" class=\"headerlink\" title=\"应用日志管理\"></a>应用日志管理</h3><p>PM2日志可以合并，也可以存放不同的日志文件中。</p>\n<h4 id=\"实时显示日志\"><a href=\"#实时显示日志\" class=\"headerlink\" title=\"实时显示日志\"></a>实时显示日志</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 查看logs命令帮助</span><br><span class=\"line\">pm2 logs -h</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示所有应用日志</span><br><span class=\"line\">pm2 logs</span><br><span class=\"line\"></span><br><span class=\"line\"># 指定正则匹配的应用的日志</span><br><span class=\"line\">pm2 logs /api/</span><br><span class=\"line\"></span><br><span class=\"line\">pm2 logs /server_[12]/</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示应用api的日志</span><br><span class=\"line\">pm2 logs api</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示应用api日志的 X 行</span><br><span class=\"line\">pm2 logs big-api --lines 1000</span><br><span class=\"line\"></span><br><span class=\"line\"># 格式化日志显示</span><br><span class=\"line\">pm2 logs --json pm2 logs --format</span><br><span class=\"line\"></span><br><span class=\"line\"># 应用启动指定显示方式 </span><br><span class=\"line\">pm2 start --log-type json app.json</span><br><span class=\"line\">pm2 start echo.js --merge-logs --log-date-format=&quot;YYYY-MM-DD HH:mm Z&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 或者配置文件中中指定 &quot;log_type&quot;: &quot;json&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 清除日志 （或者使用 pm2 install pm2-logrotate ）</span><br><span class=\"line\">pm2 flush</span><br><span class=\"line\"></span><br><span class=\"line\"># 不记录日志信息</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;out_file&quot;: &quot;/dev/null&quot;,</span><br><span class=\"line\">  &quot;error_file&quot;: &quot;/dev/null&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># 指定日志类型</span><br><span class=\"line\">pm2 logs main</span><br></pre></td></tr></table></figure>\n<h3 id=\"更新PM2\"><a href=\"#更新PM2\" class=\"headerlink\" title=\"更新PM2\"></a>更新PM2</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 保存当前进程信息</span><br><span class=\"line\">pm2 save</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装最新版pm2</span><br><span class=\"line\">npm install pm2 -g</span><br><span class=\"line\"></span><br><span class=\"line\"># 在内存中更新pm2</span><br><span class=\"line\">pm2 update</span><br></pre></td></tr></table></figure>\n<h3 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h3><p>本地我们可以直接通过 <code>pm2 start/stop</code>管理本地应用，通过deploy命令，在本地可以很轻松的将本地的应用部署远程服务器上。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">   &quot;apps&quot; : [&#123;</span><br><span class=\"line\">      &quot;name&quot; : &quot;HTTP-API&quot;,</span><br><span class=\"line\">      &quot;script&quot; : &quot;http.js&quot;</span><br><span class=\"line\">   &#125;],</span><br><span class=\"line\">   &quot;deploy&quot; : &#123;</span><br><span class=\"line\">     // &quot;production&quot; is the environment name</span><br><span class=\"line\">     &quot;production&quot; : &#123;</span><br><span class=\"line\">        // 已授权的公钥路径</span><br><span class=\"line\">        &quot;key&quot;  : &quot;/path/to/some.pem&quot;,           // 用户名</span><br><span class=\"line\">       &quot;user&quot; : &quot;ubuntu&quot;,</span><br><span class=\"line\">       // 主机</span><br><span class=\"line\">       &quot;host&quot; : [&quot;212.83.163.1&quot;, &quot;212.83.163.2&quot;, &quot;212.83.163.3&quot;],</span><br><span class=\"line\">       // 分支</span><br><span class=\"line\">       &quot;ref&quot;  : &quot;origin/master&quot;,</span><br><span class=\"line\">       // 代码库</span><br><span class=\"line\">       &quot;repo&quot; : &quot;git@github.com:Username/repository.git&quot;,</span><br><span class=\"line\">       // 远程服务器存放应用的路径</span><br><span class=\"line\">       &quot;path&quot; : &quot;/var/www/my-repository&quot;,</span><br><span class=\"line\">       // ssh 配置项 可以是字符串或者数组字符串</span><br><span class=\"line\">       &quot;ssh_options&quot;: &quot;StrictHostKeyChecking=no&quot;,</span><br><span class=\"line\">       // 安装依赖，可以是命令，多个命令用分号;分割，也可以用本地脚本文件的路径</span><br><span class=\"line\">       &quot;pre-setup&quot; : &quot;apt-get install git&quot;,</span><br><span class=\"line\">       // 代码库克隆完成执行 使用方式和 pre-setup一样</span><br><span class=\"line\">       &quot;post-setup&quot;: &quot;ls -la&quot;,</span><br><span class=\"line\">       // 本地要执行的代码</span><br><span class=\"line\">       &quot;pre-deploy-local&quot; : &quot;echo &apos;This is a local executed command&apos;&quot;</span><br><span class=\"line\">       // 代码库克隆完成,远程执行</span><br><span class=\"line\">       &quot;post-deploy&quot; : &quot;npm install; grunt dist&quot;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &quot;dev&quot; : &#123;</span><br><span class=\"line\">       &quot;user&quot; : &quot;ubuntu_dev&quot;,</span><br><span class=\"line\">       &quot;host&quot; : [&quot;192.168.0.12&quot;],</span><br><span class=\"line\">       &quot;ref&quot;  : &quot;origin/master&quot;,</span><br><span class=\"line\">       &quot;repo&quot; : &quot;git@github.com:Username/repository.git&quot;,</span><br><span class=\"line\">       &quot;path&quot; : &quot;/var/www/my-repository&quot;,</span><br><span class=\"line\">       &quot;post-deploy&quot; : &quot;npm install; grunt dist&quot;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># 本地生成公钥</span><br><span class=\"line\">ssh-keygen -t rsa</span><br><span class=\"line\">ssh-copy-id node@myserver.com</span><br><span class=\"line\"></span><br><span class=\"line\"># 远程部署，初始化应用目录</span><br><span class=\"line\">pm2 deploy production setup</span><br><span class=\"line\"></span><br><span class=\"line\"># 更新远程版本</span><br><span class=\"line\">pm2 deploy production update</span><br><span class=\"line\"></span><br><span class=\"line\"># 版本回退 Revert to -1 deployment</span><br><span class=\"line\">pm2 deploy production revert 1</span><br><span class=\"line\"></span><br><span class=\"line\"># 远程执行命令</span><br><span class=\"line\">pm2 deploy production exec &quot;pm2 reload all&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">pm2 startOrRestart all.json</span><br></pre></td></tr></table></figure>\n<p><a href=\"http://pm2.keymetrics.io/docs/usage/docker-pm2-nodejs/\" target=\"_blank\" rel=\"noopener\">Docker部署</a></p>\n<h3 id=\"将pm2设置成系统服务\"><a href=\"#将pm2设置成系统服务\" class=\"headerlink\" title=\"将pm2设置成系统服务\"></a>将pm2设置成系统服务</h3><ul>\n<li>systemd: Ubuntu &gt;= 16, CentOS &gt;= 7, Arch, Debian &gt;= 7</li>\n<li>upstart: Ubuntu &lt;= 14</li>\n<li>launchd: Darwin, MacOSx</li>\n<li>openrc: Gentoo Linux, Arch Linux</li>\n<li>rcd: FreeBSD</li>\n<li>systemv: Centos 6, Amazon Linux</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pm2 startup</span><br><span class=\"line\"></span><br><span class=\"line\"># 指定具体平台,不加参数会自动检测</span><br><span class=\"line\">pm2 startup [ubuntu | ubuntu14 | ubuntu12 | centos | centos6 | arch | oracle | amazon | macos | darwin | freebsd | systemd | systemv | upstart | launchd | rcd | openrc]</span><br><span class=\"line\"></span><br><span class=\"line\"># disable 自动启动</span><br><span class=\"line\">pm2 unstartup</span><br><span class=\"line\"></span><br><span class=\"line\"># 保存当前进程列表</span><br><span class=\"line\">pm2 save</span><br><span class=\"line\"></span><br><span class=\"line\"># 恢复之前保存的进程列表</span><br><span class=\"line\">pm2 resurrect</span><br></pre></td></tr></table></figure>\n<p>检测自启服务是否设置好</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Check if pm2-&lt;USER&gt; service has been added</span><br><span class=\"line\">$ systemctl list-units</span><br><span class=\"line\"># Check logs</span><br><span class=\"line\">$ journalctl -u pm2-&lt;USER&gt;</span><br><span class=\"line\"># Cat systemd configuration file</span><br><span class=\"line\">$ systemctl cat pm2-&lt;USER&gt;</span><br><span class=\"line\"># Analyze startup</span><br><span class=\"line\">$ systemd-analyze plot &gt; output.svg</span><br></pre></td></tr></table></figure>\n<h3 id=\"自动重启服务\"><a href=\"#自动重启服务\" class=\"headerlink\" title=\"自动重启服务\"></a>自动重启服务</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 当前目录或子目录文件改动自动重启服务</span><br><span class=\"line\">pm2 start app.js --watch</span><br><span class=\"line\"></span><br><span class=\"line\"># 不会停止检测文件改动</span><br><span class=\"line\">pm2 stop 0 </span><br><span class=\"line\"></span><br><span class=\"line\"># 停止检测文件改动</span><br><span class=\"line\">pm2 stop --watch 0 </span><br><span class=\"line\"></span><br><span class=\"line\"># 配置文件 详细配置检测文件路径</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;watch&quot;: [&quot;server&quot;, &quot;client&quot;],</span><br><span class=\"line\">  &quot;ignore_watch&quot; : [&quot;node_modules&quot;, &quot;client/img&quot;],</span><br><span class=\"line\">  &quot;watch_options&quot;: &#123;</span><br><span class=\"line\">    &quot;followSymlinks&quot;: false</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># 监测cpu及memory</span><br><span class=\"line\">pm2 monit</span><br></pre></td></tr></table></figure>\n<h3 id=\"sourcemap\"><a href=\"#sourcemap\" class=\"headerlink\" title=\"sourcemap\"></a>sourcemap</h3><p>当使用babeljs,typescript时，有了sourcemap，异常了可以找到具体错误信息。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 命令行指定 </span><br><span class=\"line\">pm2 start app.js --source-map-support</span><br><span class=\"line\">pm2 start app.js --disable-source-map</span><br><span class=\"line\"></span><br><span class=\"line\"># 配置文件指定</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;apps&quot; : [&#123;</span><br><span class=\"line\">    &quot;name&quot;              : &quot;my-app&quot;,</span><br><span class=\"line\">    &quot;script&quot;            : &quot;script.js&quot;,</span><br><span class=\"line\">    &quot;source_map_support&quot;: true</span><br><span class=\"line\">  &#125;]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"静态服务\"><a href=\"#静态服务\" class=\"headerlink\" title=\"静态服务\"></a>静态服务</h3><p>pm2 2.4.0 后可使用静态服务命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 命令行方式</span><br><span class=\"line\">pm2 serve &lt;path&gt; &lt;port&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"># 或者配置文件</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;script&quot;: &quot;serve&quot;,</span><br><span class=\"line\">  &quot;env&quot;: &#123;</span><br><span class=\"line\">    &quot;PM2_SERVE_PATH&quot;: &apos;.&apos;,</span><br><span class=\"line\">    &quot;PM2_SERVE_PORT&quot;: 8080</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><ul>\n<li><a href=\"http://pm2.keymetrics.io/docs/usage/process-metrics/#counter-sequential-value-change\" target=\"_blank\" rel=\"noopener\">进程性能指标</a></li>\n<li><a href=\"http://pm2.keymetrics.io/docs/usage/specifics/\" target=\"_blank\" rel=\"noopener\">非root使用authbind绑定80端口</a></li>\n<li><a href=\"http://pm2.keymetrics.io/docs/usage/pm2-api/\" target=\"_blank\" rel=\"noopener\">pm2 api</a></li>\n<li><a href=\"http://pm2.keymetrics.io/docs/usage/use-pm2-with-cloud-providers/\" target=\"_blank\" rel=\"noopener\">云服务使用pm2</a></li>\n<li><a href=\"http://pm2.keymetrics.io/docs/advanced/pm2-module-system/\" target=\"_blank\" rel=\"noopener\">pm2模块</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>pm2是一个高级node进程管理工具，通过它不仅可以管理node应用，也可以管理Python等其他语言的应用；本文是看完官网后做的笔录，适合快速入门pm2命令行工具的使用，具体细节可参考<a href=\"http://pm2.keymetrics.io/docs/usage/quick-start/\" target=\"_blank\" rel=\"noopener\">官网介绍</a></p>\n<h3 id=\"pm2使用\"><a href=\"#pm2使用\" class=\"headerlink\" title=\"pm2使用\"></a>pm2使用</h3><h4 id=\"快速使用\"><a href=\"#快速使用\" class=\"headerlink\" title=\"快速使用\"></a>快速使用</h4><p>安装</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install pm2@latest -g</span><br></pre></td></tr></table></figure>\n<p>使用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pm2 start app.js</span><br></pre></td></tr></table></figure>\n<p>通过配置文件管理多个应用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 创建 process.yml内容如下：</span><br><span class=\"line\">apps:</span><br><span class=\"line\">  - script   : app.js</span><br><span class=\"line\">    instances: 4</span><br><span class=\"line\">    exec_mode: cluster</span><br><span class=\"line\">  - script : worker.js</span><br><span class=\"line\">    watch  : true</span><br><span class=\"line\">    env    :</span><br><span class=\"line\">      NODE_ENV: development</span><br><span class=\"line\">    env_production:</span><br><span class=\"line\">      NODE_ENV: production</span><br><span class=\"line\">      </span><br><span class=\"line\">      </span><br><span class=\"line\"># 运行应用</span><br><span class=\"line\">pm2 start process.yml</span><br><span class=\"line\"></span><br><span class=\"line\"># 随系统启动</span><br><span class=\"line\">pm2 startup</span><br></pre></td></tr></table></figure>\n<p>与<code>pm2</code>相关的所有配置位于<code>$HOME/.pm2</code>下</p>\n<ul>\n<li>logs 应用log</li>\n<li>pids 应用pid</li>\n<li>sock 套接字文件</li>\n<li>conf.js 配置文件</li>\n</ul>\n<p>更新</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 全局安装</span><br><span class=\"line\">npm install pm2@latest -g</span><br><span class=\"line\"></span><br><span class=\"line\"># 内存更新</span><br><span class=\"line\">pm2 update</span><br></pre></td></tr></table></figure>\n<p>命令清单</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Fork mode</span><br><span class=\"line\">pm2 start app.js --name my-api # Name process</span><br><span class=\"line\"></span><br><span class=\"line\"># Cluster mode</span><br><span class=\"line\">pm2 start app.js -i 0        # Will start maximum processes with LB depending on available CPUs</span><br><span class=\"line\">pm2 start app.js -i max      # Same as above, but deprecated.</span><br><span class=\"line\"></span><br><span class=\"line\"># Listing</span><br><span class=\"line\"></span><br><span class=\"line\">pm2 list</span><br><span class=\"line\"># Or</span><br><span class=\"line\">pm2 [list|ls|l|status]</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示进程详情</span><br><span class=\"line\">pm2 show 0</span><br><span class=\"line\"></span><br><span class=\"line\">pm2 list               # Display all processes status</span><br><span class=\"line\">pm2 jlist              # Print process list in raw JSON</span><br><span class=\"line\">pm2 prettylist         # Print process list in beautified JSON</span><br><span class=\"line\"></span><br><span class=\"line\">pm2 describe 0         # Display all informations about a specific process</span><br><span class=\"line\"></span><br><span class=\"line\">pm2 monit              # Monitor all processes</span><br><span class=\"line\"></span><br><span class=\"line\"># Logs</span><br><span class=\"line\"></span><br><span class=\"line\">pm2 logs [--raw]       # Display all processes logs in streaming</span><br><span class=\"line\">pm2 flush              # Empty all log files</span><br><span class=\"line\">pm2 reloadLogs         # Reload all logs</span><br><span class=\"line\"></span><br><span class=\"line\"># Actions</span><br><span class=\"line\"></span><br><span class=\"line\">pm2 stop all           # Stop all processes</span><br><span class=\"line\">pm2 restart all        # Restart all processes</span><br><span class=\"line\"></span><br><span class=\"line\">pm2 reload all         # Will 0s downtime reload (for NETWORKED apps)</span><br><span class=\"line\"></span><br><span class=\"line\">pm2 stop 0             # Stop specific process id</span><br><span class=\"line\">pm2 restart 0          # Restart specific process id</span><br><span class=\"line\"></span><br><span class=\"line\"># 重启服务</span><br><span class=\"line\">pm2 restart myapp          # Restart specific process id</span><br><span class=\"line\"></span><br><span class=\"line\"># 根据应用名称删除</span><br><span class=\"line\">pm2 delete myapp          </span><br><span class=\"line\">pm2 delete 0           # Will remove process from pm2 list</span><br><span class=\"line\">pm2 delete all         # Will remove all processes from pm2 list</span><br><span class=\"line\"></span><br><span class=\"line\"># Misc</span><br><span class=\"line\"></span><br><span class=\"line\">pm2 reset &lt;process&gt;    # Reset meta data (restarted time...)</span><br><span class=\"line\">pm2 updatePM2          # Update in memory pm2</span><br><span class=\"line\">pm2 ping               # Ensure pm2 daemon has been launched</span><br><span class=\"line\">pm2 sendSignal SIGUSR2 my-app # Send system signal to script</span><br><span class=\"line\">pm2 start app.js --no-daemon</span><br><span class=\"line\">pm2 start app.js --no-vizion</span><br><span class=\"line\">pm2 start app.js --no-autorestart</span><br><span class=\"line\"></span><br><span class=\"line\"># 给应用传递参数</span><br><span class=\"line\">pm2 start app.js -- -a 23  # Pass arguments &apos;-a 23&apos; argument to app.js script</span><br><span class=\"line\">pm2 start app.js --node-args=&quot;--debug=7001&quot; # --node-args to pass options to node V8</span><br><span class=\"line\"></span><br><span class=\"line\">pm2 start app.js --log-date-format &quot;YYYY-MM-DD HH:mm Z&quot;    # Log will be prefixed with custom time format</span><br><span class=\"line\"></span><br><span class=\"line\"># 以json文件方式启动</span><br><span class=\"line\">pm2 start app.json                # Start processes with options declared in app.json</span><br><span class=\"line\"></span><br><span class=\"line\"># 指定多应用中的具体应用</span><br><span class=\"line\">pm2 reload process.json --only api  </span><br><span class=\"line\">       </span><br><span class=\"line\"># 自定义日志文件                                    </span><br><span class=\"line\">pm2 start app.js -e err.log -o out.log  # Start and specify error and out log</span><br><span class=\"line\"></span><br><span class=\"line\"># PM2 2.4.0后 可以通过正则批量操作</span><br><span class=\"line\">pm2 restart/delete/stop/reload  /http-[1,2]/</span><br></pre></td></tr></table></figure>\n<p>启动其他语言应用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 启动其他语言的进程</span><br><span class=\"line\">pm2 start echo.php</span><br><span class=\"line\">pm2 start echo.py</span><br><span class=\"line\">pm2 start echo.sh</span><br><span class=\"line\"></span><br><span class=\"line\"># 映射关系 - 解释器</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;.sh&quot;: &quot;bash&quot;,</span><br><span class=\"line\">  &quot;.py&quot;: &quot;python&quot;,</span><br><span class=\"line\">  &quot;.rb&quot;: &quot;ruby&quot;,</span><br><span class=\"line\">  &quot;.coffee&quot; : &quot;coffee&quot;,</span><br><span class=\"line\">  &quot;.php&quot;: &quot;php&quot;,</span><br><span class=\"line\">  &quot;.pl&quot; : &quot;perl&quot;,</span><br><span class=\"line\">  &quot;.js&quot; : &quot;node&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"># 通过配置文件的方式启动，非js应用必须指定exec_mode: &apos;fork_mode&apos; and exec_interpreter至对应的解释器</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;apps&quot; : [&#123;</span><br><span class=\"line\">    &quot;name&quot;       : &quot;bash-worker&quot;,</span><br><span class=\"line\">    &quot;script&quot;     : &quot;./a-bash-script&quot;,</span><br><span class=\"line\">    &quot;exec_interpreter&quot;: &quot;bash&quot;,   </span><br><span class=\"line\">    &quot;exec_mode&quot;  : &quot;fork_mode&quot;</span><br><span class=\"line\">  &#125;, &#123;</span><br><span class=\"line\">    &quot;name&quot;       : &quot;ruby-worker&quot;,</span><br><span class=\"line\">    &quot;script&quot;     : &quot;./some-ruby-script&quot;,</span><br><span class=\"line\">    &quot;exec_interpreter&quot;: &quot;ruby&quot;,</span><br><span class=\"line\">    &quot;exec_mode&quot;  : &quot;fork_mode&quot;</span><br><span class=\"line\">  &#125;]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>控制应用内存大小</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 启动应用 显示内存大小</span><br><span class=\"line\">pm2 start big-array.js --max-memory-restart 20M</span><br><span class=\"line\"></span><br><span class=\"line\"># JSON</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;name&quot;   : &quot;max_mem&quot;,</span><br><span class=\"line\">  &quot;script&quot; : &quot;big-array.js&quot;,</span><br><span class=\"line\">  &quot;max_memory_restart&quot; : &quot;20M&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># 使用脚本方式控制内存大小</span><br><span class=\"line\">pm2.start(&#123;</span><br><span class=\"line\">  name               : &quot;max_mem&quot;,</span><br><span class=\"line\">  script             : &quot;big-array.js&quot;,</span><br><span class=\"line\">  max_memory_restart : &quot;20M&quot;</span><br><span class=\"line\">&#125;, function(err, proc) &#123;</span><br><span class=\"line\">  // Processing</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"># 单位  K(ilobyte), M(egabyte), G(igabyte)</span><br><span class=\"line\">50M</span><br><span class=\"line\">50K</span><br><span class=\"line\">1G</span><br></pre></td></tr></table></figure>\n<h3 id=\"集群模式\"><a href=\"#集群模式\" class=\"headerlink\" title=\"集群模式\"></a>集群模式</h3><p>根据cpus个数生成多个应用实例，提高应用的性能及可靠性</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pm2 start app.js -i max</span><br><span class=\"line\"># max:pm2自动检测cpus个数</span><br><span class=\"line\"></span><br><span class=\"line\"># 通过配置 js/yaml/json file</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;apps&quot; : [&#123;</span><br><span class=\"line\">    &quot;script&quot;    : &quot;api.js&quot;,</span><br><span class=\"line\">    &quot;instances&quot; : &quot;max&quot;,</span><br><span class=\"line\">    &quot;exec_mode&quot; : &quot;cluster&quot;   </span><br><span class=\"line\">  &#125;]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">pm2默认不会负载均衡，需要制定 exec_mode为 cluster</span><br><span class=\"line\"></span><br><span class=\"line\">-i 参数项</span><br><span class=\"line\">0/max: = CPUs</span><br><span class=\"line\">-1 : CPUs - 1</span><br><span class=\"line\">number: &lt;= CPUS</span><br></pre></td></tr></table></figure>\n<p>应用平滑关闭</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">process.on(&apos;SIGINT&apos;, function() &#123;</span><br><span class=\"line\">   db.stop(function(err) &#123;</span><br><span class=\"line\">     process.exit(err ? 1 : 0);</span><br><span class=\"line\">   &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h3 id=\"启动配置文件\"><a href=\"#启动配置文件\" class=\"headerlink\" title=\"启动配置文件\"></a>启动配置文件</h3><p>配置文件格式</p>\n<ul>\n<li>javascript</li>\n<li>json</li>\n<li>yaml</li>\n</ul>\n<p>生成配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 生成 ecosystem.config.js</span><br><span class=\"line\">pm2 ecosystem</span><br><span class=\"line\"></span><br><span class=\"line\"># 生成文件不带注释</span><br><span class=\"line\">pm2 ecosystem simple</span><br></pre></td></tr></table></figure>\n<p>JavaScript格式</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">  apps : [&#123;</span><br><span class=\"line\">    name        : &quot;worker&quot;,</span><br><span class=\"line\">    script      : &quot;./worker.js&quot;,</span><br><span class=\"line\">    watch       : true,</span><br><span class=\"line\">    env: &#123;</span><br><span class=\"line\">      &quot;NODE_ENV&quot;: &quot;development&quot;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    env_production : &#123;</span><br><span class=\"line\">       &quot;NODE_ENV&quot;: &quot;production&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,&#123;</span><br><span class=\"line\">    name       : &quot;api-app&quot;,</span><br><span class=\"line\">    script     : &quot;./api.js&quot;,</span><br><span class=\"line\">    instances  : 4,</span><br><span class=\"line\">    exec_mode  : &quot;cluster&quot;</span><br><span class=\"line\">  &#125;]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>json格式</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;apps&quot; : [&#123;</span><br><span class=\"line\">    &quot;name&quot;        : &quot;worker&quot;,</span><br><span class=\"line\">    &quot;script&quot;      : &quot;./worker.js&quot;,</span><br><span class=\"line\">    &quot;watch&quot;       : true,</span><br><span class=\"line\">    &quot;env&quot;: &#123;</span><br><span class=\"line\">      &quot;NODE_ENV&quot;: &quot;development&quot;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &quot;env_production&quot; : &#123;</span><br><span class=\"line\">       &quot;NODE_ENV&quot;: &quot;production&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,&#123;</span><br><span class=\"line\">    &quot;name&quot;       : &quot;api-app&quot;,</span><br><span class=\"line\">    &quot;script&quot;     : &quot;./api.js&quot;,</span><br><span class=\"line\">    &quot;instances&quot;  : 4,</span><br><span class=\"line\">    &quot;exec_mode&quot;  : &quot;cluster&quot;</span><br><span class=\"line\">  &#125;]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>yaml格式</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apps:</span><br><span class=\"line\">  - script   : ./api.js</span><br><span class=\"line\">    name     : &apos;api-app&apos;</span><br><span class=\"line\">    instances: 4</span><br><span class=\"line\">    exec_mode: cluster</span><br><span class=\"line\">  - script : ./worker.js</span><br><span class=\"line\">    name   : &apos;worker&apos;</span><br><span class=\"line\">    watch  : true</span><br><span class=\"line\">    env    :</span><br><span class=\"line\">      NODE_ENV: development</span><br><span class=\"line\">    env_production:</span><br><span class=\"line\">      NODE_ENV: production</span><br></pre></td></tr></table></figure>\n<p>根据配置文件管理应用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pm2 start ecosystem.config.js</span><br><span class=\"line\"></span><br><span class=\"line\"># 启动配置文件中具体某个应用</span><br><span class=\"line\">pm2 start ecosystem.config.js --only worker-app</span><br><span class=\"line\"></span><br><span class=\"line\"># 停止配置文件中指定的所有应用</span><br><span class=\"line\">pm2 stop ecosystem.config.js</span><br><span class=\"line\"></span><br><span class=\"line\"># 重启所有应用</span><br><span class=\"line\">pm2 start   ecosystem.config.js</span><br><span class=\"line\">## Or</span><br><span class=\"line\">pm2 restart ecosystem.config.js</span><br><span class=\"line\"></span><br><span class=\"line\"># 重新加载所有应用</span><br><span class=\"line\">pm2 reload ecosystem.config.js</span><br><span class=\"line\"></span><br><span class=\"line\"># 删除所有应用</span><br><span class=\"line\">pm2 delete ecosystem.config.js</span><br></pre></td></tr></table></figure>\n<p>更新环境变量信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">pm2 restart ecosystem.config.js --update-env</span><br><span class=\"line\">pm2 startOrReload ecosystem.config.js --update-env</span><br><span class=\"line\"></span><br><span class=\"line\"># 根据参数自动注入环境变量  env_&lt;name&gt;</span><br><span class=\"line\">pm2 start process.json --env production</span><br></pre></td></tr></table></figure>\n<h2 id=\"配置参数列表\"><a href=\"#配置参数列表\" class=\"headerlink\" title=\"配置参数列表\"></a>配置参数列表</h2><table><br>  <thead><br>    <tr><br>      <th style=\"text-align: left\">Field</th><br>      <th style=\"text-align: center\">Type</th><br>      <th style=\"text-align: center\">Example</th><br>      <th style=\"text-align: left\">Description</th><br>    </tr><br>  </thead><br>  <tbody><br>    <tr><br>      <td style=\"text-align: left\">name</td><br>      <td style=\"text-align: center\">(string)</td><br>      <td style=\"text-align: center\">“my-api”</td><br>      <td style=\"text-align: left\">application name (default to script filename without extension)</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">script</td><br>      <td style=\"text-align: center\">(string)</td><br>      <td style=\"text-align: center\">”./api/app.js”</td><br>      <td style=\"text-align: left\">script path relative to pm2 start</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">cwd</td><br>      <td style=\"text-align: center\">(string)</td><br>      <td style=\"text-align: center\">“/var/www/”</td><br>      <td style=\"text-align: left\">the directory from which your app will be launched</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">args</td><br>      <td style=\"text-align: center\">(string)</td><br>      <td style=\"text-align: center\">“-a 13 -b 12”</td><br>      <td style=\"text-align: left\">string containing all arguments passed via CLI to script</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">interpreter</td><br>      <td style=\"text-align: center\">(string)</td><br>      <td style=\"text-align: center\">“/usr/bin/python”</td><br>      <td style=\"text-align: left\">interpreter absolute path (default to node)</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">interpreter_args</td><br>      <td style=\"text-align: center\">(string)</td><br>      <td style=\"text-align: center\">”–harmony”</td><br>      <td style=\"text-align: left\">option to pass to the interpreter</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">node_args</td><br>      <td style=\"text-align: center\">(string)</td><br>      <td style=\"text-align: center\">&nbsp;</td><br>      <td style=\"text-align: left\">alias to interpreter_args</td><br>    </tr><br>  </tbody><br>  <tbody><br>    <tr><br>      <td style=\"text-align: left\">instances</td><br>      <td style=\"text-align: center\">number</td><br>      <td style=\"text-align: center\">-1</td><br>      <td style=\"text-align: left\">number of app instance to be launched</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">exec_mode</td><br>      <td style=\"text-align: center\">string</td><br>      <td style=\"text-align: center\">“cluster”</td><br>      <td style=\"text-align: left\">mode to start your app, can be “cluster” or “fork”, default fork</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">watch</td><br>      <td style=\"text-align: center\">boolean or []</td><br>      <td style=\"text-align: center\">true</td><br>      <td style=\"text-align: left\">enable watch &amp; restart feature, if a file change in the folder or subfolder, your app will get reloaded</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">ignore_watch</td><br>      <td style=\"text-align: center\">list</td><br>      <td style=\"text-align: center\">[”[\\/\\]./”, “node_modules”]</td><br>      <td style=\"text-align: left\">list of regex to ignore some file or folder names by the watch feature</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">max_memory_restart</td><br>      <td style=\"text-align: center\">string</td><br>      <td style=\"text-align: center\">“150M”</td><br>      <td style=\"text-align: left\">your app will be restarted if it exceeds the amount of memory specified. human-friendly format : it can be “10M”, “100K”, “2G” and so on…</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">env</td><br>      <td style=\"text-align: center\">object</td><br>      <td style=\"text-align: center\">{“NODE<em>ENV”: “development”, “ID”: “42”}</em></td><br>      <td style=\"text-align: left\">env variables which will appear in your app</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">env<env_name></env_name></td><br>      <td style=\"text-align: center\">object</td><br>      <td style=\"text-align: center\">{“NODE_ENV”: “production”, “ID”: “89”}</td><br>      <td style=\"text-align: left\">inject <env_name> when doing pm2 restart app.yml –env <env_name></env_name></env_name></td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">source_map_support</td><br>      <td style=\"text-align: center\">boolean</td><br>      <td style=\"text-align: center\">true</td><br>      <td style=\"text-align: left\">default to true, [enable/disable source map file]</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">instance_var</td><br>      <td style=\"text-align: center\">string</td><br>      <td style=\"text-align: center\">“NODE_APP_INSTANCE”</td><br>      <td style=\"text-align: left\"><a href=\"http://pm2.keymetrics.io/docs/usage/environment/#specific-environment-variables\" target=\"_blank\" rel=\"noopener\">see documentation</a></td><br>    </tr><br>  </tbody><br><br>  <tbody><br>    <tr><br>      <td style=\"text-align: left\">log_date_format</td><br>      <td style=\"text-align: center\">(string)</td><br>      <td style=\"text-align: center\">“YYYY-MM-DD HH:mm Z”</td><br>      <td style=\"text-align: left\">log date format (see log section)</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">error_file</td><br>      <td style=\"text-align: center\">(string)</td><br>      <td style=\"text-align: center\">&nbsp;</td><br>      <td style=\"text-align: left\">error file path (default to $HOME/.pm2/logs/XXXerr.log)</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">out_file</td><br>      <td style=\"text-align: center\">(string)</td><br>      <td style=\"text-align: center\">&nbsp;</td><br>      <td style=\"text-align: left\">output file path (default to $HOME/.pm2/logs/XXXout.log)</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">combine_logs</td><br>      <td style=\"text-align: center\">boolean</td><br>      <td style=\"text-align: center\">true</td><br>      <td style=\"text-align: left\">if set to true, avoid to suffix logs file with the process id</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">merge_logs</td><br>      <td style=\"text-align: center\">boolean</td><br>      <td style=\"text-align: center\">true</td><br>      <td style=\"text-align: left\">alias to combine_logs</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">pid_file</td><br>      <td style=\"text-align: center\">(string)</td><br>      <td style=\"text-align: center\">&nbsp;</td><br>      <td style=\"text-align: left\">pid file path (default to $HOME/.pm2/pid/app-pm_id.pid)</td><br>    </tr><br>  </tbody><br><br>  <tbody><br>    <tr><br>      <td style=\"text-align: left\">min_uptime</td><br>      <td style=\"text-align: center\">(string)</td><br>      <td style=\"text-align: center\">&nbsp;</td><br>      <td style=\"text-align: left\">min uptime of the app to be considered started</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">listen_timeout</td><br>      <td style=\"text-align: center\">number</td><br>      <td style=\"text-align: center\">8000</td><br>      <td style=\"text-align: left\">time in ms before forcing a reload if app not listening</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">kill_timeout</td><br>      <td style=\"text-align: center\">number</td><br>      <td style=\"text-align: center\">1600</td><br>      <td style=\"text-align: left\">time in milliseconds before sending <a href=\"http://pm2.keymetrics.io/docs/usage/signals-clean-restart/#cleaning-states-and-jobs\" target=\"_blank\" rel=\"noopener\">a final SIGKILL</a></td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">wait_ready</td><br>      <td style=\"text-align: center\">boolean</td><br>      <td style=\"text-align: center\">false</td><br>      <td style=\"text-align: left\">Instead of reload waiting for listen event, wait for process.send(‘ready’)</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">max_restarts</td><br>      <td style=\"text-align: center\">number</td><br>      <td style=\"text-align: center\">10</td><br>      <td style=\"text-align: left\">number of consecutive unstable restarts (less than 1sec interval or custom time via min_uptime) before your app is considered errored and stop being restarted</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">restart_delay</td><br>      <td style=\"text-align: center\">number</td><br>      <td style=\"text-align: center\">4000</td><br>      <td style=\"text-align: left\">time to wait before restarting a crashed app (in milliseconds). defaults to 0.</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">autorestart</td><br>      <td style=\"text-align: center\">boolean</td><br>      <td style=\"text-align: center\">false</td><br>      <td style=\"text-align: left\">true by default. if false, PM2 will not restart your app if it crashes or ends peacefully</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">cron_restart</td><br>      <td style=\"text-align: center\">string</td><br>      <td style=\"text-align: center\">“1 0 <em> </em> *”</td><br>      <td style=\"text-align: left\">a cron pattern to restart your app. Application must be running for cron feature to work</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">vizion</td><br>      <td style=\"text-align: center\">boolean</td><br>      <td style=\"text-align: center\">false</td><br>      <td style=\"text-align: left\">true by default. if false, PM2 will start without vizion features (versioning control metadatas)</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">post_update</td><br>      <td style=\"text-align: center\">list</td><br>      <td style=\"text-align: center\">[“npm install”, “echo launching the app”]</td><br>      <td style=\"text-align: left\">a list of commands which will be executed after you perform a Pull/Upgrade operation from Keymetrics dashboard</td><br>    </tr><br>    <tr><br>      <td style=\"text-align: left\">force</td><br>      <td style=\"text-align: center\">boolean</td><br>      <td style=\"text-align: center\">true</td><br>      <td style=\"text-align: left\">defaults to false. if true, you can start the same script several times which is usually not allowed by PM2</td><br>    </tr><br>  </tbody><br><br></table>\n\n<blockquote>\n<p>使用json配置文件的方式，命令行可选参数会无效,</p>\n</blockquote>\n<p>日志文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 不保存日志 </span><br><span class=\"line\">设置 /dev/null to error_file or out_file  不保存日志文件.</span><br><span class=\"line\"></span><br><span class=\"line\"># 同一应用 日志内容放一起</span><br><span class=\"line\">使用 merge_logs: true 禁止日志文件自动加上进程id后缀 (e.g. app-name-ID.log)</span><br></pre></td></tr></table></figure>\n<h3 id=\"状态管理\"><a href=\"#状态管理\" class=\"headerlink\" title=\"状态管理\"></a>状态管理</h3><h4 id=\"平滑停止\"><a href=\"#平滑停止\" class=\"headerlink\" title=\"平滑停止\"></a>平滑停止</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Graceful restart/reload/stop</span><br><span class=\"line\">process.on(&apos;SIGINT&apos;, function() &#123;</span><br><span class=\"line\">   db.stop(function(err) &#123;</span><br><span class=\"line\">     process.exit(err ? 1 : 0);</span><br><span class=\"line\">   &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"># 延时 3000ms</span><br><span class=\"line\">pm2 start app.js --kill-timeout 3000</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;apps&quot; : [&#123;</span><br><span class=\"line\">    &quot;name&quot;         : &quot;api&quot;,</span><br><span class=\"line\">    &quot;script&quot;       : &quot;app.js&quot;,</span><br><span class=\"line\">    &quot;kill_timeout&quot; : 3000</span><br><span class=\"line\">  &#125;]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"平滑启动\"><a href=\"#平滑启动\" class=\"headerlink\" title=\"平滑启动\"></a>平滑启动</h4><p>某些应用运行需要等待DB或者workers建立好链接</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 应用发出ready正式更新状态</span><br><span class=\"line\">pm2 start app.js --wait-ready</span><br><span class=\"line\"></span><br><span class=\"line\"># 应用链接处理完毕发送ready消息</span><br><span class=\"line\">var http = require(&apos;http&apos;);</span><br><span class=\"line\">var app = http.createServer(function(req, res) &#123;</span><br><span class=\"line\">  res.writeHead(200);</span><br><span class=\"line\">  res.end(&apos;hey&apos;);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">var listener = app.listen(0, function() &#123;</span><br><span class=\"line\">  console.log(&apos;Listening on port &apos; + listener.address().port);</span><br><span class=\"line\">  // Here we send the ready signal to PM2</span><br><span class=\"line\">  process.send(&apos;ready&apos;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"># 默认超时时间为 3000ms</span><br><span class=\"line\">pm2 start app.js --wait-ready --listen-timeout 3000</span><br><span class=\"line\"></span><br><span class=\"line\"># json方式指定</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;apps&quot; : [&#123;</span><br><span class=\"line\">    &quot;name&quot;         : &quot;api&quot;,</span><br><span class=\"line\">    &quot;script&quot;       : &quot;app.js&quot;,</span><br><span class=\"line\">    &quot;listen_timeout&quot; : 3000</span><br><span class=\"line\">  &#125;]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"环境变量\"><a href=\"#环境变量\" class=\"headerlink\" title=\"环境变量\"></a>环境变量</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 1.PM2 默认注入当前shell的环境变量</span><br><span class=\"line\"># 2.PM2注入配置文件中声明的环境变量，重名则覆盖</span><br><span class=\"line\"></span><br><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">  apps : [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        name: &quot;myapp&quot;,</span><br><span class=\"line\">        script: &quot;./app.js&quot;,</span><br><span class=\"line\">        watch: true,</span><br><span class=\"line\">        env: &#123;</span><br><span class=\"line\">            &quot;PORT&quot;: 3000,</span><br><span class=\"line\">            &quot;NODE_ENV&quot;: &quot;development&quot;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        env_production: &#123;</span><br><span class=\"line\">            &quot;PORT&quot;: 80,</span><br><span class=\"line\">            &quot;NODE_ENV&quot;: &quot;production&quot;,</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># 根据运行环境，选择不同的环境变量</span><br><span class=\"line\">ecosystem.config.js --env production</span><br><span class=\"line\"></span><br><span class=\"line\"># 默认  restarting or reloading 不会更新环境变量，如果需要更新可以使用如下方式</span><br><span class=\"line\">pm2 reload ecosystem.json --update-env</span><br><span class=\"line\"></span><br><span class=\"line\"># 指定实例个数的环境变量</span><br><span class=\"line\">NODE_APP_INSTANCE </span><br><span class=\"line\"></span><br><span class=\"line\"># 修改环境变量的名称</span><br><span class=\"line\">instance_var: &apos;INSTANCE_ID&apos;,</span><br></pre></td></tr></table></figure>\n<h3 id=\"应用日志管理\"><a href=\"#应用日志管理\" class=\"headerlink\" title=\"应用日志管理\"></a>应用日志管理</h3><p>PM2日志可以合并，也可以存放不同的日志文件中。</p>\n<h4 id=\"实时显示日志\"><a href=\"#实时显示日志\" class=\"headerlink\" title=\"实时显示日志\"></a>实时显示日志</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 查看logs命令帮助</span><br><span class=\"line\">pm2 logs -h</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示所有应用日志</span><br><span class=\"line\">pm2 logs</span><br><span class=\"line\"></span><br><span class=\"line\"># 指定正则匹配的应用的日志</span><br><span class=\"line\">pm2 logs /api/</span><br><span class=\"line\"></span><br><span class=\"line\">pm2 logs /server_[12]/</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示应用api的日志</span><br><span class=\"line\">pm2 logs api</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示应用api日志的 X 行</span><br><span class=\"line\">pm2 logs big-api --lines 1000</span><br><span class=\"line\"></span><br><span class=\"line\"># 格式化日志显示</span><br><span class=\"line\">pm2 logs --json pm2 logs --format</span><br><span class=\"line\"></span><br><span class=\"line\"># 应用启动指定显示方式 </span><br><span class=\"line\">pm2 start --log-type json app.json</span><br><span class=\"line\">pm2 start echo.js --merge-logs --log-date-format=&quot;YYYY-MM-DD HH:mm Z&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 或者配置文件中中指定 &quot;log_type&quot;: &quot;json&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 清除日志 （或者使用 pm2 install pm2-logrotate ）</span><br><span class=\"line\">pm2 flush</span><br><span class=\"line\"></span><br><span class=\"line\"># 不记录日志信息</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;out_file&quot;: &quot;/dev/null&quot;,</span><br><span class=\"line\">  &quot;error_file&quot;: &quot;/dev/null&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># 指定日志类型</span><br><span class=\"line\">pm2 logs main</span><br></pre></td></tr></table></figure>\n<h3 id=\"更新PM2\"><a href=\"#更新PM2\" class=\"headerlink\" title=\"更新PM2\"></a>更新PM2</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 保存当前进程信息</span><br><span class=\"line\">pm2 save</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装最新版pm2</span><br><span class=\"line\">npm install pm2 -g</span><br><span class=\"line\"></span><br><span class=\"line\"># 在内存中更新pm2</span><br><span class=\"line\">pm2 update</span><br></pre></td></tr></table></figure>\n<h3 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h3><p>本地我们可以直接通过 <code>pm2 start/stop</code>管理本地应用，通过deploy命令，在本地可以很轻松的将本地的应用部署远程服务器上。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">   &quot;apps&quot; : [&#123;</span><br><span class=\"line\">      &quot;name&quot; : &quot;HTTP-API&quot;,</span><br><span class=\"line\">      &quot;script&quot; : &quot;http.js&quot;</span><br><span class=\"line\">   &#125;],</span><br><span class=\"line\">   &quot;deploy&quot; : &#123;</span><br><span class=\"line\">     // &quot;production&quot; is the environment name</span><br><span class=\"line\">     &quot;production&quot; : &#123;</span><br><span class=\"line\">        // 已授权的公钥路径</span><br><span class=\"line\">        &quot;key&quot;  : &quot;/path/to/some.pem&quot;,           // 用户名</span><br><span class=\"line\">       &quot;user&quot; : &quot;ubuntu&quot;,</span><br><span class=\"line\">       // 主机</span><br><span class=\"line\">       &quot;host&quot; : [&quot;212.83.163.1&quot;, &quot;212.83.163.2&quot;, &quot;212.83.163.3&quot;],</span><br><span class=\"line\">       // 分支</span><br><span class=\"line\">       &quot;ref&quot;  : &quot;origin/master&quot;,</span><br><span class=\"line\">       // 代码库</span><br><span class=\"line\">       &quot;repo&quot; : &quot;git@github.com:Username/repository.git&quot;,</span><br><span class=\"line\">       // 远程服务器存放应用的路径</span><br><span class=\"line\">       &quot;path&quot; : &quot;/var/www/my-repository&quot;,</span><br><span class=\"line\">       // ssh 配置项 可以是字符串或者数组字符串</span><br><span class=\"line\">       &quot;ssh_options&quot;: &quot;StrictHostKeyChecking=no&quot;,</span><br><span class=\"line\">       // 安装依赖，可以是命令，多个命令用分号;分割，也可以用本地脚本文件的路径</span><br><span class=\"line\">       &quot;pre-setup&quot; : &quot;apt-get install git&quot;,</span><br><span class=\"line\">       // 代码库克隆完成执行 使用方式和 pre-setup一样</span><br><span class=\"line\">       &quot;post-setup&quot;: &quot;ls -la&quot;,</span><br><span class=\"line\">       // 本地要执行的代码</span><br><span class=\"line\">       &quot;pre-deploy-local&quot; : &quot;echo &apos;This is a local executed command&apos;&quot;</span><br><span class=\"line\">       // 代码库克隆完成,远程执行</span><br><span class=\"line\">       &quot;post-deploy&quot; : &quot;npm install; grunt dist&quot;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &quot;dev&quot; : &#123;</span><br><span class=\"line\">       &quot;user&quot; : &quot;ubuntu_dev&quot;,</span><br><span class=\"line\">       &quot;host&quot; : [&quot;192.168.0.12&quot;],</span><br><span class=\"line\">       &quot;ref&quot;  : &quot;origin/master&quot;,</span><br><span class=\"line\">       &quot;repo&quot; : &quot;git@github.com:Username/repository.git&quot;,</span><br><span class=\"line\">       &quot;path&quot; : &quot;/var/www/my-repository&quot;,</span><br><span class=\"line\">       &quot;post-deploy&quot; : &quot;npm install; grunt dist&quot;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># 本地生成公钥</span><br><span class=\"line\">ssh-keygen -t rsa</span><br><span class=\"line\">ssh-copy-id node@myserver.com</span><br><span class=\"line\"></span><br><span class=\"line\"># 远程部署，初始化应用目录</span><br><span class=\"line\">pm2 deploy production setup</span><br><span class=\"line\"></span><br><span class=\"line\"># 更新远程版本</span><br><span class=\"line\">pm2 deploy production update</span><br><span class=\"line\"></span><br><span class=\"line\"># 版本回退 Revert to -1 deployment</span><br><span class=\"line\">pm2 deploy production revert 1</span><br><span class=\"line\"></span><br><span class=\"line\"># 远程执行命令</span><br><span class=\"line\">pm2 deploy production exec &quot;pm2 reload all&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">pm2 startOrRestart all.json</span><br></pre></td></tr></table></figure>\n<p><a href=\"http://pm2.keymetrics.io/docs/usage/docker-pm2-nodejs/\" target=\"_blank\" rel=\"noopener\">Docker部署</a></p>\n<h3 id=\"将pm2设置成系统服务\"><a href=\"#将pm2设置成系统服务\" class=\"headerlink\" title=\"将pm2设置成系统服务\"></a>将pm2设置成系统服务</h3><ul>\n<li>systemd: Ubuntu &gt;= 16, CentOS &gt;= 7, Arch, Debian &gt;= 7</li>\n<li>upstart: Ubuntu &lt;= 14</li>\n<li>launchd: Darwin, MacOSx</li>\n<li>openrc: Gentoo Linux, Arch Linux</li>\n<li>rcd: FreeBSD</li>\n<li>systemv: Centos 6, Amazon Linux</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pm2 startup</span><br><span class=\"line\"></span><br><span class=\"line\"># 指定具体平台,不加参数会自动检测</span><br><span class=\"line\">pm2 startup [ubuntu | ubuntu14 | ubuntu12 | centos | centos6 | arch | oracle | amazon | macos | darwin | freebsd | systemd | systemv | upstart | launchd | rcd | openrc]</span><br><span class=\"line\"></span><br><span class=\"line\"># disable 自动启动</span><br><span class=\"line\">pm2 unstartup</span><br><span class=\"line\"></span><br><span class=\"line\"># 保存当前进程列表</span><br><span class=\"line\">pm2 save</span><br><span class=\"line\"></span><br><span class=\"line\"># 恢复之前保存的进程列表</span><br><span class=\"line\">pm2 resurrect</span><br></pre></td></tr></table></figure>\n<p>检测自启服务是否设置好</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Check if pm2-&lt;USER&gt; service has been added</span><br><span class=\"line\">$ systemctl list-units</span><br><span class=\"line\"># Check logs</span><br><span class=\"line\">$ journalctl -u pm2-&lt;USER&gt;</span><br><span class=\"line\"># Cat systemd configuration file</span><br><span class=\"line\">$ systemctl cat pm2-&lt;USER&gt;</span><br><span class=\"line\"># Analyze startup</span><br><span class=\"line\">$ systemd-analyze plot &gt; output.svg</span><br></pre></td></tr></table></figure>\n<h3 id=\"自动重启服务\"><a href=\"#自动重启服务\" class=\"headerlink\" title=\"自动重启服务\"></a>自动重启服务</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 当前目录或子目录文件改动自动重启服务</span><br><span class=\"line\">pm2 start app.js --watch</span><br><span class=\"line\"></span><br><span class=\"line\"># 不会停止检测文件改动</span><br><span class=\"line\">pm2 stop 0 </span><br><span class=\"line\"></span><br><span class=\"line\"># 停止检测文件改动</span><br><span class=\"line\">pm2 stop --watch 0 </span><br><span class=\"line\"></span><br><span class=\"line\"># 配置文件 详细配置检测文件路径</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;watch&quot;: [&quot;server&quot;, &quot;client&quot;],</span><br><span class=\"line\">  &quot;ignore_watch&quot; : [&quot;node_modules&quot;, &quot;client/img&quot;],</span><br><span class=\"line\">  &quot;watch_options&quot;: &#123;</span><br><span class=\"line\">    &quot;followSymlinks&quot;: false</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># 监测cpu及memory</span><br><span class=\"line\">pm2 monit</span><br></pre></td></tr></table></figure>\n<h3 id=\"sourcemap\"><a href=\"#sourcemap\" class=\"headerlink\" title=\"sourcemap\"></a>sourcemap</h3><p>当使用babeljs,typescript时，有了sourcemap，异常了可以找到具体错误信息。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 命令行指定 </span><br><span class=\"line\">pm2 start app.js --source-map-support</span><br><span class=\"line\">pm2 start app.js --disable-source-map</span><br><span class=\"line\"></span><br><span class=\"line\"># 配置文件指定</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;apps&quot; : [&#123;</span><br><span class=\"line\">    &quot;name&quot;              : &quot;my-app&quot;,</span><br><span class=\"line\">    &quot;script&quot;            : &quot;script.js&quot;,</span><br><span class=\"line\">    &quot;source_map_support&quot;: true</span><br><span class=\"line\">  &#125;]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"静态服务\"><a href=\"#静态服务\" class=\"headerlink\" title=\"静态服务\"></a>静态服务</h3><p>pm2 2.4.0 后可使用静态服务命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 命令行方式</span><br><span class=\"line\">pm2 serve &lt;path&gt; &lt;port&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"># 或者配置文件</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;script&quot;: &quot;serve&quot;,</span><br><span class=\"line\">  &quot;env&quot;: &#123;</span><br><span class=\"line\">    &quot;PM2_SERVE_PATH&quot;: &apos;.&apos;,</span><br><span class=\"line\">    &quot;PM2_SERVE_PORT&quot;: 8080</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><ul>\n<li><a href=\"http://pm2.keymetrics.io/docs/usage/process-metrics/#counter-sequential-value-change\" target=\"_blank\" rel=\"noopener\">进程性能指标</a></li>\n<li><a href=\"http://pm2.keymetrics.io/docs/usage/specifics/\" target=\"_blank\" rel=\"noopener\">非root使用authbind绑定80端口</a></li>\n<li><a href=\"http://pm2.keymetrics.io/docs/usage/pm2-api/\" target=\"_blank\" rel=\"noopener\">pm2 api</a></li>\n<li><a href=\"http://pm2.keymetrics.io/docs/usage/use-pm2-with-cloud-providers/\" target=\"_blank\" rel=\"noopener\">云服务使用pm2</a></li>\n<li><a href=\"http://pm2.keymetrics.io/docs/advanced/pm2-module-system/\" target=\"_blank\" rel=\"noopener\">pm2模块</a></li>\n</ul>\n"},{"title":"UTF-8 without BOM","date":"2017-04-21T03:49:42.000Z","_content":"\n今天遇到一个文件编码问题(非法字符`\\ufeff`)，导致代码异常；经过排查发现：文件编码是 UTF-8 + BOM，表现形式如下：\n```js\nvar a = '*{name:'test'}';\n```\n但是在编辑器（我用的`sublime text`）中**看不到那个星号**，在chrome源码显示面板中可以看到，于是设置文件编码`sublime text : File > Set File Encoding to(或者保存utf-8编码)`，星号依然存在。\n\n解决方案：\n由于本机安装了`Android studio`,于是用AS打开该文件，设置编码文件为`GBK` ,然后设置为`UTF-8`(特殊字符会变成`??`去掉多余的`?`),即可去掉BOM。\n\n在排除过程中也发现另外一个类似的问题:服务端json编码`UTF-8 + BOM`导致json解析报错。\n解决方案：\n设置服务端数据编码格式为`UTF-8`","source":"_posts/UTF-8-without-BOM.md","raw":"---\ntitle: UTF-8 without BOM\ndate: 2017-04-21 11:49:42\ntags:\n - 常见问题\n - js\n \ncategory: \n    - 常见问题\n---\n\n今天遇到一个文件编码问题(非法字符`\\ufeff`)，导致代码异常；经过排查发现：文件编码是 UTF-8 + BOM，表现形式如下：\n```js\nvar a = '*{name:'test'}';\n```\n但是在编辑器（我用的`sublime text`）中**看不到那个星号**，在chrome源码显示面板中可以看到，于是设置文件编码`sublime text : File > Set File Encoding to(或者保存utf-8编码)`，星号依然存在。\n\n解决方案：\n由于本机安装了`Android studio`,于是用AS打开该文件，设置编码文件为`GBK` ,然后设置为`UTF-8`(特殊字符会变成`??`去掉多余的`?`),即可去掉BOM。\n\n在排除过程中也发现另外一个类似的问题:服务端json编码`UTF-8 + BOM`导致json解析报错。\n解决方案：\n设置服务端数据编码格式为`UTF-8`","slug":"UTF-8-without-BOM","published":1,"updated":"2018-01-19T07:29:27.198Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjd332e4u000tc2mjk4l2zk2x","content":"<p>今天遇到一个文件编码问题(非法字符<code>\\ufeff</code>)，导致代码异常；经过排查发现：文件编码是 UTF-8 + BOM，表现形式如下：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">'*&#123;name:'</span>test<span class=\"string\">'&#125;'</span>;</span><br></pre></td></tr></table></figure></p>\n<p>但是在编辑器（我用的<code>sublime text</code>）中<strong>看不到那个星号</strong>，在chrome源码显示面板中可以看到，于是设置文件编码<code>sublime text : File &gt; Set File Encoding to(或者保存utf-8编码)</code>，星号依然存在。</p>\n<p>解决方案：<br>由于本机安装了<code>Android studio</code>,于是用AS打开该文件，设置编码文件为<code>GBK</code> ,然后设置为<code>UTF-8</code>(特殊字符会变成<code>??</code>去掉多余的<code>?</code>),即可去掉BOM。</p>\n<p>在排除过程中也发现另外一个类似的问题:服务端json编码<code>UTF-8 + BOM</code>导致json解析报错。<br>解决方案：<br>设置服务端数据编码格式为<code>UTF-8</code></p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天遇到一个文件编码问题(非法字符<code>\\ufeff</code>)，导致代码异常；经过排查发现：文件编码是 UTF-8 + BOM，表现形式如下：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">'*&#123;name:'</span>test<span class=\"string\">'&#125;'</span>;</span><br></pre></td></tr></table></figure></p>\n<p>但是在编辑器（我用的<code>sublime text</code>）中<strong>看不到那个星号</strong>，在chrome源码显示面板中可以看到，于是设置文件编码<code>sublime text : File &gt; Set File Encoding to(或者保存utf-8编码)</code>，星号依然存在。</p>\n<p>解决方案：<br>由于本机安装了<code>Android studio</code>,于是用AS打开该文件，设置编码文件为<code>GBK</code> ,然后设置为<code>UTF-8</code>(特殊字符会变成<code>??</code>去掉多余的<code>?</code>),即可去掉BOM。</p>\n<p>在排除过程中也发现另外一个类似的问题:服务端json编码<code>UTF-8 + BOM</code>导致json解析报错。<br>解决方案：<br>设置服务端数据编码格式为<code>UTF-8</code></p>\n"},{"title":"linux进程资源信息","date":"2017-04-16T17:24:36.000Z","_content":"## Linux进程与资源管理\nLinux最棒的地方在于它的多用户多任务环境，记录下多用户多任务相关的几个常用命令。\n\n### 前后台进程及切换\n有时候我们并不一定要在屏幕前工作，这时就需要使用到背景工作管理的一些指令，如 `&`，`ctrl+z`。\n\n如果想让程序在背景下执行，可以使用 `&`,由于是背景，该程序的输入并不会显示在屏幕上。\n\n语法格式: `command &`\n\n``` shell\n# 程序进入背景执行\nfind / -name test &\n\n# fg 将程序拉回屏幕前执行\nfg\n```\n\n也可以通过 `ctrl+z` 将正在运行的工作丢到背景下，放在背景下的最大好处就是不会被 `ctrl+c` 指令中断。\n\n如果出现某个时候需要暂时退出vim，但又不想保存退出，可 `ctrl+z` 暂时退出\n\n``` shell\n# 程序进入背景执行\nvim a.js\n\n# 将vim放到背景中，并没有退出\nctrl+z \n```\n\n可使用 `jobs` 可以查看任务列表，配合 `bg` ，`fg`将程序拉回屏幕。\n\n查看背景程序：`jobs`\n\n``` shell\n# 查看背景程序\njobs\n[1]  + suspended  vim a.js\n\n# 恢复vim编辑\nfg %1\n```\n\n`fg & bg `恢复背景进程\n\n``` shell\n#number 为jobs中方括号中的编号\nfg  %number\n\n#将背景程序中的程序由stopped变成running\nbg %number\n```\n\n`kill` 杀掉背景程序中的程序\n\n```shell\nkill -signal %number\nsignal\n    -1 :重新读取参数配置（类似reload）\n    -2 :类似Ctrl+c中断工作\n    -9 :强制杀掉进程\n    -15 :停止一个工作（默认值）\n    \n#杀掉vim 进程    \nkill -9 %1    \n```\n\n### 查看进程\n`ps` 查看进程信息\n\n```shell\nps -aux\n参数说明\n    a :显示所有程序\n    u :列出所有用户程序\n    x :列出所有tty程序\n    \n# 显示进程信息    \nps -aux\n\nUSER               PID  %CPU %MEM      VSZ    RSS   TT  STAT STARTED      TIME COMMAND\nnali              2557   3.0  1.2  2832304  49180   ??  S    五04下午   4:54.94 /Applications/iTerm 2.app/Contents/MacOS/iTerm2\nnali               920   1.6  0.8  2939412  34404   ??  S    四07下午   5:26.69 /Applications/QQ.app/Contents/MacOS/QQ   \n\n#干掉进程 \nkill -9 pid\n\n```\n另外一个显示进程的命令是 `top` 可动态显示。\n查看内存使用：`free`\n查看系统资源：`sar`\n\n\n\n\n### 程序优先级\n由于CPU资源有限，优先级高的程序会先获取CPU资源。\n\n```shell\nps -l\n\nUID   PID  PPID        F CPU PRI NI       SZ    RSS WCHAN     S             ADDR TTY           TIME CMD\n501  9005  2557     4006   0  31  0  2507116   9148 -      Ss                  0 ttys001    0:00.07 /Applications/iTerm 2.app/Contents/MacOS/iTerm2 --server login \n\n#PRI 代表程序优先级，越小越先被执行\nNI 代表nice的值\n```\n*PRI越小越优先被执行*\n\n`PRI(new) = PRI(old) + nice`\n\n>一般用户可用的nice值 0~19\nroot可用的nice值-20~19\n\n调整程序的的优先级\n`nice [-n number] command`\n\n调整运行中程序的优先级\n`renice number PID`\n\n### 查看系统相关信息\n`uname` 查看系统信息\n\n```shell \nuname \n参数信息：\n    -a :列出所有信息\n    -p :列出CPU信息\n    -r :列出核心版本信息\n    -n :列出版本信息 \n```\n\n`dmesg` 查看启动一闪而过的信息\n\n`uptime` 显示开机时间及负载相关信息\n\n`last` 显示登录信息\n\n`hostname` 显示主机名\n\n\n`who` 查看当前系统上的用户(只列出用户名及登录时间)\n\n`w` 查看当前系统上的用户(列出用户名及登录时间 + 源地址IP + 工作项 + ..)\n\n`whoami` 显示当前登录用户名\n\n\n`ntpdate` 网络校时\n\n```shell\n# 校时服务器 time.stdtime.gov.tw\n\n# 执行校时命令\nntpdate time.stdtime.gov.tw\n\n# 可配合crontab定时校时\n```\n\n\n\n\n\n\n\n","source":"_posts/linux进程资源信息.md","raw":"---\ntitle: linux进程资源信息\ndate: 2017-04-17 01:24:36\ntags:\n    - linux\n\ncategory: \n    - linux\n    \n---\n## Linux进程与资源管理\nLinux最棒的地方在于它的多用户多任务环境，记录下多用户多任务相关的几个常用命令。\n\n### 前后台进程及切换\n有时候我们并不一定要在屏幕前工作，这时就需要使用到背景工作管理的一些指令，如 `&`，`ctrl+z`。\n\n如果想让程序在背景下执行，可以使用 `&`,由于是背景，该程序的输入并不会显示在屏幕上。\n\n语法格式: `command &`\n\n``` shell\n# 程序进入背景执行\nfind / -name test &\n\n# fg 将程序拉回屏幕前执行\nfg\n```\n\n也可以通过 `ctrl+z` 将正在运行的工作丢到背景下，放在背景下的最大好处就是不会被 `ctrl+c` 指令中断。\n\n如果出现某个时候需要暂时退出vim，但又不想保存退出，可 `ctrl+z` 暂时退出\n\n``` shell\n# 程序进入背景执行\nvim a.js\n\n# 将vim放到背景中，并没有退出\nctrl+z \n```\n\n可使用 `jobs` 可以查看任务列表，配合 `bg` ，`fg`将程序拉回屏幕。\n\n查看背景程序：`jobs`\n\n``` shell\n# 查看背景程序\njobs\n[1]  + suspended  vim a.js\n\n# 恢复vim编辑\nfg %1\n```\n\n`fg & bg `恢复背景进程\n\n``` shell\n#number 为jobs中方括号中的编号\nfg  %number\n\n#将背景程序中的程序由stopped变成running\nbg %number\n```\n\n`kill` 杀掉背景程序中的程序\n\n```shell\nkill -signal %number\nsignal\n    -1 :重新读取参数配置（类似reload）\n    -2 :类似Ctrl+c中断工作\n    -9 :强制杀掉进程\n    -15 :停止一个工作（默认值）\n    \n#杀掉vim 进程    \nkill -9 %1    \n```\n\n### 查看进程\n`ps` 查看进程信息\n\n```shell\nps -aux\n参数说明\n    a :显示所有程序\n    u :列出所有用户程序\n    x :列出所有tty程序\n    \n# 显示进程信息    \nps -aux\n\nUSER               PID  %CPU %MEM      VSZ    RSS   TT  STAT STARTED      TIME COMMAND\nnali              2557   3.0  1.2  2832304  49180   ??  S    五04下午   4:54.94 /Applications/iTerm 2.app/Contents/MacOS/iTerm2\nnali               920   1.6  0.8  2939412  34404   ??  S    四07下午   5:26.69 /Applications/QQ.app/Contents/MacOS/QQ   \n\n#干掉进程 \nkill -9 pid\n\n```\n另外一个显示进程的命令是 `top` 可动态显示。\n查看内存使用：`free`\n查看系统资源：`sar`\n\n\n\n\n### 程序优先级\n由于CPU资源有限，优先级高的程序会先获取CPU资源。\n\n```shell\nps -l\n\nUID   PID  PPID        F CPU PRI NI       SZ    RSS WCHAN     S             ADDR TTY           TIME CMD\n501  9005  2557     4006   0  31  0  2507116   9148 -      Ss                  0 ttys001    0:00.07 /Applications/iTerm 2.app/Contents/MacOS/iTerm2 --server login \n\n#PRI 代表程序优先级，越小越先被执行\nNI 代表nice的值\n```\n*PRI越小越优先被执行*\n\n`PRI(new) = PRI(old) + nice`\n\n>一般用户可用的nice值 0~19\nroot可用的nice值-20~19\n\n调整程序的的优先级\n`nice [-n number] command`\n\n调整运行中程序的优先级\n`renice number PID`\n\n### 查看系统相关信息\n`uname` 查看系统信息\n\n```shell \nuname \n参数信息：\n    -a :列出所有信息\n    -p :列出CPU信息\n    -r :列出核心版本信息\n    -n :列出版本信息 \n```\n\n`dmesg` 查看启动一闪而过的信息\n\n`uptime` 显示开机时间及负载相关信息\n\n`last` 显示登录信息\n\n`hostname` 显示主机名\n\n\n`who` 查看当前系统上的用户(只列出用户名及登录时间)\n\n`w` 查看当前系统上的用户(列出用户名及登录时间 + 源地址IP + 工作项 + ..)\n\n`whoami` 显示当前登录用户名\n\n\n`ntpdate` 网络校时\n\n```shell\n# 校时服务器 time.stdtime.gov.tw\n\n# 执行校时命令\nntpdate time.stdtime.gov.tw\n\n# 可配合crontab定时校时\n```\n\n\n\n\n\n\n\n","slug":"linux进程资源信息","published":1,"updated":"2018-01-19T07:29:27.202Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjd332e4v000vc2mjxwprma4g","content":"<h2 id=\"Linux进程与资源管理\"><a href=\"#Linux进程与资源管理\" class=\"headerlink\" title=\"Linux进程与资源管理\"></a>Linux进程与资源管理</h2><p>Linux最棒的地方在于它的多用户多任务环境，记录下多用户多任务相关的几个常用命令。</p>\n<h3 id=\"前后台进程及切换\"><a href=\"#前后台进程及切换\" class=\"headerlink\" title=\"前后台进程及切换\"></a>前后台进程及切换</h3><p>有时候我们并不一定要在屏幕前工作，这时就需要使用到背景工作管理的一些指令，如 <code>&amp;</code>，<code>ctrl+z</code>。</p>\n<p>如果想让程序在背景下执行，可以使用 <code>&amp;</code>,由于是背景，该程序的输入并不会显示在屏幕上。</p>\n<p>语法格式: <code>command &amp;</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 程序进入背景执行</span></span><br><span class=\"line\">find / -name test &amp;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> <span class=\"built_in\">fg</span> 将程序拉回屏幕前执行</span></span><br><span class=\"line\">fg</span><br></pre></td></tr></table></figure>\n<p>也可以通过 <code>ctrl+z</code> 将正在运行的工作丢到背景下，放在背景下的最大好处就是不会被 <code>ctrl+c</code> 指令中断。</p>\n<p>如果出现某个时候需要暂时退出vim，但又不想保存退出，可 <code>ctrl+z</code> 暂时退出</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 程序进入背景执行</span></span><br><span class=\"line\">vim a.js</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 将vim放到背景中，并没有退出</span></span><br><span class=\"line\">ctrl+z</span><br></pre></td></tr></table></figure>\n<p>可使用 <code>jobs</code> 可以查看任务列表，配合 <code>bg</code> ，<code>fg</code>将程序拉回屏幕。</p>\n<p>查看背景程序：<code>jobs</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 查看背景程序</span></span><br><span class=\"line\">jobs</span><br><span class=\"line\">[1]  + suspended  vim a.js</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 恢复vim编辑</span></span><br><span class=\"line\">fg %1</span><br></pre></td></tr></table></figure>\n<p><code>fg &amp; bg</code>恢复背景进程</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">number 为<span class=\"built_in\">jobs</span>中方括号中的编号</span></span><br><span class=\"line\">fg  %number</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">将背景程序中的程序由stopped变成running</span></span><br><span class=\"line\">bg %number</span><br></pre></td></tr></table></figure>\n<p><code>kill</code> 杀掉背景程序中的程序</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kill -signal %number</span><br><span class=\"line\">signal</span><br><span class=\"line\">    -1 :重新读取参数配置（类似reload）</span><br><span class=\"line\">    -2 :类似Ctrl+c中断工作</span><br><span class=\"line\">    -9 :强制杀掉进程</span><br><span class=\"line\">    -15 :停止一个工作（默认值）</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">杀掉vim 进程    </span></span><br><span class=\"line\">kill -9 %1</span><br></pre></td></tr></table></figure>\n<h3 id=\"查看进程\"><a href=\"#查看进程\" class=\"headerlink\" title=\"查看进程\"></a>查看进程</h3><p><code>ps</code> 查看进程信息</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps -aux</span><br><span class=\"line\">参数说明</span><br><span class=\"line\">    a :显示所有程序</span><br><span class=\"line\">    u :列出所有用户程序</span><br><span class=\"line\">    x :列出所有tty程序</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示进程信息    </span></span><br><span class=\"line\">ps -aux</span><br><span class=\"line\"></span><br><span class=\"line\">USER               PID  %CPU %MEM      VSZ    RSS   TT  STAT STARTED      TIME COMMAND</span><br><span class=\"line\">nali              2557   3.0  1.2  2832304  49180   ??  S    五04下午   4:54.94 /Applications/iTerm 2.app/Contents/MacOS/iTerm2</span><br><span class=\"line\">nali               920   1.6  0.8  2939412  34404   ??  S    四07下午   5:26.69 /Applications/QQ.app/Contents/MacOS/QQ   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">干掉进程 </span></span><br><span class=\"line\">kill -9 pid</span><br></pre></td></tr></table></figure>\n<p>另外一个显示进程的命令是 <code>top</code> 可动态显示。<br>查看内存使用：<code>free</code><br>查看系统资源：<code>sar</code></p>\n<h3 id=\"程序优先级\"><a href=\"#程序优先级\" class=\"headerlink\" title=\"程序优先级\"></a>程序优先级</h3><p>由于CPU资源有限，优先级高的程序会先获取CPU资源。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps -l</span><br><span class=\"line\"></span><br><span class=\"line\">UID   PID  PPID        F CPU PRI NI       SZ    RSS WCHAN     S             ADDR TTY           TIME CMD</span><br><span class=\"line\">501  9005  2557     4006   0  31  0  2507116   9148 -      Ss                  0 ttys001    0:00.07 /Applications/iTerm 2.app/Contents/MacOS/iTerm2 --server login </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">PRI 代表程序优先级，越小越先被执行</span></span><br><span class=\"line\">NI 代表nice的值</span><br></pre></td></tr></table></figure>\n<p><em>PRI越小越优先被执行</em></p>\n<p><code>PRI(new) = PRI(old) + nice</code></p>\n<blockquote>\n<p>一般用户可用的nice值 0~19<br>root可用的nice值-20~19</p>\n</blockquote>\n<p>调整程序的的优先级<br><code>nice [-n number] command</code></p>\n<p>调整运行中程序的优先级<br><code>renice number PID</code></p>\n<h3 id=\"查看系统相关信息\"><a href=\"#查看系统相关信息\" class=\"headerlink\" title=\"查看系统相关信息\"></a>查看系统相关信息</h3><p><code>uname</code> 查看系统信息</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uname </span><br><span class=\"line\">参数信息：</span><br><span class=\"line\">    -a :列出所有信息</span><br><span class=\"line\">    -p :列出CPU信息</span><br><span class=\"line\">    -r :列出核心版本信息</span><br><span class=\"line\">    -n :列出版本信息</span><br></pre></td></tr></table></figure>\n<p><code>dmesg</code> 查看启动一闪而过的信息</p>\n<p><code>uptime</code> 显示开机时间及负载相关信息</p>\n<p><code>last</code> 显示登录信息</p>\n<p><code>hostname</code> 显示主机名</p>\n<p><code>who</code> 查看当前系统上的用户(只列出用户名及登录时间)</p>\n<p><code>w</code> 查看当前系统上的用户(列出用户名及登录时间 + 源地址IP + 工作项 + ..)</p>\n<p><code>whoami</code> 显示当前登录用户名</p>\n<p><code>ntpdate</code> 网络校时</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 校时服务器 time.stdtime.gov.tw</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 执行校时命令</span></span><br><span class=\"line\">ntpdate time.stdtime.gov.tw</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 可配合crontab定时校时</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Linux进程与资源管理\"><a href=\"#Linux进程与资源管理\" class=\"headerlink\" title=\"Linux进程与资源管理\"></a>Linux进程与资源管理</h2><p>Linux最棒的地方在于它的多用户多任务环境，记录下多用户多任务相关的几个常用命令。</p>\n<h3 id=\"前后台进程及切换\"><a href=\"#前后台进程及切换\" class=\"headerlink\" title=\"前后台进程及切换\"></a>前后台进程及切换</h3><p>有时候我们并不一定要在屏幕前工作，这时就需要使用到背景工作管理的一些指令，如 <code>&amp;</code>，<code>ctrl+z</code>。</p>\n<p>如果想让程序在背景下执行，可以使用 <code>&amp;</code>,由于是背景，该程序的输入并不会显示在屏幕上。</p>\n<p>语法格式: <code>command &amp;</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 程序进入背景执行</span></span><br><span class=\"line\">find / -name test &amp;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> <span class=\"built_in\">fg</span> 将程序拉回屏幕前执行</span></span><br><span class=\"line\">fg</span><br></pre></td></tr></table></figure>\n<p>也可以通过 <code>ctrl+z</code> 将正在运行的工作丢到背景下，放在背景下的最大好处就是不会被 <code>ctrl+c</code> 指令中断。</p>\n<p>如果出现某个时候需要暂时退出vim，但又不想保存退出，可 <code>ctrl+z</code> 暂时退出</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 程序进入背景执行</span></span><br><span class=\"line\">vim a.js</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 将vim放到背景中，并没有退出</span></span><br><span class=\"line\">ctrl+z</span><br></pre></td></tr></table></figure>\n<p>可使用 <code>jobs</code> 可以查看任务列表，配合 <code>bg</code> ，<code>fg</code>将程序拉回屏幕。</p>\n<p>查看背景程序：<code>jobs</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 查看背景程序</span></span><br><span class=\"line\">jobs</span><br><span class=\"line\">[1]  + suspended  vim a.js</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 恢复vim编辑</span></span><br><span class=\"line\">fg %1</span><br></pre></td></tr></table></figure>\n<p><code>fg &amp; bg</code>恢复背景进程</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">number 为<span class=\"built_in\">jobs</span>中方括号中的编号</span></span><br><span class=\"line\">fg  %number</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">将背景程序中的程序由stopped变成running</span></span><br><span class=\"line\">bg %number</span><br></pre></td></tr></table></figure>\n<p><code>kill</code> 杀掉背景程序中的程序</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kill -signal %number</span><br><span class=\"line\">signal</span><br><span class=\"line\">    -1 :重新读取参数配置（类似reload）</span><br><span class=\"line\">    -2 :类似Ctrl+c中断工作</span><br><span class=\"line\">    -9 :强制杀掉进程</span><br><span class=\"line\">    -15 :停止一个工作（默认值）</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">杀掉vim 进程    </span></span><br><span class=\"line\">kill -9 %1</span><br></pre></td></tr></table></figure>\n<h3 id=\"查看进程\"><a href=\"#查看进程\" class=\"headerlink\" title=\"查看进程\"></a>查看进程</h3><p><code>ps</code> 查看进程信息</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps -aux</span><br><span class=\"line\">参数说明</span><br><span class=\"line\">    a :显示所有程序</span><br><span class=\"line\">    u :列出所有用户程序</span><br><span class=\"line\">    x :列出所有tty程序</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示进程信息    </span></span><br><span class=\"line\">ps -aux</span><br><span class=\"line\"></span><br><span class=\"line\">USER               PID  %CPU %MEM      VSZ    RSS   TT  STAT STARTED      TIME COMMAND</span><br><span class=\"line\">nali              2557   3.0  1.2  2832304  49180   ??  S    五04下午   4:54.94 /Applications/iTerm 2.app/Contents/MacOS/iTerm2</span><br><span class=\"line\">nali               920   1.6  0.8  2939412  34404   ??  S    四07下午   5:26.69 /Applications/QQ.app/Contents/MacOS/QQ   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">干掉进程 </span></span><br><span class=\"line\">kill -9 pid</span><br></pre></td></tr></table></figure>\n<p>另外一个显示进程的命令是 <code>top</code> 可动态显示。<br>查看内存使用：<code>free</code><br>查看系统资源：<code>sar</code></p>\n<h3 id=\"程序优先级\"><a href=\"#程序优先级\" class=\"headerlink\" title=\"程序优先级\"></a>程序优先级</h3><p>由于CPU资源有限，优先级高的程序会先获取CPU资源。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps -l</span><br><span class=\"line\"></span><br><span class=\"line\">UID   PID  PPID        F CPU PRI NI       SZ    RSS WCHAN     S             ADDR TTY           TIME CMD</span><br><span class=\"line\">501  9005  2557     4006   0  31  0  2507116   9148 -      Ss                  0 ttys001    0:00.07 /Applications/iTerm 2.app/Contents/MacOS/iTerm2 --server login </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">PRI 代表程序优先级，越小越先被执行</span></span><br><span class=\"line\">NI 代表nice的值</span><br></pre></td></tr></table></figure>\n<p><em>PRI越小越优先被执行</em></p>\n<p><code>PRI(new) = PRI(old) + nice</code></p>\n<blockquote>\n<p>一般用户可用的nice值 0~19<br>root可用的nice值-20~19</p>\n</blockquote>\n<p>调整程序的的优先级<br><code>nice [-n number] command</code></p>\n<p>调整运行中程序的优先级<br><code>renice number PID</code></p>\n<h3 id=\"查看系统相关信息\"><a href=\"#查看系统相关信息\" class=\"headerlink\" title=\"查看系统相关信息\"></a>查看系统相关信息</h3><p><code>uname</code> 查看系统信息</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uname </span><br><span class=\"line\">参数信息：</span><br><span class=\"line\">    -a :列出所有信息</span><br><span class=\"line\">    -p :列出CPU信息</span><br><span class=\"line\">    -r :列出核心版本信息</span><br><span class=\"line\">    -n :列出版本信息</span><br></pre></td></tr></table></figure>\n<p><code>dmesg</code> 查看启动一闪而过的信息</p>\n<p><code>uptime</code> 显示开机时间及负载相关信息</p>\n<p><code>last</code> 显示登录信息</p>\n<p><code>hostname</code> 显示主机名</p>\n<p><code>who</code> 查看当前系统上的用户(只列出用户名及登录时间)</p>\n<p><code>w</code> 查看当前系统上的用户(列出用户名及登录时间 + 源地址IP + 工作项 + ..)</p>\n<p><code>whoami</code> 显示当前登录用户名</p>\n<p><code>ntpdate</code> 网络校时</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 校时服务器 time.stdtime.gov.tw</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 执行校时命令</span></span><br><span class=\"line\">ntpdate time.stdtime.gov.tw</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 可配合crontab定时校时</span></span><br></pre></td></tr></table></figure>\n"},{"title":"next快速入门","date":"2017-08-17T12:16:53.000Z","_content":"\n\n\nNext是react服务端渲染框架。\n\n### 特点\n- 默认服务端渲染\n- 自动切分代码\n- 基于webpack开发，支持HMR\n- 可以集成Express或其他Node server\n- 可以自定义Babel和Webpack配置\n\n\n### 快速入门\n\n#### 初始化项目\n\n```bash\nmkdir hello-next\ncd hello-next\nnpm init -y\nnpm install --save react react-dom next\n# pages是页面路由目录，必须有，路由默认是基于该目录下的文件\nmkdir pages\n```\nnpm script 添加如下代码\n\n``` js\n{\n  \"scripts\": {\n    \"dev\": \"next\"\n  }\n}\n\n// npm run dev 即可运行开发服务器 http://localhost:3000\n```\n目前没有路由，访问会出现404页面，接下来添加路由。\n\n#### 添加路由\n在pages目录下添加index.js(pages/index.js),内容如下：\n\n``` js\nconst Index = () => (\n  <div>\n    <p>Hello Next.js</p>\n  </div>\n)\nexport default Index\n```\n>React组件要 **默认** 导出；默认情况下`pages`为路由目录，`static`为静态文件目录。\n\n#### 页面导航\n添加about页面\n\n```js\nexport default () => (\n  <div>\n    <p>This is the about page</p>\n  </div>\n)\n```\n通过 `a` 标签可以很容易做到页面跳转，但那是通过服务端导航，不是我们想要的，我们可以通过 `next/link`支持客户端导航。\n\n```js\nimport Link from 'next/link'\n\nconst Index = () => (\n  <div>\n    <Link href=\"/about\">\n      <a>About Page</a>\n    </Link>\n    <p>Hello Next.js</p>\n  </div>\n)\n\nexport default Index\n```\n或者\n\n```js\n// 包裹按钮\n<Link href=\"/about\">\n  <button>Go to About Page</button>\n</Link>\n```\n\n>Link组件包裹a标签，处理页面跳转，无论是a，button还是其他组件(比如div)，只要Link子组件接收onClick属性，都可以跳转。\n\n链接添加样式\n\n```js\n// 生效\n<Link href=\"/about\">\n  <a style={{ fontSize: 20 }}>About Page</a>\n</Link>\n\n// 不生效\n<Link href=\"/about\" style={{ fontSize: 20 }}>\n  <a>About Page</a>\n</Link>\n```\n>Link是高阶组件，直接收 href等一些其他属性，不支持style。\n\n\n#### 共享组件\n多个页面经常会有公用部分（比如Head），我们可以新建`components/Header.js`\n\n```js\nimport Link from 'next/link'\n\nconst linkStyle = {\n  marginRight: 15\n}\n\nconst Header = () => (\n    <div>\n        <Link href=\"/\">\n          <a style={linkStyle}>Home</a>\n        </Link>\n        <Link href=\"/about\">\n          <a style={linkStyle}>About</a>\n        </Link>\n    </div>\n)\nexport default Header\n```\n在首页中导入`Head`组件\n\n```js\nimport Header from '../components/Header'\n\nexport default () => (\n  <div>\n    <Header />\n    <p>Hello Next.js</p>\n  </div>\n)\n```\n>组件可以放在任何目录中，除了 **pages** 目录，pages下的文件跟服务端路由相关。\n\n#### Layout组件\n可以将整个页面框架做成layout组件(components/MyLayout.js)，各个页面复用\n\nLayout组件\n\n```js\nimport Header from './Header'\n\nconst layoutStyle = {\n  margin: 20,\n  padding: 20,\n  border: '1px solid #DDD'\n}\n\nconst Layout = (props) => (\n  <div style={layoutStyle}>\n    <Header />\n    {props.children}\n  </div>\n)\n\nexport default Layout\n\n```\n\nindex页面\n\n```js\n// pages/index.js\n\nimport Layout from '../components/MyLayout.js'\n\nexport default () => (\n    <Layout>\n       <p>Hello Next.js</p>\n    </Layout>\n)\n```\n\nabout页面\n\n```js\npages/about.js\n\nimport Layout from '../components/MyLayout.js'\n\nexport default () => (\n    <Layout>\n       <p>about</p>\n    </Layout>\n)\n```\nlayout除了使用`{props.children}`还可以使用属性传值,高级组件的方式。\n\n```js\nimport withLayout from '../lib/layout'\n\nconst Page = () => (\n  <p>This is the about page</p>\n)\nexport default withLayout(Page)\n```\n\n```js\n// pages/index.js\nconst Page = () => (\n  <p>This is the about page</p>\n)\n\nexport default () => (<Layout page={Page}/>)\n```\n\n#### 动态页面\n前边我们实现了静态页面，现在我们通过 query string 实现动态页面。\n\n```js\n// pages/index.js\n\nimport Layout from '../components/MyLayout.js'\nimport Link from 'next/link'\n\nconst PostLink = (props) => (\n  <li>\n    <Link href={`/post?title=${props.title}`}>\n      <a>{props.title}</a>\n    </Link>\n  </li>\n)\n// 通过Link组件href属性向下一个页面传参\n\nexport default () => (\n  <Layout>\n    <h1>My Blog</h1>\n    <ul>\n      <PostLink title=\"Hello Next.js\"/>\n      <PostLink title=\"Learn Next.js is awesome\"/>\n      <PostLink title=\"Deploy apps with Zeit\"/>\n    </ul>\n  </Layout>\n)\n\n```\n处理查询参数\n\n```js\nimport Layout from '../components/MyLayout.js'\n\nexport default (props) => (\n    <Layout>\n       <h1>{props.url.query.title}</h1>\n       <p>This is the blog post content.</p>\n    </Layout>\n)\n```\n\n只有default导出的组件才有`url`属性\n\n```js\nimport Layout from '../components/MyLayout.js'\n\nconst Content = (props) => (\n  <div>\n    <h1>{props.url.query.title}</h1>\n    <p>This is the blog post content.</p>\n  </div>\n)\n\nexport default () => (\n    <Layout>\n       <Content />\n    </Layout>\n)\n\n// 页面会抛出异常\n\n// 可以通过组件传值的方式将url参数带到子组件中去\n<Layout>\n   <Content url={props.url} />\n</Layout>\n\n```\n>每个页面都会获取`url`属性，可以`props.url.query.title`拿到相关的数据。\n\n#### 自定义路由\nLink组件有个`as`属性，我们可以通过它自定义路由格式，它会显示在浏览器的地址栏中，但实际下个页面接收的数据还是href属性上的参数。\n\n```js\nconst PostLink = (props) => (\n  <li>\n    <Link as={`/p/${props.id}`} href={`/post?title=${props.title}`}>\n      <a>{props.title}</a>\n    </Link>\n  </li>\n)\n```\n>虽然可以自定义客户端路由显示，但是刷新页面可能会404,服务端没有对应的路由。\n\n#### 自定义服务器\n\n安装`Express`\n\n```js\nnpm install --save express\n```\n根目录下创建`server.js`\n\n```js\nconst express = require('express')\nconst next = require('next')\n\nconst dev = process.env.NODE_ENV !== 'production'\nconst app = next({ dev })\nconst handle = app.getRequestHandler()\n\napp.prepare()\n.then(() => {\n  const server = express()\n\n  // 处理对应路由\n  server.get('/p/:id', (req, res) => {\n    const actualPage = '/post'\n    // 这里拿到的title是路由中的id,而客户端路由拿到的是Link href中的title，有点区别，但实际生产环境中都会使用资源id去请求数据。\n    const queryParams = { title: req.params.id } \n    // 定义了一个路由映射到已存在页面，同时附带查询参数\n    app.render(req, res, actualPage, queryParams)\n  })\n  \n  server.get('*', (req, res) => {\n    return handle(req, res)\n  })\n\n  server.listen(3000, (err) => {\n    if (err) throw err\n    console.log('> Ready on http://localhost:3000')\n  })\n})\n.catch((ex) => {\n  console.error(ex.stack)\n  process.exit(1)\n})\n```\n\n更新下npm脚本\n\n```js\n{\n  \"scripts\": {\n    \"dev\": \"node server.js\"\n  }\n}\n```\n\n#### 远程获取数据\n可以通过一个异步方法`getInitialProps`（同时支持客户端和服务端）来获取远程数据。\n\n安装 `isomorphic-unfetch` 请求模块\n\n```bash\nnpm install --save isomorphic-unfetch\n```\n\n修改首页内容\n\n```js\nimport Layout from '../components/MyLayout.js'\nimport Link from 'next/link'\nimport fetch from 'isomorphic-unfetch'\n\nconst Index = (props) => (\n  <Layout>\n    <h1>Batman TV Shows</h1>\n    <ul>\n      {props.shows.map(({show}) => (\n        <li key={show.id}>\n          <Link as={`/p/${show.id}`} href={`/post?id=${show.id}`}>\n            <a>{show.name}</a>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  </Layout>\n)\n\nPost.getInitialProps = async function (context) {\n  // 可以通过context上的query拿到查询参数\n  const { id } = context.query\n  const res = await fetch(`https://api.tvmaze.com/shows/${id}`)\n  const show = await res.json()\n\n  console.log(`Fetched show: ${show.name}`)\n\n  return { show }\n}\n\nexport default Index\n```\n\ngetInitialProps receives a context object with the following properties:\n\n```\npathname - path section of URL\nquery - query string section of URL parsed as an object\nasPath - the actual url path\nreq - HTTP request object (server only)\nres - HTTP response object (server only)\njsonPageRes - Fetch Response object (client only)\nerr - Error object if any error is encountered during the rendering\n```\n\n#### 组件样式\n给组件添加样式有如下两种方法：\n\n- 外部引入css文件\n- css in js （next推荐）\n\nnext.js使用 [styled-jxs](https://github.com/zeit/styled-jsx)控制局部样式。\n\n```js\nimport Layout from '../components/MyLayout.js'\nimport Link from 'next/link'\n\nfunction getPosts () {\n  return [\n    { id: 'hello-nextjs', title: 'Hello Next.js'},\n    { id: 'learn-nextjs', title: 'Learn Next.js is awesome'},\n    { id: 'deploy-nextjs', title: 'Deploy apps with ZEIT'},\n  ]\n}\n\nexport default () => (\n  <Layout>\n    <h1>My Blog</h1>\n    <ul>\n      {getPosts().map((post) => (\n        <li key={post.id}>\n          <Link as={`/p/${post.id}`} href={`/post?title=${post.title}`}>\n            <a>{post.title}</a>\n          </Link>\n          <!-- prefetch 会预加载下个页面的脚本，不会加载数据-->\n          <li><Link prefetch href='/'><a>Home</a></Link></li>\n        </li>\n      ))}\n    </ul>\n    <!-- 除了 Link 添加prefech属性，还可以通过脚本预加载-->\n    <a onClick={ () => setTimeout(() => url.pushTo('/dynamic'), 100) }>\n      A route transition will happen after 100ms\n    </a>\n    {\n      // but we can prefetch it!\n      Router.prefetch('/dynamic')\n    }\n    // 样式必须用反引号包裹，必须放在模板字符串中，Styled jsx仅仅作为一个babel插件\n    <style jsx>{`\n      h1, a {\n        font-family: \"Arial\";\n      }\n\n      ul {\n        padding: 0;\n      }\n\n      li {\n        list-style: none;\n        margin: 5px 0;\n      }\n\n      a {\n        text-decoration: none;\n        color: blue;\n      }\n\n      a:hover {\n        opacity: 0.6;\n      }\n    `}</style>\n  </Layout>\n)\n```\n\n>styled-jsx 样式默认不作用于子组件，如果要子组件生效，可以单独定义子组件样式，或者使用全局样式。\n\n`styled-jsx` 全局样式\n\n```js\n<style jsx global>{`\n     .markdown {\n       font-family: 'Arial';\n     }\n\n     .markdown a {\n       text-decoration: none;\n       color: blue;\n     }\n\n     .markdown a:hover {\n       opacity: 0.6;\n     }\n\n     .markdown h3 {\n       margin: 0;\n       padding: 0;\n       text-transform: uppercase;\n     }\n  `}</style>\n\n```\n\n### 应用部署\n#### 部署步骤\n\n1. build代码\n2. 启动服务\n\n修改下npm脚本\n\n```js\n\"scripts\": {\n  \"build\": \"next build\",\n  \"start\": \"next start\"\n}\n```\n\n#### 启动多个服务\n为了水平扩展，通常会使用多个app实例\n\n```js\n//$PORT 为环境变量\n\"scripts\": {\n  \"start\": \"next start -p $PORT\"\n}\n\n//window下用 \"next start -p %PORT%\"\n```\n\n调用\n```bash\nPORT=8000 npm start\nPORT=9000 npm start\n```\n可以通过 [cross-env](https://www.npmjs.com/package/cross-env) 设置环境变量。\n\n\n\n### 高阶使用\n\n#### 导出静态网站\n\n在根目录下创建文件`next.config.js`\n\n```js\nmodule.exports = {\n  exportPathMap: function () {\n    return {\n      '/': { page: '/' },\n      '/about': { page: '/about' },\n      '/p/hello-nextjs': { page: '/post', query: { title: \"Hello Next.js\" } },\n      '/p/learn-nextjs': { page: '/post', query: { title: \"Learn Next.js is awesome\" } }\n    }\n  }\n}\n```\n\n修改npm脚本\n\n```js\n{\n  \"scripts\": {\n    \"build\": \"next build\",\n    \"export\": \"next export\"\n  }\n}\n```\n执行导出命令\n\n```bash\nnpm run export\n```\n导入内容会放在`out`目录中，可放在任何静态服务器上使用。\n\n\n☞[官网](https://github.com/zeit/next.js#custom-server-and-routing)\n\n","source":"_posts/next.md","raw":"---\ntitle: next快速入门\ndate: 2017-08-17 20:16:53\ntags:\n    - js\n\ncategory: \n    - js\n---\n\n\n\nNext是react服务端渲染框架。\n\n### 特点\n- 默认服务端渲染\n- 自动切分代码\n- 基于webpack开发，支持HMR\n- 可以集成Express或其他Node server\n- 可以自定义Babel和Webpack配置\n\n\n### 快速入门\n\n#### 初始化项目\n\n```bash\nmkdir hello-next\ncd hello-next\nnpm init -y\nnpm install --save react react-dom next\n# pages是页面路由目录，必须有，路由默认是基于该目录下的文件\nmkdir pages\n```\nnpm script 添加如下代码\n\n``` js\n{\n  \"scripts\": {\n    \"dev\": \"next\"\n  }\n}\n\n// npm run dev 即可运行开发服务器 http://localhost:3000\n```\n目前没有路由，访问会出现404页面，接下来添加路由。\n\n#### 添加路由\n在pages目录下添加index.js(pages/index.js),内容如下：\n\n``` js\nconst Index = () => (\n  <div>\n    <p>Hello Next.js</p>\n  </div>\n)\nexport default Index\n```\n>React组件要 **默认** 导出；默认情况下`pages`为路由目录，`static`为静态文件目录。\n\n#### 页面导航\n添加about页面\n\n```js\nexport default () => (\n  <div>\n    <p>This is the about page</p>\n  </div>\n)\n```\n通过 `a` 标签可以很容易做到页面跳转，但那是通过服务端导航，不是我们想要的，我们可以通过 `next/link`支持客户端导航。\n\n```js\nimport Link from 'next/link'\n\nconst Index = () => (\n  <div>\n    <Link href=\"/about\">\n      <a>About Page</a>\n    </Link>\n    <p>Hello Next.js</p>\n  </div>\n)\n\nexport default Index\n```\n或者\n\n```js\n// 包裹按钮\n<Link href=\"/about\">\n  <button>Go to About Page</button>\n</Link>\n```\n\n>Link组件包裹a标签，处理页面跳转，无论是a，button还是其他组件(比如div)，只要Link子组件接收onClick属性，都可以跳转。\n\n链接添加样式\n\n```js\n// 生效\n<Link href=\"/about\">\n  <a style={{ fontSize: 20 }}>About Page</a>\n</Link>\n\n// 不生效\n<Link href=\"/about\" style={{ fontSize: 20 }}>\n  <a>About Page</a>\n</Link>\n```\n>Link是高阶组件，直接收 href等一些其他属性，不支持style。\n\n\n#### 共享组件\n多个页面经常会有公用部分（比如Head），我们可以新建`components/Header.js`\n\n```js\nimport Link from 'next/link'\n\nconst linkStyle = {\n  marginRight: 15\n}\n\nconst Header = () => (\n    <div>\n        <Link href=\"/\">\n          <a style={linkStyle}>Home</a>\n        </Link>\n        <Link href=\"/about\">\n          <a style={linkStyle}>About</a>\n        </Link>\n    </div>\n)\nexport default Header\n```\n在首页中导入`Head`组件\n\n```js\nimport Header from '../components/Header'\n\nexport default () => (\n  <div>\n    <Header />\n    <p>Hello Next.js</p>\n  </div>\n)\n```\n>组件可以放在任何目录中，除了 **pages** 目录，pages下的文件跟服务端路由相关。\n\n#### Layout组件\n可以将整个页面框架做成layout组件(components/MyLayout.js)，各个页面复用\n\nLayout组件\n\n```js\nimport Header from './Header'\n\nconst layoutStyle = {\n  margin: 20,\n  padding: 20,\n  border: '1px solid #DDD'\n}\n\nconst Layout = (props) => (\n  <div style={layoutStyle}>\n    <Header />\n    {props.children}\n  </div>\n)\n\nexport default Layout\n\n```\n\nindex页面\n\n```js\n// pages/index.js\n\nimport Layout from '../components/MyLayout.js'\n\nexport default () => (\n    <Layout>\n       <p>Hello Next.js</p>\n    </Layout>\n)\n```\n\nabout页面\n\n```js\npages/about.js\n\nimport Layout from '../components/MyLayout.js'\n\nexport default () => (\n    <Layout>\n       <p>about</p>\n    </Layout>\n)\n```\nlayout除了使用`{props.children}`还可以使用属性传值,高级组件的方式。\n\n```js\nimport withLayout from '../lib/layout'\n\nconst Page = () => (\n  <p>This is the about page</p>\n)\nexport default withLayout(Page)\n```\n\n```js\n// pages/index.js\nconst Page = () => (\n  <p>This is the about page</p>\n)\n\nexport default () => (<Layout page={Page}/>)\n```\n\n#### 动态页面\n前边我们实现了静态页面，现在我们通过 query string 实现动态页面。\n\n```js\n// pages/index.js\n\nimport Layout from '../components/MyLayout.js'\nimport Link from 'next/link'\n\nconst PostLink = (props) => (\n  <li>\n    <Link href={`/post?title=${props.title}`}>\n      <a>{props.title}</a>\n    </Link>\n  </li>\n)\n// 通过Link组件href属性向下一个页面传参\n\nexport default () => (\n  <Layout>\n    <h1>My Blog</h1>\n    <ul>\n      <PostLink title=\"Hello Next.js\"/>\n      <PostLink title=\"Learn Next.js is awesome\"/>\n      <PostLink title=\"Deploy apps with Zeit\"/>\n    </ul>\n  </Layout>\n)\n\n```\n处理查询参数\n\n```js\nimport Layout from '../components/MyLayout.js'\n\nexport default (props) => (\n    <Layout>\n       <h1>{props.url.query.title}</h1>\n       <p>This is the blog post content.</p>\n    </Layout>\n)\n```\n\n只有default导出的组件才有`url`属性\n\n```js\nimport Layout from '../components/MyLayout.js'\n\nconst Content = (props) => (\n  <div>\n    <h1>{props.url.query.title}</h1>\n    <p>This is the blog post content.</p>\n  </div>\n)\n\nexport default () => (\n    <Layout>\n       <Content />\n    </Layout>\n)\n\n// 页面会抛出异常\n\n// 可以通过组件传值的方式将url参数带到子组件中去\n<Layout>\n   <Content url={props.url} />\n</Layout>\n\n```\n>每个页面都会获取`url`属性，可以`props.url.query.title`拿到相关的数据。\n\n#### 自定义路由\nLink组件有个`as`属性，我们可以通过它自定义路由格式，它会显示在浏览器的地址栏中，但实际下个页面接收的数据还是href属性上的参数。\n\n```js\nconst PostLink = (props) => (\n  <li>\n    <Link as={`/p/${props.id}`} href={`/post?title=${props.title}`}>\n      <a>{props.title}</a>\n    </Link>\n  </li>\n)\n```\n>虽然可以自定义客户端路由显示，但是刷新页面可能会404,服务端没有对应的路由。\n\n#### 自定义服务器\n\n安装`Express`\n\n```js\nnpm install --save express\n```\n根目录下创建`server.js`\n\n```js\nconst express = require('express')\nconst next = require('next')\n\nconst dev = process.env.NODE_ENV !== 'production'\nconst app = next({ dev })\nconst handle = app.getRequestHandler()\n\napp.prepare()\n.then(() => {\n  const server = express()\n\n  // 处理对应路由\n  server.get('/p/:id', (req, res) => {\n    const actualPage = '/post'\n    // 这里拿到的title是路由中的id,而客户端路由拿到的是Link href中的title，有点区别，但实际生产环境中都会使用资源id去请求数据。\n    const queryParams = { title: req.params.id } \n    // 定义了一个路由映射到已存在页面，同时附带查询参数\n    app.render(req, res, actualPage, queryParams)\n  })\n  \n  server.get('*', (req, res) => {\n    return handle(req, res)\n  })\n\n  server.listen(3000, (err) => {\n    if (err) throw err\n    console.log('> Ready on http://localhost:3000')\n  })\n})\n.catch((ex) => {\n  console.error(ex.stack)\n  process.exit(1)\n})\n```\n\n更新下npm脚本\n\n```js\n{\n  \"scripts\": {\n    \"dev\": \"node server.js\"\n  }\n}\n```\n\n#### 远程获取数据\n可以通过一个异步方法`getInitialProps`（同时支持客户端和服务端）来获取远程数据。\n\n安装 `isomorphic-unfetch` 请求模块\n\n```bash\nnpm install --save isomorphic-unfetch\n```\n\n修改首页内容\n\n```js\nimport Layout from '../components/MyLayout.js'\nimport Link from 'next/link'\nimport fetch from 'isomorphic-unfetch'\n\nconst Index = (props) => (\n  <Layout>\n    <h1>Batman TV Shows</h1>\n    <ul>\n      {props.shows.map(({show}) => (\n        <li key={show.id}>\n          <Link as={`/p/${show.id}`} href={`/post?id=${show.id}`}>\n            <a>{show.name}</a>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  </Layout>\n)\n\nPost.getInitialProps = async function (context) {\n  // 可以通过context上的query拿到查询参数\n  const { id } = context.query\n  const res = await fetch(`https://api.tvmaze.com/shows/${id}`)\n  const show = await res.json()\n\n  console.log(`Fetched show: ${show.name}`)\n\n  return { show }\n}\n\nexport default Index\n```\n\ngetInitialProps receives a context object with the following properties:\n\n```\npathname - path section of URL\nquery - query string section of URL parsed as an object\nasPath - the actual url path\nreq - HTTP request object (server only)\nres - HTTP response object (server only)\njsonPageRes - Fetch Response object (client only)\nerr - Error object if any error is encountered during the rendering\n```\n\n#### 组件样式\n给组件添加样式有如下两种方法：\n\n- 外部引入css文件\n- css in js （next推荐）\n\nnext.js使用 [styled-jxs](https://github.com/zeit/styled-jsx)控制局部样式。\n\n```js\nimport Layout from '../components/MyLayout.js'\nimport Link from 'next/link'\n\nfunction getPosts () {\n  return [\n    { id: 'hello-nextjs', title: 'Hello Next.js'},\n    { id: 'learn-nextjs', title: 'Learn Next.js is awesome'},\n    { id: 'deploy-nextjs', title: 'Deploy apps with ZEIT'},\n  ]\n}\n\nexport default () => (\n  <Layout>\n    <h1>My Blog</h1>\n    <ul>\n      {getPosts().map((post) => (\n        <li key={post.id}>\n          <Link as={`/p/${post.id}`} href={`/post?title=${post.title}`}>\n            <a>{post.title}</a>\n          </Link>\n          <!-- prefetch 会预加载下个页面的脚本，不会加载数据-->\n          <li><Link prefetch href='/'><a>Home</a></Link></li>\n        </li>\n      ))}\n    </ul>\n    <!-- 除了 Link 添加prefech属性，还可以通过脚本预加载-->\n    <a onClick={ () => setTimeout(() => url.pushTo('/dynamic'), 100) }>\n      A route transition will happen after 100ms\n    </a>\n    {\n      // but we can prefetch it!\n      Router.prefetch('/dynamic')\n    }\n    // 样式必须用反引号包裹，必须放在模板字符串中，Styled jsx仅仅作为一个babel插件\n    <style jsx>{`\n      h1, a {\n        font-family: \"Arial\";\n      }\n\n      ul {\n        padding: 0;\n      }\n\n      li {\n        list-style: none;\n        margin: 5px 0;\n      }\n\n      a {\n        text-decoration: none;\n        color: blue;\n      }\n\n      a:hover {\n        opacity: 0.6;\n      }\n    `}</style>\n  </Layout>\n)\n```\n\n>styled-jsx 样式默认不作用于子组件，如果要子组件生效，可以单独定义子组件样式，或者使用全局样式。\n\n`styled-jsx` 全局样式\n\n```js\n<style jsx global>{`\n     .markdown {\n       font-family: 'Arial';\n     }\n\n     .markdown a {\n       text-decoration: none;\n       color: blue;\n     }\n\n     .markdown a:hover {\n       opacity: 0.6;\n     }\n\n     .markdown h3 {\n       margin: 0;\n       padding: 0;\n       text-transform: uppercase;\n     }\n  `}</style>\n\n```\n\n### 应用部署\n#### 部署步骤\n\n1. build代码\n2. 启动服务\n\n修改下npm脚本\n\n```js\n\"scripts\": {\n  \"build\": \"next build\",\n  \"start\": \"next start\"\n}\n```\n\n#### 启动多个服务\n为了水平扩展，通常会使用多个app实例\n\n```js\n//$PORT 为环境变量\n\"scripts\": {\n  \"start\": \"next start -p $PORT\"\n}\n\n//window下用 \"next start -p %PORT%\"\n```\n\n调用\n```bash\nPORT=8000 npm start\nPORT=9000 npm start\n```\n可以通过 [cross-env](https://www.npmjs.com/package/cross-env) 设置环境变量。\n\n\n\n### 高阶使用\n\n#### 导出静态网站\n\n在根目录下创建文件`next.config.js`\n\n```js\nmodule.exports = {\n  exportPathMap: function () {\n    return {\n      '/': { page: '/' },\n      '/about': { page: '/about' },\n      '/p/hello-nextjs': { page: '/post', query: { title: \"Hello Next.js\" } },\n      '/p/learn-nextjs': { page: '/post', query: { title: \"Learn Next.js is awesome\" } }\n    }\n  }\n}\n```\n\n修改npm脚本\n\n```js\n{\n  \"scripts\": {\n    \"build\": \"next build\",\n    \"export\": \"next export\"\n  }\n}\n```\n执行导出命令\n\n```bash\nnpm run export\n```\n导入内容会放在`out`目录中，可放在任何静态服务器上使用。\n\n\n☞[官网](https://github.com/zeit/next.js#custom-server-and-routing)\n\n","slug":"next","published":1,"updated":"2018-01-31T12:51:24.284Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjd332e4x000zc2mjrsgd7uc2","content":"<p>Next是react服务端渲染框架。</p>\n<h3 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h3><ul>\n<li>默认服务端渲染</li>\n<li>自动切分代码</li>\n<li>基于webpack开发，支持HMR</li>\n<li>可以集成Express或其他Node server</li>\n<li>可以自定义Babel和Webpack配置</li>\n</ul>\n<h3 id=\"快速入门\"><a href=\"#快速入门\" class=\"headerlink\" title=\"快速入门\"></a>快速入门</h3><h4 id=\"初始化项目\"><a href=\"#初始化项目\" class=\"headerlink\" title=\"初始化项目\"></a>初始化项目</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir hello-next</span><br><span class=\"line\"><span class=\"built_in\">cd</span> hello-next</span><br><span class=\"line\">npm init -y</span><br><span class=\"line\">npm install --save react react-dom next</span><br><span class=\"line\"><span class=\"comment\"># pages是页面路由目录，必须有，路由默认是基于该目录下的文件</span></span><br><span class=\"line\">mkdir pages</span><br></pre></td></tr></table></figure>\n<p>npm script 添加如下代码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"dev\"</span>: <span class=\"string\">\"next\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// npm run dev 即可运行开发服务器 http://localhost:3000</span></span><br></pre></td></tr></table></figure>\n<p>目前没有路由，访问会出现404页面，接下来添加路由。</p>\n<h4 id=\"添加路由\"><a href=\"#添加路由\" class=\"headerlink\" title=\"添加路由\"></a>添加路由</h4><p>在pages目录下添加index.js(pages/index.js),内容如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> Index = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> (</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &lt;p&gt;Hello Next.js&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;/</span>div&gt;</span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> Index</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>React组件要 <strong>默认</strong> 导出；默认情况下<code>pages</code>为路由目录，<code>static</code>为静态文件目录。</p>\n</blockquote>\n<h4 id=\"页面导航\"><a href=\"#页面导航\" class=\"headerlink\" title=\"页面导航\"></a>页面导航</h4><p>添加about页面</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> () =&gt; (</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &lt;p&gt;This is the about page&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;/</span>div&gt;</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<p>通过 <code>a</code> 标签可以很容易做到页面跳转，但那是通过服务端导航，不是我们想要的，我们可以通过 <code>next/link</code>支持客户端导航。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Link <span class=\"keyword\">from</span> <span class=\"string\">'next/link'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> Index = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> (</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &lt;Link href=<span class=\"string\">\"/about\"</span>&gt;</span><br><span class=\"line\">      &lt;a&gt;About Page&lt;<span class=\"regexp\">/a&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;/</span>Link&gt;</span><br><span class=\"line\">    &lt;p&gt;Hello Next.js&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;/</span>div&gt;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> Index</span><br></pre></td></tr></table></figure>\n<p>或者</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 包裹按钮</span></span><br><span class=\"line\">&lt;Link href=<span class=\"string\">\"/about\"</span>&gt;</span><br><span class=\"line\">  &lt;button&gt;Go to About Page&lt;<span class=\"regexp\">/button&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>Link&gt;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>Link组件包裹a标签，处理页面跳转，无论是a，button还是其他组件(比如div)，只要Link子组件接收onClick属性，都可以跳转。</p>\n</blockquote>\n<p>链接添加样式</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 生效</span></span><br><span class=\"line\">&lt;Link href=<span class=\"string\">\"/about\"</span>&gt;</span><br><span class=\"line\">  &lt;a style=&#123;&#123; <span class=\"attr\">fontSize</span>: <span class=\"number\">20</span> &#125;&#125;&gt;About Page&lt;<span class=\"regexp\">/a&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>Link&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 不生效</span></span><br><span class=\"line\">&lt;Link href=<span class=\"string\">\"/about\"</span> style=&#123;&#123; <span class=\"attr\">fontSize</span>: <span class=\"number\">20</span> &#125;&#125;&gt;</span><br><span class=\"line\">  &lt;a&gt;About Page&lt;<span class=\"regexp\">/a&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>Link&gt;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>Link是高阶组件，直接收 href等一些其他属性，不支持style。</p>\n</blockquote>\n<h4 id=\"共享组件\"><a href=\"#共享组件\" class=\"headerlink\" title=\"共享组件\"></a>共享组件</h4><p>多个页面经常会有公用部分（比如Head），我们可以新建<code>components/Header.js</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Link <span class=\"keyword\">from</span> <span class=\"string\">'next/link'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> linkStyle = &#123;</span><br><span class=\"line\">  marginRight: <span class=\"number\">15</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> Header = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> (</span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">        &lt;Link href=<span class=\"string\">\"/\"</span>&gt;</span><br><span class=\"line\">          &lt;a style=&#123;linkStyle&#125;&gt;Home&lt;<span class=\"regexp\">/a&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;/</span>Link&gt;</span><br><span class=\"line\">        &lt;Link href=<span class=\"string\">\"/about\"</span>&gt;</span><br><span class=\"line\">          &lt;a style=&#123;linkStyle&#125;&gt;About&lt;<span class=\"regexp\">/a&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;/</span>Link&gt;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">)</span></span><br><span class=\"line\"><span class=\"regexp\">export default Header</span></span><br></pre></td></tr></table></figure>\n<p>在首页中导入<code>Head</code>组件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Header <span class=\"keyword\">from</span> <span class=\"string\">'../components/Header'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> () =&gt; (</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &lt;Header /&gt;</span><br><span class=\"line\">    &lt;p&gt;Hello Next.js&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;/</span>div&gt;</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>组件可以放在任何目录中，除了 <strong>pages</strong> 目录，pages下的文件跟服务端路由相关。</p>\n</blockquote>\n<h4 id=\"Layout组件\"><a href=\"#Layout组件\" class=\"headerlink\" title=\"Layout组件\"></a>Layout组件</h4><p>可以将整个页面框架做成layout组件(components/MyLayout.js)，各个页面复用</p>\n<p>Layout组件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Header <span class=\"keyword\">from</span> <span class=\"string\">'./Header'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> layoutStyle = &#123;</span><br><span class=\"line\">  margin: <span class=\"number\">20</span>,</span><br><span class=\"line\">  padding: <span class=\"number\">20</span>,</span><br><span class=\"line\">  border: <span class=\"string\">'1px solid #DDD'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> Layout = <span class=\"function\">(<span class=\"params\">props</span>) =&gt;</span> (</span><br><span class=\"line\">  &lt;div style=&#123;layoutStyle&#125;&gt;</span><br><span class=\"line\">    &lt;Header /&gt;</span><br><span class=\"line\">    &#123;props.children&#125;</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">)</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">export default Layout</span></span><br></pre></td></tr></table></figure>\n<p>index页面</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// pages/index.js</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> Layout <span class=\"keyword\">from</span> <span class=\"string\">'../components/MyLayout.js'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> () =&gt; (</span><br><span class=\"line\">    &lt;Layout&gt;</span><br><span class=\"line\">       &lt;p&gt;Hello Next.js&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;/</span>Layout&gt;</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<p>about页面</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pages/about.js</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> Layout <span class=\"keyword\">from</span> <span class=\"string\">'../components/MyLayout.js'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> () =&gt; (</span><br><span class=\"line\">    &lt;Layout&gt;</span><br><span class=\"line\">       &lt;p&gt;about&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;/</span>Layout&gt;</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<p>layout除了使用<code>{props.children}</code>还可以使用属性传值,高级组件的方式。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> withLayout <span class=\"keyword\">from</span> <span class=\"string\">'../lib/layout'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> Page = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> (</span><br><span class=\"line\">  &lt;p&gt;This is the about page&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">)</span></span><br><span class=\"line\"><span class=\"regexp\">export default withLayout(Page)</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// pages/index.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> Page = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> (</span><br><span class=\"line\">  &lt;p&gt;This is the about page&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">)</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">export default () =&gt; (&lt;Layout page=&#123;Page&#125;/</span>&gt;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"动态页面\"><a href=\"#动态页面\" class=\"headerlink\" title=\"动态页面\"></a>动态页面</h4><p>前边我们实现了静态页面，现在我们通过 query string 实现动态页面。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// pages/index.js</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> Layout <span class=\"keyword\">from</span> <span class=\"string\">'../components/MyLayout.js'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Link <span class=\"keyword\">from</span> <span class=\"string\">'next/link'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> PostLink = <span class=\"function\">(<span class=\"params\">props</span>) =&gt;</span> (</span><br><span class=\"line\">  &lt;li&gt;</span><br><span class=\"line\">    &lt;Link href=&#123;<span class=\"string\">`/post?title=<span class=\"subst\">$&#123;props.title&#125;</span>`</span>&#125;&gt;</span><br><span class=\"line\">      &lt;a&gt;&#123;props.title&#125;&lt;<span class=\"regexp\">/a&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;/</span>Link&gt;</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/li&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">)</span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/ 通过Link组件href属性向下一个页面传参</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">export default () =&gt; (</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;Layout&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;h1&gt;My Blog&lt;/</span>h1&gt;</span><br><span class=\"line\">    &lt;ul&gt;</span><br><span class=\"line\">      &lt;PostLink title=<span class=\"string\">\"Hello Next.js\"</span>/&gt;</span><br><span class=\"line\">      &lt;PostLink title=<span class=\"string\">\"Learn Next.js is awesome\"</span>/&gt;</span><br><span class=\"line\">      &lt;PostLink title=<span class=\"string\">\"Deploy apps with Zeit\"</span>/&gt;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/ul&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;/</span>Layout&gt;</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<p>处理查询参数</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Layout <span class=\"keyword\">from</span> <span class=\"string\">'../components/MyLayout.js'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> (props) =&gt; (</span><br><span class=\"line\">    &lt;Layout&gt;</span><br><span class=\"line\">       &lt;h1&gt;&#123;props.url.query.title&#125;&lt;<span class=\"regexp\">/h1&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">       &lt;p&gt;This is the blog post content.&lt;/</span>p&gt;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/Layout&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">)</span></span><br></pre></td></tr></table></figure>\n<p>只有default导出的组件才有<code>url</code>属性</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Layout <span class=\"keyword\">from</span> <span class=\"string\">'../components/MyLayout.js'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> Content = <span class=\"function\">(<span class=\"params\">props</span>) =&gt;</span> (</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &lt;h1&gt;&#123;props.url.query.title&#125;&lt;<span class=\"regexp\">/h1&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;p&gt;This is the blog post content.&lt;/</span>p&gt;</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">)</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">export default () =&gt; (</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;Layout&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">       &lt;Content /</span>&gt;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/Layout&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">)</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/ 页面会抛出异常</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/ 可以通过组件传值的方式将url参数带到子组件中去</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;Layout&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">   &lt;Content url=&#123;props.url&#125; /</span>&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/Layout&gt;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>每个页面都会获取<code>url</code>属性，可以<code>props.url.query.title</code>拿到相关的数据。</p>\n</blockquote>\n<h4 id=\"自定义路由\"><a href=\"#自定义路由\" class=\"headerlink\" title=\"自定义路由\"></a>自定义路由</h4><p>Link组件有个<code>as</code>属性，我们可以通过它自定义路由格式，它会显示在浏览器的地址栏中，但实际下个页面接收的数据还是href属性上的参数。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> PostLink = <span class=\"function\">(<span class=\"params\">props</span>) =&gt;</span> (</span><br><span class=\"line\">  &lt;li&gt;</span><br><span class=\"line\">    &lt;Link <span class=\"keyword\">as</span>=&#123;<span class=\"string\">`/p/<span class=\"subst\">$&#123;props.id&#125;</span>`</span>&#125; href=&#123;<span class=\"string\">`/post?title=<span class=\"subst\">$&#123;props.title&#125;</span>`</span>&#125;&gt;</span><br><span class=\"line\">      &lt;a&gt;&#123;props.title&#125;&lt;<span class=\"regexp\">/a&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;/</span>Link&gt;</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/li&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">)</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>虽然可以自定义客户端路由显示，但是刷新页面可能会404,服务端没有对应的路由。</p>\n</blockquote>\n<h4 id=\"自定义服务器\"><a href=\"#自定义服务器\" class=\"headerlink\" title=\"自定义服务器\"></a>自定义服务器</h4><p>安装<code>Express</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save express</span><br></pre></td></tr></table></figure>\n<p>根目录下创建<code>server.js</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> next = <span class=\"built_in\">require</span>(<span class=\"string\">'next'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> dev = process.env.NODE_ENV !== <span class=\"string\">'production'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> app = next(&#123; dev &#125;)</span><br><span class=\"line\"><span class=\"keyword\">const</span> handle = app.getRequestHandler()</span><br><span class=\"line\"></span><br><span class=\"line\">app.prepare()</span><br><span class=\"line\">.then(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> server = express()</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 处理对应路由</span></span><br><span class=\"line\">  server.get(<span class=\"string\">'/p/:id'</span>, (req, res) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> actualPage = <span class=\"string\">'/post'</span></span><br><span class=\"line\">    <span class=\"comment\">// 这里拿到的title是路由中的id,而客户端路由拿到的是Link href中的title，有点区别，但实际生产环境中都会使用资源id去请求数据。</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> queryParams = &#123; <span class=\"attr\">title</span>: req.params.id &#125; </span><br><span class=\"line\">    <span class=\"comment\">// 定义了一个路由映射到已存在页面，同时附带查询参数</span></span><br><span class=\"line\">    app.render(req, res, actualPage, queryParams)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  </span><br><span class=\"line\">  server.get(<span class=\"string\">'*'</span>, (req, res) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> handle(req, res)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  server.listen(<span class=\"number\">3000</span>, (err) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) <span class=\"keyword\">throw</span> err</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'&gt; Ready on http://localhost:3000'</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">.catch(<span class=\"function\">(<span class=\"params\">ex</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.error(ex.stack)</span><br><span class=\"line\">  process.exit(<span class=\"number\">1</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>更新下npm脚本</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"dev\"</span>: <span class=\"string\">\"node server.js\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"远程获取数据\"><a href=\"#远程获取数据\" class=\"headerlink\" title=\"远程获取数据\"></a>远程获取数据</h4><p>可以通过一个异步方法<code>getInitialProps</code>（同时支持客户端和服务端）来获取远程数据。</p>\n<p>安装 <code>isomorphic-unfetch</code> 请求模块</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save isomorphic-unfetch</span><br></pre></td></tr></table></figure>\n<p>修改首页内容</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Layout <span class=\"keyword\">from</span> <span class=\"string\">'../components/MyLayout.js'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Link <span class=\"keyword\">from</span> <span class=\"string\">'next/link'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> fetch <span class=\"keyword\">from</span> <span class=\"string\">'isomorphic-unfetch'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> Index = <span class=\"function\">(<span class=\"params\">props</span>) =&gt;</span> (</span><br><span class=\"line\">  &lt;Layout&gt;</span><br><span class=\"line\">    &lt;h1&gt;Batman TV Shows&lt;<span class=\"regexp\">/h1&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;ul&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &#123;props.shows.map((&#123;show&#125;) =&gt; (</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;li key=&#123;show.id&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;Link as=&#123;`/</span>p/$&#123;show.id&#125;<span class=\"string\">`&#125; href=&#123;`</span>/post?id=$&#123;show.id&#125;<span class=\"string\">`&#125;&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;a&gt;&#123;show.name&#125;&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"string\">          &lt;/Link&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">      ))&#125;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/ul&gt;</span></span><br><span class=\"line\"><span class=\"string\">  &lt;/Layout&gt;</span></span><br><span class=\"line\"><span class=\"string\">)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Post.getInitialProps = async function (context) &#123;</span></span><br><span class=\"line\"><span class=\"string\">  // 可以通过context上的query拿到查询参数</span></span><br><span class=\"line\"><span class=\"string\">  const &#123; id &#125; = context.query</span></span><br><span class=\"line\"><span class=\"string\">  const res = await fetch(`</span>https:<span class=\"comment\">//api.tvmaze.com/shows/$&#123;id&#125;`)</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> show = <span class=\"keyword\">await</span> res.json()</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">`Fetched show: <span class=\"subst\">$&#123;show.name&#125;</span>`</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123; show &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> Index</span><br></pre></td></tr></table></figure>\n<p>getInitialProps receives a context object with the following properties:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pathname - path section of URL</span><br><span class=\"line\">query - query string section of URL parsed as an object</span><br><span class=\"line\">asPath - the actual url path</span><br><span class=\"line\">req - HTTP request object (server only)</span><br><span class=\"line\">res - HTTP response object (server only)</span><br><span class=\"line\">jsonPageRes - Fetch Response object (client only)</span><br><span class=\"line\">err - Error object if any error is encountered during the rendering</span><br></pre></td></tr></table></figure>\n<h4 id=\"组件样式\"><a href=\"#组件样式\" class=\"headerlink\" title=\"组件样式\"></a>组件样式</h4><p>给组件添加样式有如下两种方法：</p>\n<ul>\n<li>外部引入css文件</li>\n<li>css in js （next推荐）</li>\n</ul>\n<p>next.js使用 <a href=\"https://github.com/zeit/styled-jsx\" target=\"_blank\" rel=\"noopener\">styled-jxs</a>控制局部样式。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Layout <span class=\"keyword\">from</span> <span class=\"string\">'../components/MyLayout.js'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Link <span class=\"keyword\">from</span> <span class=\"string\">'next/link'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getPosts</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> [</span><br><span class=\"line\">    &#123; <span class=\"attr\">id</span>: <span class=\"string\">'hello-nextjs'</span>, <span class=\"attr\">title</span>: <span class=\"string\">'Hello Next.js'</span>&#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">id</span>: <span class=\"string\">'learn-nextjs'</span>, <span class=\"attr\">title</span>: <span class=\"string\">'Learn Next.js is awesome'</span>&#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">id</span>: <span class=\"string\">'deploy-nextjs'</span>, <span class=\"attr\">title</span>: <span class=\"string\">'Deploy apps with ZEIT'</span>&#125;,</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> () =&gt; (</span><br><span class=\"line\">  &lt;Layout&gt;</span><br><span class=\"line\">    &lt;h1&gt;My Blog&lt;<span class=\"regexp\">/h1&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;ul&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &#123;getPosts().map((post) =&gt; (</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;li key=&#123;post.id&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;Link as=&#123;`/</span>p/$&#123;post.id&#125;<span class=\"string\">`&#125; href=&#123;`</span>/post?title=$&#123;post.title&#125;<span class=\"string\">`&#125;&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;a&gt;&#123;post.title&#125;&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"string\">          &lt;/Link&gt;</span></span><br><span class=\"line\"><span class=\"string\">          &lt;!-- prefetch 会预加载下个页面的脚本，不会加载数据--&gt;</span></span><br><span class=\"line\"><span class=\"string\">          &lt;li&gt;&lt;Link prefetch href='/'&gt;&lt;a&gt;Home&lt;/a&gt;&lt;/Link&gt;&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">      ))&#125;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/ul&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;!-- 除了 Link 添加prefech属性，还可以通过脚本预加载--&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;a onClick=&#123; () =&gt; setTimeout(() =&gt; url.pushTo('/dynamic'), 100) &#125;&gt;</span></span><br><span class=\"line\"><span class=\"string\">      A route transition will happen after 100ms</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &#123;</span></span><br><span class=\"line\"><span class=\"string\">      // but we can prefetch it!</span></span><br><span class=\"line\"><span class=\"string\">      Router.prefetch('/dynamic')</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">    // 样式必须用反引号包裹，必须放在模板字符串中，Styled jsx仅仅作为一个babel插件</span></span><br><span class=\"line\"><span class=\"string\">    &lt;style jsx&gt;&#123;`</span></span><br><span class=\"line\">      h1, a &#123;</span><br><span class=\"line\">        font-family: <span class=\"string\">\"Arial\"</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      ul &#123;</span><br><span class=\"line\">        padding: <span class=\"number\">0</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      li &#123;</span><br><span class=\"line\">        list-style: none;</span><br><span class=\"line\">        margin: <span class=\"number\">5</span>px <span class=\"number\">0</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      a &#123;</span><br><span class=\"line\">        text-decoration: none;</span><br><span class=\"line\">        color: blue;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      a:hover &#123;</span><br><span class=\"line\">        opacity: <span class=\"number\">0.6</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    <span class=\"string\">`&#125;&lt;/style&gt;</span></span><br><span class=\"line\"><span class=\"string\">  &lt;/Layout&gt;</span></span><br><span class=\"line\"><span class=\"string\">)</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>styled-jsx 样式默认不作用于子组件，如果要子组件生效，可以单独定义子组件样式，或者使用全局样式。</p>\n</blockquote>\n<p><code>styled-jsx</code> 全局样式</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style jsx global&gt;&#123;<span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">     .markdown &#123;</span></span><br><span class=\"line\"><span class=\"string\">       font-family: 'Arial';</span></span><br><span class=\"line\"><span class=\"string\">     &#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">     .markdown a &#123;</span></span><br><span class=\"line\"><span class=\"string\">       text-decoration: none;</span></span><br><span class=\"line\"><span class=\"string\">       color: blue;</span></span><br><span class=\"line\"><span class=\"string\">     &#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">     .markdown a:hover &#123;</span></span><br><span class=\"line\"><span class=\"string\">       opacity: 0.6;</span></span><br><span class=\"line\"><span class=\"string\">     &#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">     .markdown h3 &#123;</span></span><br><span class=\"line\"><span class=\"string\">       margin: 0;</span></span><br><span class=\"line\"><span class=\"string\">       padding: 0;</span></span><br><span class=\"line\"><span class=\"string\">       text-transform: uppercase;</span></span><br><span class=\"line\"><span class=\"string\">     &#125;</span></span><br><span class=\"line\"><span class=\"string\">  `</span>&#125;&lt;<span class=\"regexp\">/style&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"应用部署\"><a href=\"#应用部署\" class=\"headerlink\" title=\"应用部署\"></a>应用部署</h3><h4 id=\"部署步骤\"><a href=\"#部署步骤\" class=\"headerlink\" title=\"部署步骤\"></a>部署步骤</h4><ol>\n<li>build代码</li>\n<li>启动服务</li>\n</ol>\n<p>修改下npm脚本</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">  <span class=\"string\">\"build\"</span>: <span class=\"string\">\"next build\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"start\"</span>: <span class=\"string\">\"next start\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"启动多个服务\"><a href=\"#启动多个服务\" class=\"headerlink\" title=\"启动多个服务\"></a>启动多个服务</h4><p>为了水平扩展，通常会使用多个app实例</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//$PORT 为环境变量</span></span><br><span class=\"line\"><span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">  <span class=\"string\">\"start\"</span>: <span class=\"string\">\"next start -p $PORT\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//window下用 \"next start -p %PORT%\"</span></span><br></pre></td></tr></table></figure>\n<p>调用<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PORT=8000 npm start</span><br><span class=\"line\">PORT=9000 npm start</span><br></pre></td></tr></table></figure></p>\n<p>可以通过 <a href=\"https://www.npmjs.com/package/cross-env\" target=\"_blank\" rel=\"noopener\">cross-env</a> 设置环境变量。</p>\n<h3 id=\"高阶使用\"><a href=\"#高阶使用\" class=\"headerlink\" title=\"高阶使用\"></a>高阶使用</h3><h4 id=\"导出静态网站\"><a href=\"#导出静态网站\" class=\"headerlink\" title=\"导出静态网站\"></a>导出静态网站</h4><p>在根目录下创建文件<code>next.config.js</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  exportPathMap: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      <span class=\"string\">'/'</span>: &#123; <span class=\"attr\">page</span>: <span class=\"string\">'/'</span> &#125;,</span><br><span class=\"line\">      <span class=\"string\">'/about'</span>: &#123; <span class=\"attr\">page</span>: <span class=\"string\">'/about'</span> &#125;,</span><br><span class=\"line\">      <span class=\"string\">'/p/hello-nextjs'</span>: &#123; <span class=\"attr\">page</span>: <span class=\"string\">'/post'</span>, <span class=\"attr\">query</span>: &#123; <span class=\"attr\">title</span>: <span class=\"string\">\"Hello Next.js\"</span> &#125; &#125;,</span><br><span class=\"line\">      <span class=\"string\">'/p/learn-nextjs'</span>: &#123; <span class=\"attr\">page</span>: <span class=\"string\">'/post'</span>, <span class=\"attr\">query</span>: &#123; <span class=\"attr\">title</span>: <span class=\"string\">\"Learn Next.js is awesome\"</span> &#125; &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>修改npm脚本</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"build\"</span>: <span class=\"string\">\"next build\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"export\"</span>: <span class=\"string\">\"next export\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>执行导出命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run <span class=\"built_in\">export</span></span><br></pre></td></tr></table></figure>\n<p>导入内容会放在<code>out</code>目录中，可放在任何静态服务器上使用。</p>\n<p>☞<a href=\"https://github.com/zeit/next.js#custom-server-and-routing\" target=\"_blank\" rel=\"noopener\">官网</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Next是react服务端渲染框架。</p>\n<h3 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h3><ul>\n<li>默认服务端渲染</li>\n<li>自动切分代码</li>\n<li>基于webpack开发，支持HMR</li>\n<li>可以集成Express或其他Node server</li>\n<li>可以自定义Babel和Webpack配置</li>\n</ul>\n<h3 id=\"快速入门\"><a href=\"#快速入门\" class=\"headerlink\" title=\"快速入门\"></a>快速入门</h3><h4 id=\"初始化项目\"><a href=\"#初始化项目\" class=\"headerlink\" title=\"初始化项目\"></a>初始化项目</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir hello-next</span><br><span class=\"line\"><span class=\"built_in\">cd</span> hello-next</span><br><span class=\"line\">npm init -y</span><br><span class=\"line\">npm install --save react react-dom next</span><br><span class=\"line\"><span class=\"comment\"># pages是页面路由目录，必须有，路由默认是基于该目录下的文件</span></span><br><span class=\"line\">mkdir pages</span><br></pre></td></tr></table></figure>\n<p>npm script 添加如下代码</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"dev\"</span>: <span class=\"string\">\"next\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// npm run dev 即可运行开发服务器 http://localhost:3000</span></span><br></pre></td></tr></table></figure>\n<p>目前没有路由，访问会出现404页面，接下来添加路由。</p>\n<h4 id=\"添加路由\"><a href=\"#添加路由\" class=\"headerlink\" title=\"添加路由\"></a>添加路由</h4><p>在pages目录下添加index.js(pages/index.js),内容如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> Index = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> (</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &lt;p&gt;Hello Next.js&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;/</span>div&gt;</span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> Index</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>React组件要 <strong>默认</strong> 导出；默认情况下<code>pages</code>为路由目录，<code>static</code>为静态文件目录。</p>\n</blockquote>\n<h4 id=\"页面导航\"><a href=\"#页面导航\" class=\"headerlink\" title=\"页面导航\"></a>页面导航</h4><p>添加about页面</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> () =&gt; (</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &lt;p&gt;This is the about page&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;/</span>div&gt;</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<p>通过 <code>a</code> 标签可以很容易做到页面跳转，但那是通过服务端导航，不是我们想要的，我们可以通过 <code>next/link</code>支持客户端导航。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Link <span class=\"keyword\">from</span> <span class=\"string\">'next/link'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> Index = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> (</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &lt;Link href=<span class=\"string\">\"/about\"</span>&gt;</span><br><span class=\"line\">      &lt;a&gt;About Page&lt;<span class=\"regexp\">/a&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;/</span>Link&gt;</span><br><span class=\"line\">    &lt;p&gt;Hello Next.js&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;/</span>div&gt;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> Index</span><br></pre></td></tr></table></figure>\n<p>或者</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 包裹按钮</span></span><br><span class=\"line\">&lt;Link href=<span class=\"string\">\"/about\"</span>&gt;</span><br><span class=\"line\">  &lt;button&gt;Go to About Page&lt;<span class=\"regexp\">/button&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>Link&gt;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>Link组件包裹a标签，处理页面跳转，无论是a，button还是其他组件(比如div)，只要Link子组件接收onClick属性，都可以跳转。</p>\n</blockquote>\n<p>链接添加样式</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 生效</span></span><br><span class=\"line\">&lt;Link href=<span class=\"string\">\"/about\"</span>&gt;</span><br><span class=\"line\">  &lt;a style=&#123;&#123; <span class=\"attr\">fontSize</span>: <span class=\"number\">20</span> &#125;&#125;&gt;About Page&lt;<span class=\"regexp\">/a&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>Link&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 不生效</span></span><br><span class=\"line\">&lt;Link href=<span class=\"string\">\"/about\"</span> style=&#123;&#123; <span class=\"attr\">fontSize</span>: <span class=\"number\">20</span> &#125;&#125;&gt;</span><br><span class=\"line\">  &lt;a&gt;About Page&lt;<span class=\"regexp\">/a&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>Link&gt;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>Link是高阶组件，直接收 href等一些其他属性，不支持style。</p>\n</blockquote>\n<h4 id=\"共享组件\"><a href=\"#共享组件\" class=\"headerlink\" title=\"共享组件\"></a>共享组件</h4><p>多个页面经常会有公用部分（比如Head），我们可以新建<code>components/Header.js</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Link <span class=\"keyword\">from</span> <span class=\"string\">'next/link'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> linkStyle = &#123;</span><br><span class=\"line\">  marginRight: <span class=\"number\">15</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> Header = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> (</span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">        &lt;Link href=<span class=\"string\">\"/\"</span>&gt;</span><br><span class=\"line\">          &lt;a style=&#123;linkStyle&#125;&gt;Home&lt;<span class=\"regexp\">/a&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;/</span>Link&gt;</span><br><span class=\"line\">        &lt;Link href=<span class=\"string\">\"/about\"</span>&gt;</span><br><span class=\"line\">          &lt;a style=&#123;linkStyle&#125;&gt;About&lt;<span class=\"regexp\">/a&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;/</span>Link&gt;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">)</span></span><br><span class=\"line\"><span class=\"regexp\">export default Header</span></span><br></pre></td></tr></table></figure>\n<p>在首页中导入<code>Head</code>组件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Header <span class=\"keyword\">from</span> <span class=\"string\">'../components/Header'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> () =&gt; (</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &lt;Header /&gt;</span><br><span class=\"line\">    &lt;p&gt;Hello Next.js&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;/</span>div&gt;</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>组件可以放在任何目录中，除了 <strong>pages</strong> 目录，pages下的文件跟服务端路由相关。</p>\n</blockquote>\n<h4 id=\"Layout组件\"><a href=\"#Layout组件\" class=\"headerlink\" title=\"Layout组件\"></a>Layout组件</h4><p>可以将整个页面框架做成layout组件(components/MyLayout.js)，各个页面复用</p>\n<p>Layout组件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Header <span class=\"keyword\">from</span> <span class=\"string\">'./Header'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> layoutStyle = &#123;</span><br><span class=\"line\">  margin: <span class=\"number\">20</span>,</span><br><span class=\"line\">  padding: <span class=\"number\">20</span>,</span><br><span class=\"line\">  border: <span class=\"string\">'1px solid #DDD'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> Layout = <span class=\"function\">(<span class=\"params\">props</span>) =&gt;</span> (</span><br><span class=\"line\">  &lt;div style=&#123;layoutStyle&#125;&gt;</span><br><span class=\"line\">    &lt;Header /&gt;</span><br><span class=\"line\">    &#123;props.children&#125;</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">)</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">export default Layout</span></span><br></pre></td></tr></table></figure>\n<p>index页面</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// pages/index.js</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> Layout <span class=\"keyword\">from</span> <span class=\"string\">'../components/MyLayout.js'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> () =&gt; (</span><br><span class=\"line\">    &lt;Layout&gt;</span><br><span class=\"line\">       &lt;p&gt;Hello Next.js&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;/</span>Layout&gt;</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<p>about页面</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pages/about.js</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> Layout <span class=\"keyword\">from</span> <span class=\"string\">'../components/MyLayout.js'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> () =&gt; (</span><br><span class=\"line\">    &lt;Layout&gt;</span><br><span class=\"line\">       &lt;p&gt;about&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;/</span>Layout&gt;</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<p>layout除了使用<code>{props.children}</code>还可以使用属性传值,高级组件的方式。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> withLayout <span class=\"keyword\">from</span> <span class=\"string\">'../lib/layout'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> Page = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> (</span><br><span class=\"line\">  &lt;p&gt;This is the about page&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">)</span></span><br><span class=\"line\"><span class=\"regexp\">export default withLayout(Page)</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// pages/index.js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> Page = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> (</span><br><span class=\"line\">  &lt;p&gt;This is the about page&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">)</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">export default () =&gt; (&lt;Layout page=&#123;Page&#125;/</span>&gt;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"动态页面\"><a href=\"#动态页面\" class=\"headerlink\" title=\"动态页面\"></a>动态页面</h4><p>前边我们实现了静态页面，现在我们通过 query string 实现动态页面。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// pages/index.js</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> Layout <span class=\"keyword\">from</span> <span class=\"string\">'../components/MyLayout.js'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Link <span class=\"keyword\">from</span> <span class=\"string\">'next/link'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> PostLink = <span class=\"function\">(<span class=\"params\">props</span>) =&gt;</span> (</span><br><span class=\"line\">  &lt;li&gt;</span><br><span class=\"line\">    &lt;Link href=&#123;<span class=\"string\">`/post?title=<span class=\"subst\">$&#123;props.title&#125;</span>`</span>&#125;&gt;</span><br><span class=\"line\">      &lt;a&gt;&#123;props.title&#125;&lt;<span class=\"regexp\">/a&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;/</span>Link&gt;</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/li&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">)</span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/ 通过Link组件href属性向下一个页面传参</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">export default () =&gt; (</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;Layout&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;h1&gt;My Blog&lt;/</span>h1&gt;</span><br><span class=\"line\">    &lt;ul&gt;</span><br><span class=\"line\">      &lt;PostLink title=<span class=\"string\">\"Hello Next.js\"</span>/&gt;</span><br><span class=\"line\">      &lt;PostLink title=<span class=\"string\">\"Learn Next.js is awesome\"</span>/&gt;</span><br><span class=\"line\">      &lt;PostLink title=<span class=\"string\">\"Deploy apps with Zeit\"</span>/&gt;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/ul&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;/</span>Layout&gt;</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<p>处理查询参数</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Layout <span class=\"keyword\">from</span> <span class=\"string\">'../components/MyLayout.js'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> (props) =&gt; (</span><br><span class=\"line\">    &lt;Layout&gt;</span><br><span class=\"line\">       &lt;h1&gt;&#123;props.url.query.title&#125;&lt;<span class=\"regexp\">/h1&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">       &lt;p&gt;This is the blog post content.&lt;/</span>p&gt;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/Layout&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">)</span></span><br></pre></td></tr></table></figure>\n<p>只有default导出的组件才有<code>url</code>属性</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Layout <span class=\"keyword\">from</span> <span class=\"string\">'../components/MyLayout.js'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> Content = <span class=\"function\">(<span class=\"params\">props</span>) =&gt;</span> (</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &lt;h1&gt;&#123;props.url.query.title&#125;&lt;<span class=\"regexp\">/h1&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;p&gt;This is the blog post content.&lt;/</span>p&gt;</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">)</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">export default () =&gt; (</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;Layout&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">       &lt;Content /</span>&gt;</span><br><span class=\"line\">    &lt;<span class=\"regexp\">/Layout&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">)</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/ 页面会抛出异常</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/ 可以通过组件传值的方式将url参数带到子组件中去</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;Layout&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">   &lt;Content url=&#123;props.url&#125; /</span>&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/Layout&gt;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>每个页面都会获取<code>url</code>属性，可以<code>props.url.query.title</code>拿到相关的数据。</p>\n</blockquote>\n<h4 id=\"自定义路由\"><a href=\"#自定义路由\" class=\"headerlink\" title=\"自定义路由\"></a>自定义路由</h4><p>Link组件有个<code>as</code>属性，我们可以通过它自定义路由格式，它会显示在浏览器的地址栏中，但实际下个页面接收的数据还是href属性上的参数。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> PostLink = <span class=\"function\">(<span class=\"params\">props</span>) =&gt;</span> (</span><br><span class=\"line\">  &lt;li&gt;</span><br><span class=\"line\">    &lt;Link <span class=\"keyword\">as</span>=&#123;<span class=\"string\">`/p/<span class=\"subst\">$&#123;props.id&#125;</span>`</span>&#125; href=&#123;<span class=\"string\">`/post?title=<span class=\"subst\">$&#123;props.title&#125;</span>`</span>&#125;&gt;</span><br><span class=\"line\">      &lt;a&gt;&#123;props.title&#125;&lt;<span class=\"regexp\">/a&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;/</span>Link&gt;</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/li&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">)</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>虽然可以自定义客户端路由显示，但是刷新页面可能会404,服务端没有对应的路由。</p>\n</blockquote>\n<h4 id=\"自定义服务器\"><a href=\"#自定义服务器\" class=\"headerlink\" title=\"自定义服务器\"></a>自定义服务器</h4><p>安装<code>Express</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save express</span><br></pre></td></tr></table></figure>\n<p>根目录下创建<code>server.js</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> next = <span class=\"built_in\">require</span>(<span class=\"string\">'next'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> dev = process.env.NODE_ENV !== <span class=\"string\">'production'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> app = next(&#123; dev &#125;)</span><br><span class=\"line\"><span class=\"keyword\">const</span> handle = app.getRequestHandler()</span><br><span class=\"line\"></span><br><span class=\"line\">app.prepare()</span><br><span class=\"line\">.then(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> server = express()</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 处理对应路由</span></span><br><span class=\"line\">  server.get(<span class=\"string\">'/p/:id'</span>, (req, res) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> actualPage = <span class=\"string\">'/post'</span></span><br><span class=\"line\">    <span class=\"comment\">// 这里拿到的title是路由中的id,而客户端路由拿到的是Link href中的title，有点区别，但实际生产环境中都会使用资源id去请求数据。</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> queryParams = &#123; <span class=\"attr\">title</span>: req.params.id &#125; </span><br><span class=\"line\">    <span class=\"comment\">// 定义了一个路由映射到已存在页面，同时附带查询参数</span></span><br><span class=\"line\">    app.render(req, res, actualPage, queryParams)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  </span><br><span class=\"line\">  server.get(<span class=\"string\">'*'</span>, (req, res) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> handle(req, res)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  server.listen(<span class=\"number\">3000</span>, (err) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) <span class=\"keyword\">throw</span> err</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'&gt; Ready on http://localhost:3000'</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">.catch(<span class=\"function\">(<span class=\"params\">ex</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.error(ex.stack)</span><br><span class=\"line\">  process.exit(<span class=\"number\">1</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>更新下npm脚本</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"dev\"</span>: <span class=\"string\">\"node server.js\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"远程获取数据\"><a href=\"#远程获取数据\" class=\"headerlink\" title=\"远程获取数据\"></a>远程获取数据</h4><p>可以通过一个异步方法<code>getInitialProps</code>（同时支持客户端和服务端）来获取远程数据。</p>\n<p>安装 <code>isomorphic-unfetch</code> 请求模块</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save isomorphic-unfetch</span><br></pre></td></tr></table></figure>\n<p>修改首页内容</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Layout <span class=\"keyword\">from</span> <span class=\"string\">'../components/MyLayout.js'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Link <span class=\"keyword\">from</span> <span class=\"string\">'next/link'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> fetch <span class=\"keyword\">from</span> <span class=\"string\">'isomorphic-unfetch'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> Index = <span class=\"function\">(<span class=\"params\">props</span>) =&gt;</span> (</span><br><span class=\"line\">  &lt;Layout&gt;</span><br><span class=\"line\">    &lt;h1&gt;Batman TV Shows&lt;<span class=\"regexp\">/h1&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;ul&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &#123;props.shows.map((&#123;show&#125;) =&gt; (</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;li key=&#123;show.id&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;Link as=&#123;`/</span>p/$&#123;show.id&#125;<span class=\"string\">`&#125; href=&#123;`</span>/post?id=$&#123;show.id&#125;<span class=\"string\">`&#125;&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;a&gt;&#123;show.name&#125;&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"string\">          &lt;/Link&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">      ))&#125;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/ul&gt;</span></span><br><span class=\"line\"><span class=\"string\">  &lt;/Layout&gt;</span></span><br><span class=\"line\"><span class=\"string\">)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Post.getInitialProps = async function (context) &#123;</span></span><br><span class=\"line\"><span class=\"string\">  // 可以通过context上的query拿到查询参数</span></span><br><span class=\"line\"><span class=\"string\">  const &#123; id &#125; = context.query</span></span><br><span class=\"line\"><span class=\"string\">  const res = await fetch(`</span>https:<span class=\"comment\">//api.tvmaze.com/shows/$&#123;id&#125;`)</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> show = <span class=\"keyword\">await</span> res.json()</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">`Fetched show: <span class=\"subst\">$&#123;show.name&#125;</span>`</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123; show &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> Index</span><br></pre></td></tr></table></figure>\n<p>getInitialProps receives a context object with the following properties:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pathname - path section of URL</span><br><span class=\"line\">query - query string section of URL parsed as an object</span><br><span class=\"line\">asPath - the actual url path</span><br><span class=\"line\">req - HTTP request object (server only)</span><br><span class=\"line\">res - HTTP response object (server only)</span><br><span class=\"line\">jsonPageRes - Fetch Response object (client only)</span><br><span class=\"line\">err - Error object if any error is encountered during the rendering</span><br></pre></td></tr></table></figure>\n<h4 id=\"组件样式\"><a href=\"#组件样式\" class=\"headerlink\" title=\"组件样式\"></a>组件样式</h4><p>给组件添加样式有如下两种方法：</p>\n<ul>\n<li>外部引入css文件</li>\n<li>css in js （next推荐）</li>\n</ul>\n<p>next.js使用 <a href=\"https://github.com/zeit/styled-jsx\" target=\"_blank\" rel=\"noopener\">styled-jxs</a>控制局部样式。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Layout <span class=\"keyword\">from</span> <span class=\"string\">'../components/MyLayout.js'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Link <span class=\"keyword\">from</span> <span class=\"string\">'next/link'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getPosts</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> [</span><br><span class=\"line\">    &#123; <span class=\"attr\">id</span>: <span class=\"string\">'hello-nextjs'</span>, <span class=\"attr\">title</span>: <span class=\"string\">'Hello Next.js'</span>&#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">id</span>: <span class=\"string\">'learn-nextjs'</span>, <span class=\"attr\">title</span>: <span class=\"string\">'Learn Next.js is awesome'</span>&#125;,</span><br><span class=\"line\">    &#123; <span class=\"attr\">id</span>: <span class=\"string\">'deploy-nextjs'</span>, <span class=\"attr\">title</span>: <span class=\"string\">'Deploy apps with ZEIT'</span>&#125;,</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> () =&gt; (</span><br><span class=\"line\">  &lt;Layout&gt;</span><br><span class=\"line\">    &lt;h1&gt;My Blog&lt;<span class=\"regexp\">/h1&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;ul&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &#123;getPosts().map((post) =&gt; (</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;li key=&#123;post.id&#125;&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;Link as=&#123;`/</span>p/$&#123;post.id&#125;<span class=\"string\">`&#125; href=&#123;`</span>/post?title=$&#123;post.title&#125;<span class=\"string\">`&#125;&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;a&gt;&#123;post.title&#125;&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"string\">          &lt;/Link&gt;</span></span><br><span class=\"line\"><span class=\"string\">          &lt;!-- prefetch 会预加载下个页面的脚本，不会加载数据--&gt;</span></span><br><span class=\"line\"><span class=\"string\">          &lt;li&gt;&lt;Link prefetch href='/'&gt;&lt;a&gt;Home&lt;/a&gt;&lt;/Link&gt;&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">      ))&#125;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/ul&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;!-- 除了 Link 添加prefech属性，还可以通过脚本预加载--&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;a onClick=&#123; () =&gt; setTimeout(() =&gt; url.pushTo('/dynamic'), 100) &#125;&gt;</span></span><br><span class=\"line\"><span class=\"string\">      A route transition will happen after 100ms</span></span><br><span class=\"line\"><span class=\"string\">    &lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &#123;</span></span><br><span class=\"line\"><span class=\"string\">      // but we can prefetch it!</span></span><br><span class=\"line\"><span class=\"string\">      Router.prefetch('/dynamic')</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">    // 样式必须用反引号包裹，必须放在模板字符串中，Styled jsx仅仅作为一个babel插件</span></span><br><span class=\"line\"><span class=\"string\">    &lt;style jsx&gt;&#123;`</span></span><br><span class=\"line\">      h1, a &#123;</span><br><span class=\"line\">        font-family: <span class=\"string\">\"Arial\"</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      ul &#123;</span><br><span class=\"line\">        padding: <span class=\"number\">0</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      li &#123;</span><br><span class=\"line\">        list-style: none;</span><br><span class=\"line\">        margin: <span class=\"number\">5</span>px <span class=\"number\">0</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      a &#123;</span><br><span class=\"line\">        text-decoration: none;</span><br><span class=\"line\">        color: blue;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      a:hover &#123;</span><br><span class=\"line\">        opacity: <span class=\"number\">0.6</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    <span class=\"string\">`&#125;&lt;/style&gt;</span></span><br><span class=\"line\"><span class=\"string\">  &lt;/Layout&gt;</span></span><br><span class=\"line\"><span class=\"string\">)</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>styled-jsx 样式默认不作用于子组件，如果要子组件生效，可以单独定义子组件样式，或者使用全局样式。</p>\n</blockquote>\n<p><code>styled-jsx</code> 全局样式</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style jsx global&gt;&#123;<span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">     .markdown &#123;</span></span><br><span class=\"line\"><span class=\"string\">       font-family: 'Arial';</span></span><br><span class=\"line\"><span class=\"string\">     &#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">     .markdown a &#123;</span></span><br><span class=\"line\"><span class=\"string\">       text-decoration: none;</span></span><br><span class=\"line\"><span class=\"string\">       color: blue;</span></span><br><span class=\"line\"><span class=\"string\">     &#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">     .markdown a:hover &#123;</span></span><br><span class=\"line\"><span class=\"string\">       opacity: 0.6;</span></span><br><span class=\"line\"><span class=\"string\">     &#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">     .markdown h3 &#123;</span></span><br><span class=\"line\"><span class=\"string\">       margin: 0;</span></span><br><span class=\"line\"><span class=\"string\">       padding: 0;</span></span><br><span class=\"line\"><span class=\"string\">       text-transform: uppercase;</span></span><br><span class=\"line\"><span class=\"string\">     &#125;</span></span><br><span class=\"line\"><span class=\"string\">  `</span>&#125;&lt;<span class=\"regexp\">/style&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"应用部署\"><a href=\"#应用部署\" class=\"headerlink\" title=\"应用部署\"></a>应用部署</h3><h4 id=\"部署步骤\"><a href=\"#部署步骤\" class=\"headerlink\" title=\"部署步骤\"></a>部署步骤</h4><ol>\n<li>build代码</li>\n<li>启动服务</li>\n</ol>\n<p>修改下npm脚本</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">  <span class=\"string\">\"build\"</span>: <span class=\"string\">\"next build\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"start\"</span>: <span class=\"string\">\"next start\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"启动多个服务\"><a href=\"#启动多个服务\" class=\"headerlink\" title=\"启动多个服务\"></a>启动多个服务</h4><p>为了水平扩展，通常会使用多个app实例</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//$PORT 为环境变量</span></span><br><span class=\"line\"><span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">  <span class=\"string\">\"start\"</span>: <span class=\"string\">\"next start -p $PORT\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//window下用 \"next start -p %PORT%\"</span></span><br></pre></td></tr></table></figure>\n<p>调用<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PORT=8000 npm start</span><br><span class=\"line\">PORT=9000 npm start</span><br></pre></td></tr></table></figure></p>\n<p>可以通过 <a href=\"https://www.npmjs.com/package/cross-env\" target=\"_blank\" rel=\"noopener\">cross-env</a> 设置环境变量。</p>\n<h3 id=\"高阶使用\"><a href=\"#高阶使用\" class=\"headerlink\" title=\"高阶使用\"></a>高阶使用</h3><h4 id=\"导出静态网站\"><a href=\"#导出静态网站\" class=\"headerlink\" title=\"导出静态网站\"></a>导出静态网站</h4><p>在根目录下创建文件<code>next.config.js</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  exportPathMap: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      <span class=\"string\">'/'</span>: &#123; <span class=\"attr\">page</span>: <span class=\"string\">'/'</span> &#125;,</span><br><span class=\"line\">      <span class=\"string\">'/about'</span>: &#123; <span class=\"attr\">page</span>: <span class=\"string\">'/about'</span> &#125;,</span><br><span class=\"line\">      <span class=\"string\">'/p/hello-nextjs'</span>: &#123; <span class=\"attr\">page</span>: <span class=\"string\">'/post'</span>, <span class=\"attr\">query</span>: &#123; <span class=\"attr\">title</span>: <span class=\"string\">\"Hello Next.js\"</span> &#125; &#125;,</span><br><span class=\"line\">      <span class=\"string\">'/p/learn-nextjs'</span>: &#123; <span class=\"attr\">page</span>: <span class=\"string\">'/post'</span>, <span class=\"attr\">query</span>: &#123; <span class=\"attr\">title</span>: <span class=\"string\">\"Learn Next.js is awesome\"</span> &#125; &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>修改npm脚本</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"build\"</span>: <span class=\"string\">\"next build\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"export\"</span>: <span class=\"string\">\"next export\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>执行导出命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run <span class=\"built_in\">export</span></span><br></pre></td></tr></table></figure>\n<p>导入内容会放在<code>out</code>目录中，可放在任何静态服务器上使用。</p>\n<p>☞<a href=\"https://github.com/zeit/next.js#custom-server-and-routing\" target=\"_blank\" rel=\"noopener\">官网</a></p>\n"},{"title":"sed常用操作命令","date":"2017-04-26T12:46:08.000Z","_content":"\n#### SED命令\n\nSED的英文全称是 Stream EDitor，它是一个简单而强大的文本解析转换工具。\n\n#### 原理\n1. 读一行到缓存区处理（模式空间）\n2. 执行sed命令\n3. 输出结果接着继续处理下一行（重复此流程直至结束）\n\n\n#### 用途\n* 文本替换\n* 选择性的输出文本文件\n* 从文本文件的某处开始编辑\n* 无交互式的对文本文件进行编辑等\n\n#### 命令格式\n```shell\nsed [option]  command files\noption:\n    -e:指定要执行的命令，使用该参数，我们可以指定多个命令\n    -n:默认情况下，模式空间中的内容在处理完成后将会打印到标准输出，该选项用于阻止该行为\n    -f:指定包含要执行的命令的脚本文件(一行一个命令,类似多个-e)\n    \ncommand：行定位（或正则）+ sed命令 （命令使用单引号包裹）\n\nsed -e '1d' -e '2d' -e '5d' demo.txt\n```\n在SED中使用的命令会作用于文本数据的所有行。如果只想将命令作用于特定的行或者某些行，则需要使用 \"行寻址\" 功能。\n\n##### 行寻址两种形式：\n\n```\n1.以数字形式表示的行区间\nsed -n '3p' demo.txt \n\n# 区间 \nsed -n '2,5 p' demo.txt \n\n# $ 表示自后一行 ^ 标识开始\nsed -n '3,$ p' demo.txt\n\n2.以文本模式来过滤行\nsed -n '/Alchemist/, 5 p' books.txt\n```\n\n\n##### 操作符 + , ~\n加号（+）操作符，它可以与逗号（,）操作符一起使用\n\n```\n# 从第二行开始下4行\nsed -n '2,+4 p' demo.txt  \n```\n使用波浪线操作符（~）指定地址范围，它使用M~N（步长）的形式，告诉SED应该处理M行开始的每N行。\n\n```\n# 50~5匹配行号5，10，15等\nsed -n '5~5 p' demo.txt > a.txt \n```\n\n>sed操作不影响源文件，可用重定向覆写源文件.\n\n\n#### sed操作命令\n##### 打印命令 `p` \n打印命令p通常和-n选项配合\n\n```\n# 打印1~10行\nsed -n '1,10p' demo.txt\n\n# 打印非10行 \nsed -n '10!p' demo.txt\n```\n\n\n##### 插入命令 `a/i` \n\n```\n# 第五行后插入hello\nsed -n '5a hello' demo.txt\n\n# 第五行前插入hello\nsed -n '5i hello' demo.txt\n```\n##### 替代 `c` \n\n```\n# 第四行替换成hi\nsed -n '4c hi' demo.txt\n```\n\n##### 删除 `d` \n\n```\n# 删除第十行\nsed -n '10d' demo.txt \n\n# 删除空行\nsed '^&d' demo.txt  \n```\n\n\n##### 替换 `s` \n\n```\n# false 替换成true\nsed 's/false/true/g' demo.txt\n```\n\n\n##### 执行多条命令 `{ ；}` \n\n```\n# 多条命令使用{}，命令间用分号分隔\nsed -n '{p;n;p}' demo.txt\n```\n\n##### 读取下一行到模式空间里去 `n` \n\n```\n# false 替换成true\nsed 's/false/true/g' demo.txt\n```\n\n>h: 将当前模式空间的内容保存到保存空间\nH：将当前模式空间中的内容追加到 保持空间 \ng : 将保持空间复制到模式空间\nG: 将保持空间附加到模式空间\nx：用于交换模式空间和保持空间中的内容\n\n\n##### 跳转 `b` \n\n```\n# 类似goto跳转\nsed -n 'h;n;H;x;s/\\n/, /;/Paulo/!b Print; s/^/- /; :Print;p' demo.txt \n```\n\n\n##### 创建分支 `t` \n\n```\n# 创建分支;只有当前置条件成功的时候，t 命令才会跳转到该标签\nsed -n 'h;n;H;x; s/\\n/, /; :Loop;/Paulo/s/^/-/; /----/!t Loop; p' demo.txt \n```\n\n\n##### 替换字符 `&` \n\n```\n# & 为匹配的字符\nsed 's/w/&123' demo.txt\n```\n\n\n##### 大小写转化 `\\u \\U \\l \\L` \n\n```\n# & 为匹配的字符\nsed 's/w/\\u&123/' demo.txt\n```\n\n##### 字符一对一转化 `y` \n\n```\n# [address]y/inchars/outchars/ \n# inchars中的第一个字符会被转换为outchars中的第一个字符，第二个字符会被转换成outchars中的第二个字符\n$ echo \"1 5 15 20\" | sed 'y/151520/IVXVXX/'\n```\n\n##### 显示隐藏字符命令 `l` \n\n```\n# [address1[,address2]]l [len] \n# 可显示 空格 tab，实现文本按照指定的宽度换行\nsed -n 'l 25' books.txt\n```\n\n##### 真正匹配引用 `\\x` \n\n```\n# () () () ...  \\1 \\2 \\3 ...用\\x表示前面的括号内容\n# 可显示 空格 tab，实现文本按照指定的宽度换行\nsed -r 's/(^[a-z-_]+):x:([0-9]+):([0-9]+).*$/user:\\1  uid:\\2  gid:\\3/' /etc/passwd罗列出用户名 uid gid\n```\n\n##### 复制指定文件内容到匹配行 `r` \n\n```\n# 读取文件内容显示到指定行\nsed -n '1r a.txt' b.txt\n```\n\n##### 将匹配行写入到文件中 `w` \n\n```\n# 将demo.txt第一行写入到a.txt中\nsed -n '1w a.txt' demo.txt\n```\n##### 执行外部命令  `e` \n\n```\n# e 执行外部命令 比如 date\nsed '3 e date' books.txt\n```\n\n\n##### 排除命令  `!` \n\n```\n# 匹配Paulo的行不打印\nsed -n '/Paulo/!p' books.txt\n```\n\n##### 输出行号  `=` \n\n```\n# [address1[,address2]]=\nsed '=' demo.txt\n```\n\n##### 退出sed  `q` \n\n```\n# 执行完第10行退出\nsed -n '10q' \n\n# q命令也支持提供一个value(作为程序的返回代码返回)\n\nsed '/The Alchemist/ q 100' books.txt\necho $? \n```\n\n##### 多行命令  `P,D,N` \n\n```\n# N：将数据流中的下一行加进来创建一个多行组来处理,N并不会清除、输出模式空间的内容，而是采用了追加模式\nsed -n '10q' \n\n# D：删除多行组中的一行,只删除模式空间中的第一行。该命令会删除到换行符（含 换行符）为止的所有字符\n\n# P：打印多行组中的一行 \n```\n\n\n\n\n[参考：三十分钟学会SED](https://github.com/mylxsw/growing-up/blob/master/doc/%E4%B8%89%E5%8D%81%E5%88%86%E9%92%9F%E5%AD%A6%E4%BC%9ASED.md)\n\n","source":"_posts/sed常用操作命令.md","raw":"---\ntitle: sed常用操作命令\ndate: 2017-04-26 20:46:08\ntags:\n    - linux\n\ncategory: \n    - linux\n---\n\n#### SED命令\n\nSED的英文全称是 Stream EDitor，它是一个简单而强大的文本解析转换工具。\n\n#### 原理\n1. 读一行到缓存区处理（模式空间）\n2. 执行sed命令\n3. 输出结果接着继续处理下一行（重复此流程直至结束）\n\n\n#### 用途\n* 文本替换\n* 选择性的输出文本文件\n* 从文本文件的某处开始编辑\n* 无交互式的对文本文件进行编辑等\n\n#### 命令格式\n```shell\nsed [option]  command files\noption:\n    -e:指定要执行的命令，使用该参数，我们可以指定多个命令\n    -n:默认情况下，模式空间中的内容在处理完成后将会打印到标准输出，该选项用于阻止该行为\n    -f:指定包含要执行的命令的脚本文件(一行一个命令,类似多个-e)\n    \ncommand：行定位（或正则）+ sed命令 （命令使用单引号包裹）\n\nsed -e '1d' -e '2d' -e '5d' demo.txt\n```\n在SED中使用的命令会作用于文本数据的所有行。如果只想将命令作用于特定的行或者某些行，则需要使用 \"行寻址\" 功能。\n\n##### 行寻址两种形式：\n\n```\n1.以数字形式表示的行区间\nsed -n '3p' demo.txt \n\n# 区间 \nsed -n '2,5 p' demo.txt \n\n# $ 表示自后一行 ^ 标识开始\nsed -n '3,$ p' demo.txt\n\n2.以文本模式来过滤行\nsed -n '/Alchemist/, 5 p' books.txt\n```\n\n\n##### 操作符 + , ~\n加号（+）操作符，它可以与逗号（,）操作符一起使用\n\n```\n# 从第二行开始下4行\nsed -n '2,+4 p' demo.txt  \n```\n使用波浪线操作符（~）指定地址范围，它使用M~N（步长）的形式，告诉SED应该处理M行开始的每N行。\n\n```\n# 50~5匹配行号5，10，15等\nsed -n '5~5 p' demo.txt > a.txt \n```\n\n>sed操作不影响源文件，可用重定向覆写源文件.\n\n\n#### sed操作命令\n##### 打印命令 `p` \n打印命令p通常和-n选项配合\n\n```\n# 打印1~10行\nsed -n '1,10p' demo.txt\n\n# 打印非10行 \nsed -n '10!p' demo.txt\n```\n\n\n##### 插入命令 `a/i` \n\n```\n# 第五行后插入hello\nsed -n '5a hello' demo.txt\n\n# 第五行前插入hello\nsed -n '5i hello' demo.txt\n```\n##### 替代 `c` \n\n```\n# 第四行替换成hi\nsed -n '4c hi' demo.txt\n```\n\n##### 删除 `d` \n\n```\n# 删除第十行\nsed -n '10d' demo.txt \n\n# 删除空行\nsed '^&d' demo.txt  \n```\n\n\n##### 替换 `s` \n\n```\n# false 替换成true\nsed 's/false/true/g' demo.txt\n```\n\n\n##### 执行多条命令 `{ ；}` \n\n```\n# 多条命令使用{}，命令间用分号分隔\nsed -n '{p;n;p}' demo.txt\n```\n\n##### 读取下一行到模式空间里去 `n` \n\n```\n# false 替换成true\nsed 's/false/true/g' demo.txt\n```\n\n>h: 将当前模式空间的内容保存到保存空间\nH：将当前模式空间中的内容追加到 保持空间 \ng : 将保持空间复制到模式空间\nG: 将保持空间附加到模式空间\nx：用于交换模式空间和保持空间中的内容\n\n\n##### 跳转 `b` \n\n```\n# 类似goto跳转\nsed -n 'h;n;H;x;s/\\n/, /;/Paulo/!b Print; s/^/- /; :Print;p' demo.txt \n```\n\n\n##### 创建分支 `t` \n\n```\n# 创建分支;只有当前置条件成功的时候，t 命令才会跳转到该标签\nsed -n 'h;n;H;x; s/\\n/, /; :Loop;/Paulo/s/^/-/; /----/!t Loop; p' demo.txt \n```\n\n\n##### 替换字符 `&` \n\n```\n# & 为匹配的字符\nsed 's/w/&123' demo.txt\n```\n\n\n##### 大小写转化 `\\u \\U \\l \\L` \n\n```\n# & 为匹配的字符\nsed 's/w/\\u&123/' demo.txt\n```\n\n##### 字符一对一转化 `y` \n\n```\n# [address]y/inchars/outchars/ \n# inchars中的第一个字符会被转换为outchars中的第一个字符，第二个字符会被转换成outchars中的第二个字符\n$ echo \"1 5 15 20\" | sed 'y/151520/IVXVXX/'\n```\n\n##### 显示隐藏字符命令 `l` \n\n```\n# [address1[,address2]]l [len] \n# 可显示 空格 tab，实现文本按照指定的宽度换行\nsed -n 'l 25' books.txt\n```\n\n##### 真正匹配引用 `\\x` \n\n```\n# () () () ...  \\1 \\2 \\3 ...用\\x表示前面的括号内容\n# 可显示 空格 tab，实现文本按照指定的宽度换行\nsed -r 's/(^[a-z-_]+):x:([0-9]+):([0-9]+).*$/user:\\1  uid:\\2  gid:\\3/' /etc/passwd罗列出用户名 uid gid\n```\n\n##### 复制指定文件内容到匹配行 `r` \n\n```\n# 读取文件内容显示到指定行\nsed -n '1r a.txt' b.txt\n```\n\n##### 将匹配行写入到文件中 `w` \n\n```\n# 将demo.txt第一行写入到a.txt中\nsed -n '1w a.txt' demo.txt\n```\n##### 执行外部命令  `e` \n\n```\n# e 执行外部命令 比如 date\nsed '3 e date' books.txt\n```\n\n\n##### 排除命令  `!` \n\n```\n# 匹配Paulo的行不打印\nsed -n '/Paulo/!p' books.txt\n```\n\n##### 输出行号  `=` \n\n```\n# [address1[,address2]]=\nsed '=' demo.txt\n```\n\n##### 退出sed  `q` \n\n```\n# 执行完第10行退出\nsed -n '10q' \n\n# q命令也支持提供一个value(作为程序的返回代码返回)\n\nsed '/The Alchemist/ q 100' books.txt\necho $? \n```\n\n##### 多行命令  `P,D,N` \n\n```\n# N：将数据流中的下一行加进来创建一个多行组来处理,N并不会清除、输出模式空间的内容，而是采用了追加模式\nsed -n '10q' \n\n# D：删除多行组中的一行,只删除模式空间中的第一行。该命令会删除到换行符（含 换行符）为止的所有字符\n\n# P：打印多行组中的一行 \n```\n\n\n\n\n[参考：三十分钟学会SED](https://github.com/mylxsw/growing-up/blob/master/doc/%E4%B8%89%E5%8D%81%E5%88%86%E9%92%9F%E5%AD%A6%E4%BC%9ASED.md)\n\n","slug":"sed常用操作命令","published":1,"updated":"2018-01-19T07:29:27.203Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjd332e4z0011c2mj22mi7uc4","content":"<h4 id=\"SED命令\"><a href=\"#SED命令\" class=\"headerlink\" title=\"SED命令\"></a>SED命令</h4><p>SED的英文全称是 Stream EDitor，它是一个简单而强大的文本解析转换工具。</p>\n<h4 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h4><ol>\n<li>读一行到缓存区处理（模式空间）</li>\n<li>执行sed命令</li>\n<li>输出结果接着继续处理下一行（重复此流程直至结束）</li>\n</ol>\n<h4 id=\"用途\"><a href=\"#用途\" class=\"headerlink\" title=\"用途\"></a>用途</h4><ul>\n<li>文本替换</li>\n<li>选择性的输出文本文件</li>\n<li>从文本文件的某处开始编辑</li>\n<li>无交互式的对文本文件进行编辑等</li>\n</ul>\n<h4 id=\"命令格式\"><a href=\"#命令格式\" class=\"headerlink\" title=\"命令格式\"></a>命令格式</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed [option]  command files</span><br><span class=\"line\">option:</span><br><span class=\"line\">    -e:指定要执行的命令，使用该参数，我们可以指定多个命令</span><br><span class=\"line\">    -n:默认情况下，模式空间中的内容在处理完成后将会打印到标准输出，该选项用于阻止该行为</span><br><span class=\"line\">    -f:指定包含要执行的命令的脚本文件(一行一个命令,类似多个-e)</span><br><span class=\"line\">    </span><br><span class=\"line\">command：行定位（或正则）+ sed命令 （命令使用单引号包裹）</span><br><span class=\"line\"></span><br><span class=\"line\">sed -e '1d' -e '2d' -e '5d' demo.txt</span><br></pre></td></tr></table></figure>\n<p>在SED中使用的命令会作用于文本数据的所有行。如果只想将命令作用于特定的行或者某些行，则需要使用 “行寻址” 功能。</p>\n<h5 id=\"行寻址两种形式：\"><a href=\"#行寻址两种形式：\" class=\"headerlink\" title=\"行寻址两种形式：\"></a>行寻址两种形式：</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.以数字形式表示的行区间</span><br><span class=\"line\">sed -n &apos;3p&apos; demo.txt </span><br><span class=\"line\"></span><br><span class=\"line\"># 区间 </span><br><span class=\"line\">sed -n &apos;2,5 p&apos; demo.txt </span><br><span class=\"line\"></span><br><span class=\"line\"># $ 表示自后一行 ^ 标识开始</span><br><span class=\"line\">sed -n &apos;3,$ p&apos; demo.txt</span><br><span class=\"line\"></span><br><span class=\"line\">2.以文本模式来过滤行</span><br><span class=\"line\">sed -n &apos;/Alchemist/, 5 p&apos; books.txt</span><br></pre></td></tr></table></figure>\n<h5 id=\"操作符\"><a href=\"#操作符\" class=\"headerlink\" title=\"操作符 + , ~\"></a>操作符 + , ~</h5><p>加号（+）操作符，它可以与逗号（,）操作符一起使用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 从第二行开始下4行</span><br><span class=\"line\">sed -n &apos;2,+4 p&apos; demo.txt</span><br></pre></td></tr></table></figure>\n<p>使用波浪线操作符（~）指定地址范围，它使用M~N（步长）的形式，告诉SED应该处理M行开始的每N行。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 50~5匹配行号5，10，15等</span><br><span class=\"line\">sed -n &apos;5~5 p&apos; demo.txt &gt; a.txt</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>sed操作不影响源文件，可用重定向覆写源文件.</p>\n</blockquote>\n<h4 id=\"sed操作命令\"><a href=\"#sed操作命令\" class=\"headerlink\" title=\"sed操作命令\"></a>sed操作命令</h4><h5 id=\"打印命令-p\"><a href=\"#打印命令-p\" class=\"headerlink\" title=\"打印命令 p\"></a>打印命令 <code>p</code></h5><p>打印命令p通常和-n选项配合</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 打印1~10行</span><br><span class=\"line\">sed -n &apos;1,10p&apos; demo.txt</span><br><span class=\"line\"></span><br><span class=\"line\"># 打印非10行 </span><br><span class=\"line\">sed -n &apos;10!p&apos; demo.txt</span><br></pre></td></tr></table></figure>\n<h5 id=\"插入命令-a-i\"><a href=\"#插入命令-a-i\" class=\"headerlink\" title=\"插入命令 a/i\"></a>插入命令 <code>a/i</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 第五行后插入hello</span><br><span class=\"line\">sed -n &apos;5a hello&apos; demo.txt</span><br><span class=\"line\"></span><br><span class=\"line\"># 第五行前插入hello</span><br><span class=\"line\">sed -n &apos;5i hello&apos; demo.txt</span><br></pre></td></tr></table></figure>\n<h5 id=\"替代-c\"><a href=\"#替代-c\" class=\"headerlink\" title=\"替代 c\"></a>替代 <code>c</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 第四行替换成hi</span><br><span class=\"line\">sed -n &apos;4c hi&apos; demo.txt</span><br></pre></td></tr></table></figure>\n<h5 id=\"删除-d\"><a href=\"#删除-d\" class=\"headerlink\" title=\"删除 d\"></a>删除 <code>d</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 删除第十行</span><br><span class=\"line\">sed -n &apos;10d&apos; demo.txt </span><br><span class=\"line\"></span><br><span class=\"line\"># 删除空行</span><br><span class=\"line\">sed &apos;^&amp;d&apos; demo.txt</span><br></pre></td></tr></table></figure>\n<h5 id=\"替换-s\"><a href=\"#替换-s\" class=\"headerlink\" title=\"替换 s\"></a>替换 <code>s</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># false 替换成true</span><br><span class=\"line\">sed &apos;s/false/true/g&apos; demo.txt</span><br></pre></td></tr></table></figure>\n<h5 id=\"执行多条命令-；\"><a href=\"#执行多条命令-；\" class=\"headerlink\" title=\"执行多条命令 { ；}\"></a>执行多条命令 <code>{ ；}</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 多条命令使用&#123;&#125;，命令间用分号分隔</span><br><span class=\"line\">sed -n &apos;&#123;p;n;p&#125;&apos; demo.txt</span><br></pre></td></tr></table></figure>\n<h5 id=\"读取下一行到模式空间里去-n\"><a href=\"#读取下一行到模式空间里去-n\" class=\"headerlink\" title=\"读取下一行到模式空间里去 n\"></a>读取下一行到模式空间里去 <code>n</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># false 替换成true</span><br><span class=\"line\">sed &apos;s/false/true/g&apos; demo.txt</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>h: 将当前模式空间的内容保存到保存空间<br>H：将当前模式空间中的内容追加到 保持空间<br>g : 将保持空间复制到模式空间<br>G: 将保持空间附加到模式空间<br>x：用于交换模式空间和保持空间中的内容</p>\n</blockquote>\n<h5 id=\"跳转-b\"><a href=\"#跳转-b\" class=\"headerlink\" title=\"跳转 b\"></a>跳转 <code>b</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 类似goto跳转</span><br><span class=\"line\">sed -n &apos;h;n;H;x;s/\\n/, /;/Paulo/!b Print; s/^/- /; :Print;p&apos; demo.txt</span><br></pre></td></tr></table></figure>\n<h5 id=\"创建分支-t\"><a href=\"#创建分支-t\" class=\"headerlink\" title=\"创建分支 t\"></a>创建分支 <code>t</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 创建分支;只有当前置条件成功的时候，t 命令才会跳转到该标签</span><br><span class=\"line\">sed -n &apos;h;n;H;x; s/\\n/, /; :Loop;/Paulo/s/^/-/; /----/!t Loop; p&apos; demo.txt</span><br></pre></td></tr></table></figure>\n<h5 id=\"替换字符-amp\"><a href=\"#替换字符-amp\" class=\"headerlink\" title=\"替换字符 &amp;\"></a>替换字符 <code>&amp;</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># &amp; 为匹配的字符</span><br><span class=\"line\">sed &apos;s/w/&amp;123&apos; demo.txt</span><br></pre></td></tr></table></figure>\n<h5 id=\"大小写转化-u-U-l-L\"><a href=\"#大小写转化-u-U-l-L\" class=\"headerlink\" title=\"大小写转化 \\u \\U \\l \\L\"></a>大小写转化 <code>\\u \\U \\l \\L</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># &amp; 为匹配的字符</span><br><span class=\"line\">sed &apos;s/w/\\u&amp;123/&apos; demo.txt</span><br></pre></td></tr></table></figure>\n<h5 id=\"字符一对一转化-y\"><a href=\"#字符一对一转化-y\" class=\"headerlink\" title=\"字符一对一转化 y\"></a>字符一对一转化 <code>y</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># [address]y/inchars/outchars/ </span><br><span class=\"line\"># inchars中的第一个字符会被转换为outchars中的第一个字符，第二个字符会被转换成outchars中的第二个字符</span><br><span class=\"line\">$ echo &quot;1 5 15 20&quot; | sed &apos;y/151520/IVXVXX/&apos;</span><br></pre></td></tr></table></figure>\n<h5 id=\"显示隐藏字符命令-l\"><a href=\"#显示隐藏字符命令-l\" class=\"headerlink\" title=\"显示隐藏字符命令 l\"></a>显示隐藏字符命令 <code>l</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># [address1[,address2]]l [len] </span><br><span class=\"line\"># 可显示 空格 tab，实现文本按照指定的宽度换行</span><br><span class=\"line\">sed -n &apos;l 25&apos; books.txt</span><br></pre></td></tr></table></figure>\n<h5 id=\"真正匹配引用-x\"><a href=\"#真正匹配引用-x\" class=\"headerlink\" title=\"真正匹配引用 \\x\"></a>真正匹配引用 <code>\\x</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># () () () ...  \\1 \\2 \\3 ...用\\x表示前面的括号内容</span><br><span class=\"line\"># 可显示 空格 tab，实现文本按照指定的宽度换行</span><br><span class=\"line\">sed -r &apos;s/(^[a-z-_]+):x:([0-9]+):([0-9]+).*$/user:\\1  uid:\\2  gid:\\3/&apos; /etc/passwd罗列出用户名 uid gid</span><br></pre></td></tr></table></figure>\n<h5 id=\"复制指定文件内容到匹配行-r\"><a href=\"#复制指定文件内容到匹配行-r\" class=\"headerlink\" title=\"复制指定文件内容到匹配行 r\"></a>复制指定文件内容到匹配行 <code>r</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 读取文件内容显示到指定行</span><br><span class=\"line\">sed -n &apos;1r a.txt&apos; b.txt</span><br></pre></td></tr></table></figure>\n<h5 id=\"将匹配行写入到文件中-w\"><a href=\"#将匹配行写入到文件中-w\" class=\"headerlink\" title=\"将匹配行写入到文件中 w\"></a>将匹配行写入到文件中 <code>w</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 将demo.txt第一行写入到a.txt中</span><br><span class=\"line\">sed -n &apos;1w a.txt&apos; demo.txt</span><br></pre></td></tr></table></figure>\n<h5 id=\"执行外部命令-e\"><a href=\"#执行外部命令-e\" class=\"headerlink\" title=\"执行外部命令  e\"></a>执行外部命令  <code>e</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># e 执行外部命令 比如 date</span><br><span class=\"line\">sed &apos;3 e date&apos; books.txt</span><br></pre></td></tr></table></figure>\n<h5 id=\"排除命令\"><a href=\"#排除命令\" class=\"headerlink\" title=\"排除命令  !\"></a>排除命令  <code>!</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 匹配Paulo的行不打印</span><br><span class=\"line\">sed -n &apos;/Paulo/!p&apos; books.txt</span><br></pre></td></tr></table></figure>\n<h5 id=\"输出行号\"><a href=\"#输出行号\" class=\"headerlink\" title=\"输出行号  =\"></a>输出行号  <code>=</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># [address1[,address2]]=</span><br><span class=\"line\">sed &apos;=&apos; demo.txt</span><br></pre></td></tr></table></figure>\n<h5 id=\"退出sed-q\"><a href=\"#退出sed-q\" class=\"headerlink\" title=\"退出sed  q\"></a>退出sed  <code>q</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 执行完第10行退出</span><br><span class=\"line\">sed -n &apos;10q&apos; </span><br><span class=\"line\"></span><br><span class=\"line\"># q命令也支持提供一个value(作为程序的返回代码返回)</span><br><span class=\"line\"></span><br><span class=\"line\">sed &apos;/The Alchemist/ q 100&apos; books.txt</span><br><span class=\"line\">echo $?</span><br></pre></td></tr></table></figure>\n<h5 id=\"多行命令-P-D-N\"><a href=\"#多行命令-P-D-N\" class=\"headerlink\" title=\"多行命令  P,D,N\"></a>多行命令  <code>P,D,N</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># N：将数据流中的下一行加进来创建一个多行组来处理,N并不会清除、输出模式空间的内容，而是采用了追加模式</span><br><span class=\"line\">sed -n &apos;10q&apos; </span><br><span class=\"line\"></span><br><span class=\"line\"># D：删除多行组中的一行,只删除模式空间中的第一行。该命令会删除到换行符（含 换行符）为止的所有字符</span><br><span class=\"line\"></span><br><span class=\"line\"># P：打印多行组中的一行</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://github.com/mylxsw/growing-up/blob/master/doc/%E4%B8%89%E5%8D%81%E5%88%86%E9%92%9F%E5%AD%A6%E4%BC%9ASED.md\" target=\"_blank\" rel=\"noopener\">参考：三十分钟学会SED</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"SED命令\"><a href=\"#SED命令\" class=\"headerlink\" title=\"SED命令\"></a>SED命令</h4><p>SED的英文全称是 Stream EDitor，它是一个简单而强大的文本解析转换工具。</p>\n<h4 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h4><ol>\n<li>读一行到缓存区处理（模式空间）</li>\n<li>执行sed命令</li>\n<li>输出结果接着继续处理下一行（重复此流程直至结束）</li>\n</ol>\n<h4 id=\"用途\"><a href=\"#用途\" class=\"headerlink\" title=\"用途\"></a>用途</h4><ul>\n<li>文本替换</li>\n<li>选择性的输出文本文件</li>\n<li>从文本文件的某处开始编辑</li>\n<li>无交互式的对文本文件进行编辑等</li>\n</ul>\n<h4 id=\"命令格式\"><a href=\"#命令格式\" class=\"headerlink\" title=\"命令格式\"></a>命令格式</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed [option]  command files</span><br><span class=\"line\">option:</span><br><span class=\"line\">    -e:指定要执行的命令，使用该参数，我们可以指定多个命令</span><br><span class=\"line\">    -n:默认情况下，模式空间中的内容在处理完成后将会打印到标准输出，该选项用于阻止该行为</span><br><span class=\"line\">    -f:指定包含要执行的命令的脚本文件(一行一个命令,类似多个-e)</span><br><span class=\"line\">    </span><br><span class=\"line\">command：行定位（或正则）+ sed命令 （命令使用单引号包裹）</span><br><span class=\"line\"></span><br><span class=\"line\">sed -e '1d' -e '2d' -e '5d' demo.txt</span><br></pre></td></tr></table></figure>\n<p>在SED中使用的命令会作用于文本数据的所有行。如果只想将命令作用于特定的行或者某些行，则需要使用 “行寻址” 功能。</p>\n<h5 id=\"行寻址两种形式：\"><a href=\"#行寻址两种形式：\" class=\"headerlink\" title=\"行寻址两种形式：\"></a>行寻址两种形式：</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.以数字形式表示的行区间</span><br><span class=\"line\">sed -n &apos;3p&apos; demo.txt </span><br><span class=\"line\"></span><br><span class=\"line\"># 区间 </span><br><span class=\"line\">sed -n &apos;2,5 p&apos; demo.txt </span><br><span class=\"line\"></span><br><span class=\"line\"># $ 表示自后一行 ^ 标识开始</span><br><span class=\"line\">sed -n &apos;3,$ p&apos; demo.txt</span><br><span class=\"line\"></span><br><span class=\"line\">2.以文本模式来过滤行</span><br><span class=\"line\">sed -n &apos;/Alchemist/, 5 p&apos; books.txt</span><br></pre></td></tr></table></figure>\n<h5 id=\"操作符\"><a href=\"#操作符\" class=\"headerlink\" title=\"操作符 + , ~\"></a>操作符 + , ~</h5><p>加号（+）操作符，它可以与逗号（,）操作符一起使用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 从第二行开始下4行</span><br><span class=\"line\">sed -n &apos;2,+4 p&apos; demo.txt</span><br></pre></td></tr></table></figure>\n<p>使用波浪线操作符（~）指定地址范围，它使用M~N（步长）的形式，告诉SED应该处理M行开始的每N行。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 50~5匹配行号5，10，15等</span><br><span class=\"line\">sed -n &apos;5~5 p&apos; demo.txt &gt; a.txt</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>sed操作不影响源文件，可用重定向覆写源文件.</p>\n</blockquote>\n<h4 id=\"sed操作命令\"><a href=\"#sed操作命令\" class=\"headerlink\" title=\"sed操作命令\"></a>sed操作命令</h4><h5 id=\"打印命令-p\"><a href=\"#打印命令-p\" class=\"headerlink\" title=\"打印命令 p\"></a>打印命令 <code>p</code></h5><p>打印命令p通常和-n选项配合</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 打印1~10行</span><br><span class=\"line\">sed -n &apos;1,10p&apos; demo.txt</span><br><span class=\"line\"></span><br><span class=\"line\"># 打印非10行 </span><br><span class=\"line\">sed -n &apos;10!p&apos; demo.txt</span><br></pre></td></tr></table></figure>\n<h5 id=\"插入命令-a-i\"><a href=\"#插入命令-a-i\" class=\"headerlink\" title=\"插入命令 a/i\"></a>插入命令 <code>a/i</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 第五行后插入hello</span><br><span class=\"line\">sed -n &apos;5a hello&apos; demo.txt</span><br><span class=\"line\"></span><br><span class=\"line\"># 第五行前插入hello</span><br><span class=\"line\">sed -n &apos;5i hello&apos; demo.txt</span><br></pre></td></tr></table></figure>\n<h5 id=\"替代-c\"><a href=\"#替代-c\" class=\"headerlink\" title=\"替代 c\"></a>替代 <code>c</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 第四行替换成hi</span><br><span class=\"line\">sed -n &apos;4c hi&apos; demo.txt</span><br></pre></td></tr></table></figure>\n<h5 id=\"删除-d\"><a href=\"#删除-d\" class=\"headerlink\" title=\"删除 d\"></a>删除 <code>d</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 删除第十行</span><br><span class=\"line\">sed -n &apos;10d&apos; demo.txt </span><br><span class=\"line\"></span><br><span class=\"line\"># 删除空行</span><br><span class=\"line\">sed &apos;^&amp;d&apos; demo.txt</span><br></pre></td></tr></table></figure>\n<h5 id=\"替换-s\"><a href=\"#替换-s\" class=\"headerlink\" title=\"替换 s\"></a>替换 <code>s</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># false 替换成true</span><br><span class=\"line\">sed &apos;s/false/true/g&apos; demo.txt</span><br></pre></td></tr></table></figure>\n<h5 id=\"执行多条命令-；\"><a href=\"#执行多条命令-；\" class=\"headerlink\" title=\"执行多条命令 { ；}\"></a>执行多条命令 <code>{ ；}</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 多条命令使用&#123;&#125;，命令间用分号分隔</span><br><span class=\"line\">sed -n &apos;&#123;p;n;p&#125;&apos; demo.txt</span><br></pre></td></tr></table></figure>\n<h5 id=\"读取下一行到模式空间里去-n\"><a href=\"#读取下一行到模式空间里去-n\" class=\"headerlink\" title=\"读取下一行到模式空间里去 n\"></a>读取下一行到模式空间里去 <code>n</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># false 替换成true</span><br><span class=\"line\">sed &apos;s/false/true/g&apos; demo.txt</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>h: 将当前模式空间的内容保存到保存空间<br>H：将当前模式空间中的内容追加到 保持空间<br>g : 将保持空间复制到模式空间<br>G: 将保持空间附加到模式空间<br>x：用于交换模式空间和保持空间中的内容</p>\n</blockquote>\n<h5 id=\"跳转-b\"><a href=\"#跳转-b\" class=\"headerlink\" title=\"跳转 b\"></a>跳转 <code>b</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 类似goto跳转</span><br><span class=\"line\">sed -n &apos;h;n;H;x;s/\\n/, /;/Paulo/!b Print; s/^/- /; :Print;p&apos; demo.txt</span><br></pre></td></tr></table></figure>\n<h5 id=\"创建分支-t\"><a href=\"#创建分支-t\" class=\"headerlink\" title=\"创建分支 t\"></a>创建分支 <code>t</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 创建分支;只有当前置条件成功的时候，t 命令才会跳转到该标签</span><br><span class=\"line\">sed -n &apos;h;n;H;x; s/\\n/, /; :Loop;/Paulo/s/^/-/; /----/!t Loop; p&apos; demo.txt</span><br></pre></td></tr></table></figure>\n<h5 id=\"替换字符-amp\"><a href=\"#替换字符-amp\" class=\"headerlink\" title=\"替换字符 &amp;\"></a>替换字符 <code>&amp;</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># &amp; 为匹配的字符</span><br><span class=\"line\">sed &apos;s/w/&amp;123&apos; demo.txt</span><br></pre></td></tr></table></figure>\n<h5 id=\"大小写转化-u-U-l-L\"><a href=\"#大小写转化-u-U-l-L\" class=\"headerlink\" title=\"大小写转化 \\u \\U \\l \\L\"></a>大小写转化 <code>\\u \\U \\l \\L</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># &amp; 为匹配的字符</span><br><span class=\"line\">sed &apos;s/w/\\u&amp;123/&apos; demo.txt</span><br></pre></td></tr></table></figure>\n<h5 id=\"字符一对一转化-y\"><a href=\"#字符一对一转化-y\" class=\"headerlink\" title=\"字符一对一转化 y\"></a>字符一对一转化 <code>y</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># [address]y/inchars/outchars/ </span><br><span class=\"line\"># inchars中的第一个字符会被转换为outchars中的第一个字符，第二个字符会被转换成outchars中的第二个字符</span><br><span class=\"line\">$ echo &quot;1 5 15 20&quot; | sed &apos;y/151520/IVXVXX/&apos;</span><br></pre></td></tr></table></figure>\n<h5 id=\"显示隐藏字符命令-l\"><a href=\"#显示隐藏字符命令-l\" class=\"headerlink\" title=\"显示隐藏字符命令 l\"></a>显示隐藏字符命令 <code>l</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># [address1[,address2]]l [len] </span><br><span class=\"line\"># 可显示 空格 tab，实现文本按照指定的宽度换行</span><br><span class=\"line\">sed -n &apos;l 25&apos; books.txt</span><br></pre></td></tr></table></figure>\n<h5 id=\"真正匹配引用-x\"><a href=\"#真正匹配引用-x\" class=\"headerlink\" title=\"真正匹配引用 \\x\"></a>真正匹配引用 <code>\\x</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># () () () ...  \\1 \\2 \\3 ...用\\x表示前面的括号内容</span><br><span class=\"line\"># 可显示 空格 tab，实现文本按照指定的宽度换行</span><br><span class=\"line\">sed -r &apos;s/(^[a-z-_]+):x:([0-9]+):([0-9]+).*$/user:\\1  uid:\\2  gid:\\3/&apos; /etc/passwd罗列出用户名 uid gid</span><br></pre></td></tr></table></figure>\n<h5 id=\"复制指定文件内容到匹配行-r\"><a href=\"#复制指定文件内容到匹配行-r\" class=\"headerlink\" title=\"复制指定文件内容到匹配行 r\"></a>复制指定文件内容到匹配行 <code>r</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 读取文件内容显示到指定行</span><br><span class=\"line\">sed -n &apos;1r a.txt&apos; b.txt</span><br></pre></td></tr></table></figure>\n<h5 id=\"将匹配行写入到文件中-w\"><a href=\"#将匹配行写入到文件中-w\" class=\"headerlink\" title=\"将匹配行写入到文件中 w\"></a>将匹配行写入到文件中 <code>w</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 将demo.txt第一行写入到a.txt中</span><br><span class=\"line\">sed -n &apos;1w a.txt&apos; demo.txt</span><br></pre></td></tr></table></figure>\n<h5 id=\"执行外部命令-e\"><a href=\"#执行外部命令-e\" class=\"headerlink\" title=\"执行外部命令  e\"></a>执行外部命令  <code>e</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># e 执行外部命令 比如 date</span><br><span class=\"line\">sed &apos;3 e date&apos; books.txt</span><br></pre></td></tr></table></figure>\n<h5 id=\"排除命令\"><a href=\"#排除命令\" class=\"headerlink\" title=\"排除命令  !\"></a>排除命令  <code>!</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 匹配Paulo的行不打印</span><br><span class=\"line\">sed -n &apos;/Paulo/!p&apos; books.txt</span><br></pre></td></tr></table></figure>\n<h5 id=\"输出行号\"><a href=\"#输出行号\" class=\"headerlink\" title=\"输出行号  =\"></a>输出行号  <code>=</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># [address1[,address2]]=</span><br><span class=\"line\">sed &apos;=&apos; demo.txt</span><br></pre></td></tr></table></figure>\n<h5 id=\"退出sed-q\"><a href=\"#退出sed-q\" class=\"headerlink\" title=\"退出sed  q\"></a>退出sed  <code>q</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 执行完第10行退出</span><br><span class=\"line\">sed -n &apos;10q&apos; </span><br><span class=\"line\"></span><br><span class=\"line\"># q命令也支持提供一个value(作为程序的返回代码返回)</span><br><span class=\"line\"></span><br><span class=\"line\">sed &apos;/The Alchemist/ q 100&apos; books.txt</span><br><span class=\"line\">echo $?</span><br></pre></td></tr></table></figure>\n<h5 id=\"多行命令-P-D-N\"><a href=\"#多行命令-P-D-N\" class=\"headerlink\" title=\"多行命令  P,D,N\"></a>多行命令  <code>P,D,N</code></h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># N：将数据流中的下一行加进来创建一个多行组来处理,N并不会清除、输出模式空间的内容，而是采用了追加模式</span><br><span class=\"line\">sed -n &apos;10q&apos; </span><br><span class=\"line\"></span><br><span class=\"line\"># D：删除多行组中的一行,只删除模式空间中的第一行。该命令会删除到换行符（含 换行符）为止的所有字符</span><br><span class=\"line\"></span><br><span class=\"line\"># P：打印多行组中的一行</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://github.com/mylxsw/growing-up/blob/master/doc/%E4%B8%89%E5%8D%81%E5%88%86%E9%92%9F%E5%AD%A6%E4%BC%9ASED.md\" target=\"_blank\" rel=\"noopener\">参考：三十分钟学会SED</a></p>\n"},{"title":"tmux使用","date":"2017-03-21T04:34:33.000Z","_content":"\n上篇讲到了 [iTerm2的基本使用](http://www.jianshu.com/p/3436bcb17a03) ，iTerm2能够让我们迅速从不同的窗口中切换。通过 iTerm2 ，我们可以在不同窗口中愉快用 ssh 登录到远处服务器去操作，但由于临时断网或其他原因，远程连接就会中断，如想继续之前的工作，又得重头来过T_T ,但是iTerm2有个 tmux 的配合，再也不用担心异常中断了，它可以让我们迅速恢复到之前的现场环境。\n\n![tmux 窗格](http://upload-images.jianshu.io/upload_images/3778142-7340859f88245de4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n[tmux](http://tmux.github.io/) 是一个终端复用软件，它也有类似iTerm2的分屏功能。不仅如此，我们还可以通过tmux随时断开会话或者接入会话，接下一起来看下tmux 一些基本使用方法。\n\n### 入门须知\n- server服务器：输入tmux命令时就开启了一个服务器，可以开启多个会话。\n- session: 管理多个window的会话\n- window: 一个window就是整个屏幕\n- pane: 一个window可以被横向或纵向分割为多个窗格\n\n即一个session可包含多个窗口，一个窗口中可包含多个窗格。\n一般情况下 tmux 中所有的快捷键都需要和前缀快捷键 ```ctrl + b``` 来组合使用。\n\n\n### 安装tmux\n``` shell\nbrew install tmux\n```\n\n ### 运行 tmux\n开启了一个 tmux 的会话，默认会新建一个窗口和一个窗格，窗口左下角会有一些标识信息。\n``` shell\ntmux\n```\n\n![tmux默认窗口](http://upload-images.jianshu.io/upload_images/3778142-64ef52c19d9ef73e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### 会话常用命令\n``` shell\n#在正常终端模式下使用 tmux 建立会话并命名\ntmux new -s abc\n\n#休眠会话 返回主shell- 在正常终端模式下，使某个编号的会话强制休眠，编号用的是 tmux ls 命令时所列出的每一行的最前面的那个编号\ntmux detach -t 编号\ntmux detach -s 名称\n\n#恢复会话\ntmux attach -t 编号\n## 也可简写成\ntmux a -t 编号\ntmux attach -s test\n\n#重命名会话名称\ntmux rename -t test dev\n\n#关闭会话\ntmux kill-session -t abc\n\n# 完全退出，关闭所有的会话\ntmux kill-server\n```\n\n\n### 窗口常用命令\n假设当前默认前缀为 : Ctrl+b\n ``` shell\n{前缀} c 创建新窗口\n\n{前缀} n 选择下一个窗口\n\n{前缀} p 选择前一个窗口\n\n{前缀} l 最近一次活跃窗口之间进行切换\n\n{前缀} 0~9 选择几号窗口\n\n{前缀} , 重命名窗口\n\n{前缀} . 更改窗口的编号，但只能更改成未使用的编号，所以要交换窗口的话，得更改多次进行交换\n\n{前缀} & 关闭窗口\n\n{前缀} w 以菜单方式显示及选择窗口\n\n{前缀} f 在所有窗口中查找内容\n```\n\n\n### 窗格常用命令\n``` shell\n{前缀} \" 模向分隔面板\n\n{前缀} % 纵向分隔面板\n\n{前缀} o 跳到下一个分隔面板\n\n{前缀} x 关闭面板\n\n{前缀} ; 切换到最后一个使用的面板\n\n{前缀} 上下键 上一个及下一个分隔面板\n\n{前缀} 空格键 切换面板布局\n\n```\n\n### 其他\n``` shell\n{前缀} t 显示时钟\n\n{前缀} m 鼠标切换窗格\n```\n看到这里，尝试后是不是觉得很奇怪，自己打开的窗口，怎么和本页面第一张图不一样！不一样！ 首先恭喜你已经掌握了tmux基本操作，接下来咱们看下tmux高级用法。\n\n\n\n###高级配置\ntmux 自定义配置[参见 .tmux](https://github.com/gpakosz/.tmux)\n\n---\ntmux窗口左下角状态显示用到了Powerline及Powerline字体，接着咱们来美化下tmux窗口。\n\n1.安装 Python\n```shell\nbrew install python\n```\n2.下载 [powerline](https://github.com/powerline/powerline)\n```shell\nsudo pip install powerline-status\n```\n\n3.配置 Powerline 到终端\n```shell\n#查看安装路径\npip show powerline-status\n\n#配置 .bash_profile 文件,添加以下行\n. /Powerline安装路径/powerline/bindings/bash/powerline.sh\nsource .bash_profile\n```\n\n4.安装专用于 [Powerline](https://github.com/powerline/fonts) 的字体\n然后在 iTerm 2的偏好设置里的Profile选项卡里把字体设置为以 Powerline 结尾的字体就大功告成了。\n\n\nPS：如果满足不了你的操作体验，你还可以：\n安装配色方案 [solarized](https://github.com/altercation/solarized)\n安装zsh主题 [agnoster-fcamblor](https://github.com/fcamblor/oh-my-zsh-agnoster-fcamblor)","source":"_posts/tmux使用.md","raw":"---\ntitle: tmux使用\ndate: 2017-03-21 12:34:33\ntags:\n - 工具\n \ncategory: \n    - linux\n---\n\n上篇讲到了 [iTerm2的基本使用](http://www.jianshu.com/p/3436bcb17a03) ，iTerm2能够让我们迅速从不同的窗口中切换。通过 iTerm2 ，我们可以在不同窗口中愉快用 ssh 登录到远处服务器去操作，但由于临时断网或其他原因，远程连接就会中断，如想继续之前的工作，又得重头来过T_T ,但是iTerm2有个 tmux 的配合，再也不用担心异常中断了，它可以让我们迅速恢复到之前的现场环境。\n\n![tmux 窗格](http://upload-images.jianshu.io/upload_images/3778142-7340859f88245de4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n[tmux](http://tmux.github.io/) 是一个终端复用软件，它也有类似iTerm2的分屏功能。不仅如此，我们还可以通过tmux随时断开会话或者接入会话，接下一起来看下tmux 一些基本使用方法。\n\n### 入门须知\n- server服务器：输入tmux命令时就开启了一个服务器，可以开启多个会话。\n- session: 管理多个window的会话\n- window: 一个window就是整个屏幕\n- pane: 一个window可以被横向或纵向分割为多个窗格\n\n即一个session可包含多个窗口，一个窗口中可包含多个窗格。\n一般情况下 tmux 中所有的快捷键都需要和前缀快捷键 ```ctrl + b``` 来组合使用。\n\n\n### 安装tmux\n``` shell\nbrew install tmux\n```\n\n ### 运行 tmux\n开启了一个 tmux 的会话，默认会新建一个窗口和一个窗格，窗口左下角会有一些标识信息。\n``` shell\ntmux\n```\n\n![tmux默认窗口](http://upload-images.jianshu.io/upload_images/3778142-64ef52c19d9ef73e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### 会话常用命令\n``` shell\n#在正常终端模式下使用 tmux 建立会话并命名\ntmux new -s abc\n\n#休眠会话 返回主shell- 在正常终端模式下，使某个编号的会话强制休眠，编号用的是 tmux ls 命令时所列出的每一行的最前面的那个编号\ntmux detach -t 编号\ntmux detach -s 名称\n\n#恢复会话\ntmux attach -t 编号\n## 也可简写成\ntmux a -t 编号\ntmux attach -s test\n\n#重命名会话名称\ntmux rename -t test dev\n\n#关闭会话\ntmux kill-session -t abc\n\n# 完全退出，关闭所有的会话\ntmux kill-server\n```\n\n\n### 窗口常用命令\n假设当前默认前缀为 : Ctrl+b\n ``` shell\n{前缀} c 创建新窗口\n\n{前缀} n 选择下一个窗口\n\n{前缀} p 选择前一个窗口\n\n{前缀} l 最近一次活跃窗口之间进行切换\n\n{前缀} 0~9 选择几号窗口\n\n{前缀} , 重命名窗口\n\n{前缀} . 更改窗口的编号，但只能更改成未使用的编号，所以要交换窗口的话，得更改多次进行交换\n\n{前缀} & 关闭窗口\n\n{前缀} w 以菜单方式显示及选择窗口\n\n{前缀} f 在所有窗口中查找内容\n```\n\n\n### 窗格常用命令\n``` shell\n{前缀} \" 模向分隔面板\n\n{前缀} % 纵向分隔面板\n\n{前缀} o 跳到下一个分隔面板\n\n{前缀} x 关闭面板\n\n{前缀} ; 切换到最后一个使用的面板\n\n{前缀} 上下键 上一个及下一个分隔面板\n\n{前缀} 空格键 切换面板布局\n\n```\n\n### 其他\n``` shell\n{前缀} t 显示时钟\n\n{前缀} m 鼠标切换窗格\n```\n看到这里，尝试后是不是觉得很奇怪，自己打开的窗口，怎么和本页面第一张图不一样！不一样！ 首先恭喜你已经掌握了tmux基本操作，接下来咱们看下tmux高级用法。\n\n\n\n###高级配置\ntmux 自定义配置[参见 .tmux](https://github.com/gpakosz/.tmux)\n\n---\ntmux窗口左下角状态显示用到了Powerline及Powerline字体，接着咱们来美化下tmux窗口。\n\n1.安装 Python\n```shell\nbrew install python\n```\n2.下载 [powerline](https://github.com/powerline/powerline)\n```shell\nsudo pip install powerline-status\n```\n\n3.配置 Powerline 到终端\n```shell\n#查看安装路径\npip show powerline-status\n\n#配置 .bash_profile 文件,添加以下行\n. /Powerline安装路径/powerline/bindings/bash/powerline.sh\nsource .bash_profile\n```\n\n4.安装专用于 [Powerline](https://github.com/powerline/fonts) 的字体\n然后在 iTerm 2的偏好设置里的Profile选项卡里把字体设置为以 Powerline 结尾的字体就大功告成了。\n\n\nPS：如果满足不了你的操作体验，你还可以：\n安装配色方案 [solarized](https://github.com/altercation/solarized)\n安装zsh主题 [agnoster-fcamblor](https://github.com/fcamblor/oh-my-zsh-agnoster-fcamblor)","slug":"tmux使用","published":1,"updated":"2018-01-19T07:29:27.203Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjd332e500015c2mjbjdtk8f1","content":"<p>上篇讲到了 <a href=\"http://www.jianshu.com/p/3436bcb17a03\" target=\"_blank\" rel=\"noopener\">iTerm2的基本使用</a> ，iTerm2能够让我们迅速从不同的窗口中切换。通过 iTerm2 ，我们可以在不同窗口中愉快用 ssh 登录到远处服务器去操作，但由于临时断网或其他原因，远程连接就会中断，如想继续之前的工作，又得重头来过T_T ,但是iTerm2有个 tmux 的配合，再也不用担心异常中断了，它可以让我们迅速恢复到之前的现场环境。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/3778142-7340859f88245de4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"tmux 窗格\"></p>\n<p><a href=\"http://tmux.github.io/\" target=\"_blank\" rel=\"noopener\">tmux</a> 是一个终端复用软件，它也有类似iTerm2的分屏功能。不仅如此，我们还可以通过tmux随时断开会话或者接入会话，接下一起来看下tmux 一些基本使用方法。</p>\n<h3 id=\"入门须知\"><a href=\"#入门须知\" class=\"headerlink\" title=\"入门须知\"></a>入门须知</h3><ul>\n<li>server服务器：输入tmux命令时就开启了一个服务器，可以开启多个会话。</li>\n<li>session: 管理多个window的会话</li>\n<li>window: 一个window就是整个屏幕</li>\n<li>pane: 一个window可以被横向或纵向分割为多个窗格</li>\n</ul>\n<p>即一个session可包含多个窗口，一个窗口中可包含多个窗格。<br>一般情况下 tmux 中所有的快捷键都需要和前缀快捷键 <figure class=\"highlight plain\"><figcaption><span>+ b``` 来组合使用。</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">### 安装tmux</span><br><span class=\"line\">``` shell</span><br><span class=\"line\">brew install tmux</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"运行-tmux\"><a href=\"#运行-tmux\" class=\"headerlink\" title=\"运行 tmux\"></a>运行 tmux</h3><p>开启了一个 tmux 的会话，默认会新建一个窗口和一个窗格，窗口左下角会有一些标识信息。<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tmux</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/3778142-64ef52c19d9ef73e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"tmux默认窗口\"></p>\n<h3 id=\"会话常用命令\"><a href=\"#会话常用命令\" class=\"headerlink\" title=\"会话常用命令\"></a>会话常用命令</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">在正常终端模式下使用 tmux 建立会话并命名</span></span><br><span class=\"line\">tmux new -s abc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">休眠会话 返回主shell- 在正常终端模式下，使某个编号的会话强制休眠，编号用的是 tmux ls 命令时所列出的每一行的最前面的那个编号</span></span><br><span class=\"line\">tmux detach -t 编号</span><br><span class=\"line\">tmux detach -s 名称</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">恢复会话</span></span><br><span class=\"line\">tmux attach -t 编号</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># 也可简写成</span></span></span><br><span class=\"line\">tmux a -t 编号</span><br><span class=\"line\">tmux attach -s test</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">重命名会话名称</span></span><br><span class=\"line\">tmux rename -t test dev</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">关闭会话</span></span><br><span class=\"line\">tmux kill-session -t abc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 完全退出，关闭所有的会话</span></span><br><span class=\"line\">tmux kill-server</span><br></pre></td></tr></table></figure>\n<h3 id=\"窗口常用命令\"><a href=\"#窗口常用命令\" class=\"headerlink\" title=\"窗口常用命令\"></a>窗口常用命令</h3><p>假设当前默认前缀为 : Ctrl+b<br> <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;前缀&#125; c 创建新窗口</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;前缀&#125; n 选择下一个窗口</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;前缀&#125; p 选择前一个窗口</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;前缀&#125; l 最近一次活跃窗口之间进行切换</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;前缀&#125; 0~9 选择几号窗口</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;前缀&#125; , 重命名窗口</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;前缀&#125; . 更改窗口的编号，但只能更改成未使用的编号，所以要交换窗口的话，得更改多次进行交换</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;前缀&#125; &amp; 关闭窗口</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;前缀&#125; w 以菜单方式显示及选择窗口</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;前缀&#125; f 在所有窗口中查找内容</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"窗格常用命令\"><a href=\"#窗格常用命令\" class=\"headerlink\" title=\"窗格常用命令\"></a>窗格常用命令</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;前缀&#125; \" 模向分隔面板</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;前缀&#125; % 纵向分隔面板</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;前缀&#125; o 跳到下一个分隔面板</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;前缀&#125; x 关闭面板</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;前缀&#125; ; 切换到最后一个使用的面板</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;前缀&#125; 上下键 上一个及下一个分隔面板</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;前缀&#125; 空格键 切换面板布局</span><br></pre></td></tr></table></figure>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;前缀&#125; t 显示时钟</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;前缀&#125; m 鼠标切换窗格</span><br></pre></td></tr></table></figure>\n<p>看到这里，尝试后是不是觉得很奇怪，自己打开的窗口，怎么和本页面第一张图不一样！不一样！ 首先恭喜你已经掌握了tmux基本操作，接下来咱们看下tmux高级用法。</p>\n<p>###高级配置<br>tmux 自定义配置<a href=\"https://github.com/gpakosz/.tmux\" target=\"_blank\" rel=\"noopener\">参见 .tmux</a></p>\n<hr>\n<p>tmux窗口左下角状态显示用到了Powerline及Powerline字体，接着咱们来美化下tmux窗口。</p>\n<p>1.安装 Python<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install python</span><br></pre></td></tr></table></figure></p>\n<p>2.下载 <a href=\"https://github.com/powerline/powerline\" target=\"_blank\" rel=\"noopener\">powerline</a><br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo pip install powerline-status</span><br></pre></td></tr></table></figure></p>\n<p>3.配置 Powerline 到终端<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">查看安装路径</span></span><br><span class=\"line\">pip show powerline-status</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">配置 .bash_profile 文件,添加以下行</span></span><br><span class=\"line\">. /Powerline安装路径/powerline/bindings/bash/powerline.sh</span><br><span class=\"line\">source .bash_profile</span><br></pre></td></tr></table></figure></p>\n<p>4.安装专用于 <a href=\"https://github.com/powerline/fonts\" target=\"_blank\" rel=\"noopener\">Powerline</a> 的字体<br>然后在 iTerm 2的偏好设置里的Profile选项卡里把字体设置为以 Powerline 结尾的字体就大功告成了。</p>\n<p>PS：如果满足不了你的操作体验，你还可以：<br>安装配色方案 <a href=\"https://github.com/altercation/solarized\" target=\"_blank\" rel=\"noopener\">solarized</a><br>安装zsh主题 <a href=\"https://github.com/fcamblor/oh-my-zsh-agnoster-fcamblor\" target=\"_blank\" rel=\"noopener\">agnoster-fcamblor</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>上篇讲到了 <a href=\"http://www.jianshu.com/p/3436bcb17a03\" target=\"_blank\" rel=\"noopener\">iTerm2的基本使用</a> ，iTerm2能够让我们迅速从不同的窗口中切换。通过 iTerm2 ，我们可以在不同窗口中愉快用 ssh 登录到远处服务器去操作，但由于临时断网或其他原因，远程连接就会中断，如想继续之前的工作，又得重头来过T_T ,但是iTerm2有个 tmux 的配合，再也不用担心异常中断了，它可以让我们迅速恢复到之前的现场环境。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/3778142-7340859f88245de4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"tmux 窗格\"></p>\n<p><a href=\"http://tmux.github.io/\" target=\"_blank\" rel=\"noopener\">tmux</a> 是一个终端复用软件，它也有类似iTerm2的分屏功能。不仅如此，我们还可以通过tmux随时断开会话或者接入会话，接下一起来看下tmux 一些基本使用方法。</p>\n<h3 id=\"入门须知\"><a href=\"#入门须知\" class=\"headerlink\" title=\"入门须知\"></a>入门须知</h3><ul>\n<li>server服务器：输入tmux命令时就开启了一个服务器，可以开启多个会话。</li>\n<li>session: 管理多个window的会话</li>\n<li>window: 一个window就是整个屏幕</li>\n<li>pane: 一个window可以被横向或纵向分割为多个窗格</li>\n</ul>\n<p>即一个session可包含多个窗口，一个窗口中可包含多个窗格。<br>一般情况下 tmux 中所有的快捷键都需要和前缀快捷键 <figure class=\"highlight plain\"><figcaption><span>+ b``` 来组合使用。</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">### 安装tmux</span><br><span class=\"line\">``` shell</span><br><span class=\"line\">brew install tmux</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"运行-tmux\"><a href=\"#运行-tmux\" class=\"headerlink\" title=\"运行 tmux\"></a>运行 tmux</h3><p>开启了一个 tmux 的会话，默认会新建一个窗口和一个窗格，窗口左下角会有一些标识信息。<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tmux</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/3778142-64ef52c19d9ef73e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"tmux默认窗口\"></p>\n<h3 id=\"会话常用命令\"><a href=\"#会话常用命令\" class=\"headerlink\" title=\"会话常用命令\"></a>会话常用命令</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">在正常终端模式下使用 tmux 建立会话并命名</span></span><br><span class=\"line\">tmux new -s abc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">休眠会话 返回主shell- 在正常终端模式下，使某个编号的会话强制休眠，编号用的是 tmux ls 命令时所列出的每一行的最前面的那个编号</span></span><br><span class=\"line\">tmux detach -t 编号</span><br><span class=\"line\">tmux detach -s 名称</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">恢复会话</span></span><br><span class=\"line\">tmux attach -t 编号</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># 也可简写成</span></span></span><br><span class=\"line\">tmux a -t 编号</span><br><span class=\"line\">tmux attach -s test</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">重命名会话名称</span></span><br><span class=\"line\">tmux rename -t test dev</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">关闭会话</span></span><br><span class=\"line\">tmux kill-session -t abc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 完全退出，关闭所有的会话</span></span><br><span class=\"line\">tmux kill-server</span><br></pre></td></tr></table></figure>\n<h3 id=\"窗口常用命令\"><a href=\"#窗口常用命令\" class=\"headerlink\" title=\"窗口常用命令\"></a>窗口常用命令</h3><p>假设当前默认前缀为 : Ctrl+b<br> <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;前缀&#125; c 创建新窗口</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;前缀&#125; n 选择下一个窗口</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;前缀&#125; p 选择前一个窗口</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;前缀&#125; l 最近一次活跃窗口之间进行切换</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;前缀&#125; 0~9 选择几号窗口</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;前缀&#125; , 重命名窗口</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;前缀&#125; . 更改窗口的编号，但只能更改成未使用的编号，所以要交换窗口的话，得更改多次进行交换</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;前缀&#125; &amp; 关闭窗口</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;前缀&#125; w 以菜单方式显示及选择窗口</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;前缀&#125; f 在所有窗口中查找内容</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"窗格常用命令\"><a href=\"#窗格常用命令\" class=\"headerlink\" title=\"窗格常用命令\"></a>窗格常用命令</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;前缀&#125; \" 模向分隔面板</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;前缀&#125; % 纵向分隔面板</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;前缀&#125; o 跳到下一个分隔面板</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;前缀&#125; x 关闭面板</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;前缀&#125; ; 切换到最后一个使用的面板</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;前缀&#125; 上下键 上一个及下一个分隔面板</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;前缀&#125; 空格键 切换面板布局</span><br></pre></td></tr></table></figure>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;前缀&#125; t 显示时钟</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;前缀&#125; m 鼠标切换窗格</span><br></pre></td></tr></table></figure>\n<p>看到这里，尝试后是不是觉得很奇怪，自己打开的窗口，怎么和本页面第一张图不一样！不一样！ 首先恭喜你已经掌握了tmux基本操作，接下来咱们看下tmux高级用法。</p>\n<p>###高级配置<br>tmux 自定义配置<a href=\"https://github.com/gpakosz/.tmux\" target=\"_blank\" rel=\"noopener\">参见 .tmux</a></p>\n<hr>\n<p>tmux窗口左下角状态显示用到了Powerline及Powerline字体，接着咱们来美化下tmux窗口。</p>\n<p>1.安装 Python<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install python</span><br></pre></td></tr></table></figure></p>\n<p>2.下载 <a href=\"https://github.com/powerline/powerline\" target=\"_blank\" rel=\"noopener\">powerline</a><br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo pip install powerline-status</span><br></pre></td></tr></table></figure></p>\n<p>3.配置 Powerline 到终端<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">查看安装路径</span></span><br><span class=\"line\">pip show powerline-status</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">配置 .bash_profile 文件,添加以下行</span></span><br><span class=\"line\">. /Powerline安装路径/powerline/bindings/bash/powerline.sh</span><br><span class=\"line\">source .bash_profile</span><br></pre></td></tr></table></figure></p>\n<p>4.安装专用于 <a href=\"https://github.com/powerline/fonts\" target=\"_blank\" rel=\"noopener\">Powerline</a> 的字体<br>然后在 iTerm 2的偏好设置里的Profile选项卡里把字体设置为以 Powerline 结尾的字体就大功告成了。</p>\n<p>PS：如果满足不了你的操作体验，你还可以：<br>安装配色方案 <a href=\"https://github.com/altercation/solarized\" target=\"_blank\" rel=\"noopener\">solarized</a><br>安装zsh主题 <a href=\"https://github.com/fcamblor/oh-my-zsh-agnoster-fcamblor\" target=\"_blank\" rel=\"noopener\">agnoster-fcamblor</a></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjd332dzn0001c2mjc088x6na","category_id":"cjd332dzr0003c2mjbml6dnbc","_id":"cjd332dzx0009c2mj0ph9qixk"},{"post_id":"cjd332dzq0002c2mj04v37ntu","category_id":"cjd332dzr0003c2mjbml6dnbc","_id":"cjd332dzz000fc2mj50gkpg57"},{"post_id":"cjd332dzq0002c2mj04v37ntu","category_id":"cjd332dzy000bc2mjct0sj39o","_id":"cjd332dzz000hc2mje3x85z3b"},{"post_id":"cjd332e4k000ic2mjtpofev9l","category_id":"cjd332dzr0003c2mjbml6dnbc","_id":"cjd332e4t000rc2mjtxoqskpv"},{"post_id":"cjd332e4k000ic2mjtpofev9l","category_id":"cjd332dzy000bc2mjct0sj39o","_id":"cjd332e4v000uc2mj7wvhwmgc"},{"post_id":"cjd332e4o000mc2mjg6ym5gqz","category_id":"cjd332dzr0003c2mjbml6dnbc","_id":"cjd332e4w000xc2mjqy08d8yo"},{"post_id":"cjd332e4q000qc2mjtfd7oqe2","category_id":"cjd332dzr0003c2mjbml6dnbc","_id":"cjd332e4y0010c2mjc7usxtue"},{"post_id":"cjd332e4m000kc2mjwyaio0lf","category_id":"cjd332e4q000nc2mjw1v2le8w","_id":"cjd332e500013c2mj7o2yzqka"},{"post_id":"cjd332e4x000zc2mjrsgd7uc2","category_id":"cjd332dzr0003c2mjbml6dnbc","_id":"cjd332e510018c2mjhltwp8py"},{"post_id":"cjd332e4u000tc2mjk4l2zk2x","category_id":"cjd332e4x000yc2mj98qlbse2","_id":"cjd332e53001bc2mjekd3iauh"},{"post_id":"cjd332e4v000vc2mjxwprma4g","category_id":"cjd332e510016c2mjewdv3ky4","_id":"cjd332e54001hc2mjrt3rohja"},{"post_id":"cjd332e4z0011c2mj22mi7uc4","category_id":"cjd332e510016c2mjewdv3ky4","_id":"cjd332e55001lc2mj41sfok27"},{"post_id":"cjd332e500015c2mjbjdtk8f1","category_id":"cjd332e510016c2mjewdv3ky4","_id":"cjd332e56001oc2mjlgej71vu"}],"PostTag":[{"post_id":"cjd332dzn0001c2mjc088x6na","tag_id":"cjd332dzs0004c2mjjgj3w01t","_id":"cjd332dzx0008c2mjrahgmgd1"},{"post_id":"cjd332dzq0002c2mj04v37ntu","tag_id":"cjd332dzs0004c2mjjgj3w01t","_id":"cjd332dzy000dc2mje606fkrc"},{"post_id":"cjd332dzq0002c2mj04v37ntu","tag_id":"cjd332dzx000ac2mjdom4w3a8","_id":"cjd332dzz000ec2mjtbj2t1fv"},{"post_id":"cjd332dzt0005c2mj1qghhaan","tag_id":"cjd332dzy000cc2mjrpfjf6l2","_id":"cjd332dzz000gc2mj2pimi0aw"},{"post_id":"cjd332e4k000ic2mjtpofev9l","tag_id":"cjd332dzs0004c2mjjgj3w01t","_id":"cjd332e4o000lc2mjj7l7tsxd"},{"post_id":"cjd332e4k000ic2mjtpofev9l","tag_id":"cjd332dzx000ac2mjdom4w3a8","_id":"cjd332e4q000pc2mj5iv9rtk3"},{"post_id":"cjd332e4o000mc2mjg6ym5gqz","tag_id":"cjd332dzs0004c2mjjgj3w01t","_id":"cjd332e4t000sc2mj1dt5c8ac"},{"post_id":"cjd332e4x000zc2mjrsgd7uc2","tag_id":"cjd332dzs0004c2mjjgj3w01t","_id":"cjd332e500014c2mjb4vgb5k0"},{"post_id":"cjd332e4m000kc2mjwyaio0lf","tag_id":"cjd332e4q000oc2mjrelecs4m","_id":"cjd332e510017c2mj8t0x2gj1"},{"post_id":"cjd332e4m000kc2mjwyaio0lf","tag_id":"cjd332e4w000wc2mjz3ty7djf","_id":"cjd332e52001ac2mjdr1mzlot"},{"post_id":"cjd332e4q000qc2mjtfd7oqe2","tag_id":"cjd332e500012c2mjzk7zyk3a","_id":"cjd332e53001dc2mjnwo49iex"},{"post_id":"cjd332e4q000qc2mjtfd7oqe2","tag_id":"cjd332dzs0004c2mjjgj3w01t","_id":"cjd332e54001ec2mjudozsnoq"},{"post_id":"cjd332e4u000tc2mjk4l2zk2x","tag_id":"cjd332e510019c2mj2uh035wq","_id":"cjd332e54001ic2mj4uwdyms8"},{"post_id":"cjd332e4u000tc2mjk4l2zk2x","tag_id":"cjd332dzs0004c2mjjgj3w01t","_id":"cjd332e55001jc2mjyonjwoaj"},{"post_id":"cjd332e4v000vc2mjxwprma4g","tag_id":"cjd332e54001fc2mj9ztmur0p","_id":"cjd332e55001mc2mjz8b7v59f"},{"post_id":"cjd332e4z0011c2mj22mi7uc4","tag_id":"cjd332e54001fc2mj9ztmur0p","_id":"cjd332e56001pc2mjr9sqbs6v"},{"post_id":"cjd332e500015c2mjbjdtk8f1","tag_id":"cjd332e56001nc2mj1o4991jv","_id":"cjd332e57001qc2mjcm1g3v0y"}],"Tag":[{"name":"js","_id":"cjd332dzs0004c2mjjgj3w01t"},{"name":"react native","_id":"cjd332dzx000ac2mjdom4w3a8"},{"name":"hexo","_id":"cjd332dzy000cc2mjrpfjf6l2"},{"name":"python","_id":"cjd332e4q000oc2mjrelecs4m"},{"name":"运维","_id":"cjd332e4w000wc2mjz3ty7djf"},{"name":"node","_id":"cjd332e500012c2mjzk7zyk3a"},{"name":"常见问题","_id":"cjd332e510019c2mj2uh035wq"},{"name":"linux","_id":"cjd332e54001fc2mj9ztmur0p"},{"name":"工具","_id":"cjd332e56001nc2mj1o4991jv"}]}}